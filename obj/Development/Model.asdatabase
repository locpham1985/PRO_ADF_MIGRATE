{
  "name": "VUSBI",
  "compatibilityLevel": 1400,
  "model": {
    "culture": "en-US",
    "dataSources": [
      {
        "type": "structured",
        "name": "SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV",
        "connectionDetails": {
          "protocol": "tds",
          "address": {
            "server": "vus-synapse-ws.sql.azuresynapse.net",
            "database": "VUSDWHDEV"
          },
          "authentication": null,
          "query": null
        },
        "credential": {
          "AuthenticationKind": "UsernamePassword",
          "kind": "SQL",
          "path": "vus-synapse-ws.sql.azuresynapse.net;VUSDWHDEV",
          "Username": "sqladminuser",
          "EncryptConnection": true
        }
      }
    ],
    "tables": [
      {
        "name": "Calendar",
        "dataCategory": "Time",
        "columns": [
          {
            "name": "Year",
            "dataType": "int64",
            "sourceColumn": "Year"
          },
          {
            "name": "Month Name",
            "dataType": "string",
            "sourceColumn": "Month Name",
            "sortByColumn": "Month Number"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "isKey": true,
            "sourceColumn": "Date",
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "Date Number",
            "dataType": "int64",
            "sourceColumn": "Date Number"
          },
          {
            "name": "Date Name",
            "dataType": "string",
            "sourceColumn": "Date Name"
          },
          {
            "name": "Week Of Month",
            "dataType": "int64",
            "sourceColumn": "Week Of Month"
          },
          {
            "name": "Week Of Year",
            "dataType": "string",
            "sourceColumn": "Week Of Year"
          },
          {
            "name": "Week Number",
            "dataType": "int64",
            "sourceColumn": "Week Number"
          },
          {
            "name": "Week Name",
            "dataType": "string",
            "sourceColumn": "Week Name"
          },
          {
            "name": "Month",
            "dataType": "string",
            "sourceColumn": "Month",
            "sortByColumn": "Month Number"
          },
          {
            "name": "Month Number",
            "dataType": "int64",
            "sourceColumn": "Month Number"
          },
          {
            "name": "Quarter",
            "dataType": "string",
            "sourceColumn": "Quarter"
          },
          {
            "name": "Quarter Number",
            "dataType": "int64",
            "sourceColumn": "Quarter Number"
          },
          {
            "name": "Quarter Name",
            "dataType": "string",
            "sourceColumn": "Quarter Name"
          },
          {
            "name": "Is Holiday",
            "dataType": "string",
            "sourceColumn": "Is Holiday"
          },
          {
            "name": "Holiday",
            "dataType": "string",
            "sourceColumn": "Holiday"
          },
          {
            "name": "Day Of Week VN",
            "dataType": "string",
            "sourceColumn": "Day Of Week VN"
          },
          {
            "name": "Period Type",
            "dataType": "string",
            "sourceColumn": "Period Type"
          },
          {
            "name": "Period Type Order",
            "dataType": "int64",
            "sourceColumn": "Period Type Order"
          },
          {
            "name": "Closing Flag",
            "dataType": "string",
            "sourceColumn": "Closing Flag"
          },
          {
            "name": "Date Type",
            "dataType": "string",
            "sourceColumn": "Date Type"
          },
          {
            "name": "Back 30 Working Day",
            "dataType": "dateTime",
            "sourceColumn": "Back 30 Working Day"
          },
          {
            "name": "Date Key",
            "dataType": "int64",
            "sourceColumn": "Date Key"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_CALENDAR_D = Source{[Schema=\"DWH\",Item=\"VW_CALENDAR_D\"]}[Data]",
                "in",
                "    DWH_VW_CALENDAR_D"
              ]
            }
          }
        ]
      },
      {
        "name": "Course",
        "columns": [
          {
            "name": "Level Key",
            "dataType": "string",
            "sourceColumn": "Level Key"
          },
          {
            "name": "Course Type Key",
            "dataType": "string",
            "sourceColumn": "Course Type Key"
          },
          {
            "name": "Level Code",
            "dataType": "string",
            "sourceColumn": "Level Code"
          },
          {
            "name": "Level Name",
            "dataType": "string",
            "sourceColumn": "Level Name"
          },
          {
            "name": "Level value",
            "dataType": "int64",
            "sourceColumn": "Level Value"
          },
          {
            "name": "Course Type Code",
            "dataType": "string",
            "sourceColumn": "Course Type Code"
          },
          {
            "name": "Course Type Name",
            "dataType": "string",
            "sourceColumn": "Course Type Name"
          },
          {
            "name": "Level Group Code",
            "dataType": "string",
            "sourceColumn": "Level Group Code"
          },
          {
            "name": "Course Type Group Code",
            "dataType": "string",
            "sourceColumn": "Course Type Group Code"
          },
          {
            "name": "Course Type Group Name",
            "dataType": "string",
            "sourceColumn": "Course Type Group Name"
          },
          {
            "name": "Other Group Code",
            "dataType": "string",
            "sourceColumn": "Other Group Code"
          },
          {
            "name": "Course Type Category Code",
            "dataType": "string",
            "sourceColumn": "Course Type Category Code"
          },
          {
            "name": "Course Type Category Name",
            "dataType": "string",
            "sourceColumn": "Course Type Category Name"
          },
          {
            "name": "Is Corp",
            "dataType": "int64",
            "sourceColumn": "Is Corp"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_COURSE_D = Source{[Schema=\"DWH\",Item=\"VW_COURSE_D\"]}[Data]",
                "in",
                "    DWH_VW_COURSE_D"
              ]
            }
          }
        ]
      },
      {
        "name": "Campus",
        "columns": [
          {
            "name": "ASA Branch Key",
            "dataType": "string",
            "sourceColumn": "ASA Branch Key"
          },
          {
            "name": "Address",
            "dataType": "string",
            "sourceColumn": "Address"
          },
          {
            "name": "Email",
            "dataType": "string",
            "sourceColumn": "Email"
          },
          {
            "name": "Phone",
            "dataType": "string",
            "sourceColumn": "Phone"
          },
          {
            "name": "Director",
            "dataType": "string",
            "sourceColumn": "Director"
          },
          {
            "name": "Enabled",
            "dataType": "int64",
            "sourceColumn": "Enabled"
          },
          {
            "name": "TaxNumber",
            "dataType": "string",
            "sourceColumn": "TaxNumber"
          },
          {
            "name": "Current Invoice Number",
            "dataType": "int64",
            "sourceColumn": "Current Invoice Number"
          },
          {
            "name": "Invoice Code",
            "dataType": "string",
            "sourceColumn": "Invoice Code"
          },
          {
            "name": "Current Receipt Number",
            "dataType": "int64",
            "sourceColumn": "Current Receipt Number"
          },
          {
            "name": "City",
            "dataType": "string",
            "sourceColumn": "City"
          },
          {
            "name": "Area Code",
            "dataType": "string",
            "sourceColumn": "Area Code"
          },
          {
            "name": "Area Name",
            "dataType": "string",
            "sourceColumn": "Area Name"
          },
          {
            "name": "Province Code",
            "dataType": "string",
            "sourceColumn": "Province Code"
          },
          {
            "name": "Province Name",
            "dataType": "string",
            "sourceColumn": "Province Name"
          },
          {
            "name": "Country Code",
            "dataType": "string",
            "sourceColumn": "Country Code"
          },
          {
            "name": "Country Name",
            "dataType": "string",
            "sourceColumn": "Country Name"
          },
          {
            "name": "QLGV Branch Key",
            "dataType": "string",
            "sourceColumn": "QLGV Branch Key"
          },
          {
            "name": "Campus Code",
            "dataType": "string",
            "sourceColumn": "Branch Code"
          },
          {
            "name": "Campus Code Old",
            "dataType": "string",
            "sourceColumn": "Branch Code Old"
          },
          {
            "name": "Campus Name",
            "dataType": "string",
            "sourceColumn": "Branch Name"
          },
          {
            "name": "Campus Name Old",
            "dataType": "string",
            "sourceColumn": "Branch Name Old"
          },
          {
            "name": "Campus TQM",
            "dataType": "string",
            "sourceColumn": "BranchTQM"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_CAMPUS_D = Source{[Schema=\"DWH\",Item=\"VW_CAMPUS_D\"]}[Data]",
                "in",
                "    DWH_VW_CAMPUS_D"
              ]
            }
          }
        ]
      },
      {
        "name": "List Class",
        "columns": [
          {
            "name": "List Class Key",
            "dataType": "string",
            "sourceColumn": "List Class Key"
          },
          {
            "name": "ASA Branch Key",
            "dataType": "string",
            "sourceColumn": "ASA Branch Key"
          },
          {
            "name": "ListClassID",
            "dataType": "string",
            "sourceColumn": "ListClassID"
          },
          {
            "name": "BranchID",
            "dataType": "string",
            "sourceColumn": "BranchID"
          },
          {
            "name": "ListCourseID",
            "dataType": "string",
            "sourceColumn": "ListCourseID"
          },
          {
            "name": "ListRoomID",
            "dataType": "string",
            "sourceColumn": "ListRoomID"
          },
          {
            "name": "ListClassCode",
            "dataType": "string",
            "sourceColumn": "ListClassCode"
          },
          {
            "name": "ListClassName",
            "dataType": "string",
            "sourceColumn": "ListClassName"
          },
          {
            "name": "ListTimeSchemaID",
            "dataType": "string",
            "sourceColumn": "ListTimeSchemaID"
          },
          {
            "name": "DateOfOpen",
            "dataType": "dateTime",
            "sourceColumn": "DateOfOpen"
          },
          {
            "name": "DateOfClose",
            "dataType": "dateTime",
            "sourceColumn": "DateOfClose"
          },
          {
            "name": "StatusTQM",
            "dataType": "int64",
            "sourceColumn": "StatusTQM"
          },
          {
            "name": "IsMergeClass",
            "dataType": "boolean",
            "sourceColumn": "IsMergeClass"
          },
          {
            "name": "IsVirtual",
            "dataType": "boolean",
            "sourceColumn": "IsVirtual"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_LIST_CLASS_D = Source{[Schema=\"DWH\",Item=\"VW_LIST_CLASS_D\"]}[Data]",
                "in",
                "    DWH_VW_LIST_CLASS_D"
              ]
            }
          }
        ]
      },
      {
        "name": "Student",
        "columns": [
          {
            "name": "Student Key",
            "dataType": "string",
            "sourceColumn": "Student Key"
          },
          {
            "name": "User Information Code",
            "dataType": "string",
            "sourceColumn": "User Information Code"
          },
          {
            "name": "Student Code",
            "dataType": "string",
            "sourceColumn": "Student Code"
          },
          {
            "name": "Username",
            "dataType": "string",
            "sourceColumn": "Username"
          },
          {
            "name": "Student Name",
            "dataType": "string",
            "sourceColumn": "Student Name"
          },
          {
            "name": "Student Address",
            "dataType": "string",
            "sourceColumn": "Student Address"
          },
          {
            "name": "Student Mobile",
            "dataType": "string",
            "sourceColumn": "Student Mobile"
          },
          {
            "name": "User Information Type",
            "dataType": "string",
            "sourceColumn": "User Information Type"
          },
          {
            "name": "Source Information Group Code",
            "dataType": "string",
            "sourceColumn": "Source Information Group Code"
          },
          {
            "name": "Source Information GroupName",
            "dataType": "string",
            "sourceColumn": "Source Information GroupName"
          },
          {
            "name": "Consultant Type Name",
            "dataType": "string",
            "sourceColumn": "Consultant Type Name"
          },
          {
            "name": "Consultant English Name",
            "dataType": "string",
            "sourceColumn": "Consultant English Name"
          },
          {
            "name": "Process Name",
            "dataType": "string",
            "sourceColumn": "Process Name"
          },
          {
            "name": "User Information Type Name",
            "dataType": "string",
            "sourceColumn": "User Information Type Name"
          },
          {
            "name": "Occupation Code",
            "dataType": "string",
            "sourceColumn": "Occupation Code"
          },
          {
            "name": "Occupation Name",
            "dataType": "string",
            "sourceColumn": "Occupation Name"
          },
          {
            "name": "Occupation Detail Name",
            "dataType": "string",
            "sourceColumn": "Occupation Detail Name"
          },
          {
            "name": "Information Name",
            "dataType": "string",
            "sourceColumn": "Information Name"
          },
          {
            "name": "Information Code",
            "dataType": "string",
            "sourceColumn": "Information Code"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_STUDENT_D = Source{[Schema=\"DWH\",Item=\"VW_STUDENT_D\"]}[Data]",
                "in",
                "    DWH_VW_STUDENT_D"
              ]
            }
          }
        ]
      },
      {
        "name": "Teacher",
        "columns": [
          {
            "name": "Teacher Key",
            "dataType": "string",
            "sourceColumn": "Teacher Key"
          },
          {
            "name": "Teacher HRT Key",
            "dataType": "string",
            "sourceColumn": "Teacher HRT Key"
          },
          {
            "name": "Teacher Code",
            "dataType": "string",
            "sourceColumn": "Teacher Code"
          },
          {
            "name": "First Name",
            "dataType": "string",
            "sourceColumn": "First Name"
          },
          {
            "name": "Last Name",
            "dataType": "string",
            "sourceColumn": "Last Name"
          },
          {
            "name": "Full Name",
            "dataType": "string",
            "sourceColumn": "Full Name"
          },
          {
            "name": "User Name",
            "dataType": "string",
            "sourceColumn": "User Name"
          },
          {
            "name": "Email",
            "dataType": "string",
            "sourceColumn": "Email"
          },
          {
            "name": "Sex",
            "dataType": "string",
            "sourceColumn": "Sex"
          },
          {
            "name": "Address",
            "dataType": "string",
            "sourceColumn": "Address"
          },
          {
            "name": "Home Phone",
            "dataType": "string",
            "sourceColumn": "Home Phone"
          },
          {
            "name": "Work Phone",
            "dataType": "string",
            "sourceColumn": "Work Phone"
          },
          {
            "name": "Mobile",
            "dataType": "string",
            "sourceColumn": "Mobile"
          },
          {
            "name": "Enabled",
            "dataType": "int64",
            "sourceColumn": "Enabled"
          },
          {
            "name": "Is Foreign",
            "dataType": "int64",
            "sourceColumn": "Is Foreign"
          },
          {
            "name": "Priority",
            "dataType": "int64",
            "sourceColumn": "Priority"
          },
          {
            "name": "Skill Note",
            "dataType": "string",
            "sourceColumn": "Skill Note"
          },
          {
            "name": "Is TA",
            "dataType": "int64",
            "sourceColumn": "Is TA"
          },
          {
            "name": "Is Full Time",
            "dataType": "int64",
            "sourceColumn": "Is Full Time"
          },
          {
            "name": "Is Young Program",
            "dataType": "int64",
            "sourceColumn": "Is Young Program"
          },
          {
            "name": "Is Children Program",
            "dataType": "int64",
            "sourceColumn": "Is Children Program"
          },
          {
            "name": "Rate Teacher",
            "dataType": "double",
            "sourceColumn": "Rate Teacher"
          },
          {
            "name": "Rate TA",
            "dataType": "double",
            "sourceColumn": "Rate TA"
          },
          {
            "name": "Salary Head Teacher",
            "dataType": "double",
            "sourceColumn": "Salary Head Teacher"
          },
          {
            "name": "Salary Office Teacher",
            "dataType": "double",
            "sourceColumn": "Salary Office Teacher"
          },
          {
            "name": "Start Date",
            "dataType": "dateTime",
            "sourceColumn": "Start Date"
          },
          {
            "name": "End Date",
            "dataType": "dateTime",
            "sourceColumn": "End Date"
          },
          {
            "name": "Is Temp",
            "dataType": "int64",
            "sourceColumn": "Is Temp"
          },
          {
            "name": "Teacher Type",
            "dataType": "string",
            "sourceColumn": "Teacher Type"
          },
          {
            "name": "Nationalities Name",
            "dataType": "string",
            "sourceColumn": "Nationalities Name"
          },
          {
            "name": "Species",
            "dataType": "string",
            "sourceColumn": "Species"
          },
          {
            "name": "Worked Year",
            "dataType": "int64",
            "sourceColumn": "Worked Year"
          },
          {
            "name": "Worked Group Year",
            "dataType": "string",
            "sourceColumn": "Worked Group Year"
          },
          {
            "name": "Date of Birth",
            "dataType": "dateTime",
            "sourceColumn": "Date of Birth"
          },
          {
            "name": "Teacher Age",
            "dataType": "int64",
            "sourceColumn": "Teacher Age"
          },
          {
            "name": "Teacher Contract Type",
            "dataType": "string",
            "sourceColumn": "Teacher Contract Type"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_TEACHER_D = Source{[Schema=\"DWH\",Item=\"VW_TEACHER_D\"]}[Data]",
                "in",
                "    DWH_VW_TEACHER_D"
              ]
            }
          }
        ]
      },
      {
        "name": "General Information",
        "columns": [
          {
            "name": "Date Key",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Date Key"
          },
          {
            "name": "Open Date",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Open Date"
          },
          {
            "name": "Close Date",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Close Date"
          },
          {
            "name": "Branch Key",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Branch Key"
          },
          {
            "name": "List Class Key",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "List Class Key"
          },
          {
            "name": "Course Key",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Course Key"
          },
          {
            "name": "Level Key",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Level Key"
          },
          {
            "name": "List Class Code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "List Class Code"
          },
          {
            "name": "TotalOfStudent",
            "dataType": "int64",
            "sourceColumn": "TotalOfStudent"
          },
          {
            "type": "calculated",
            "name": "ClassGroupKey",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " 'General Information'[Branch Key]&\"~\"&'General Information'[List Class Key]&\"~\"&'General Information'[Course Key]&\"~\"&'General Information'[Level Key]"
          },
          {
            "name": "Class State Flag",
            "dataType": "string",
            "sourceColumn": "Class State Flag"
          },
          {
            "name": "iTalk Flag",
            "dataType": "string",
            "sourceColumn": "iTalk Flag"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_GENERAL_INFO_F = Source{[Schema=\"DWH\",Item=\"VW_GENERAL_INFO_F\"]}[Data]",
                "in",
                "    DWH_VW_GENERAL_INFO_F"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "# of Campus",
            "expression": [
              " ",
              "--CALCULATE(DISTINCTCOUNT('General Information'[Branch Key]))",
              "var t_date = max('Calendar'[Date Key])",
              "return CALCULATE(DISTINCTCOUNT('General Information'[Branch Key]),'General Information'[Date Key]=t_date)",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "# of Class",
            "expression": [
              " ",
              "--CALCULATE(DISTINCTCOUNT('General Information'[List Class Key]))",
              "var t_date = max('Calendar'[Date Key])",
              "return CALCULATE(DISTINCTCOUNT('General Information'[List Class Key]),'General Information'[Date Key]=t_date)",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "# of Student",
            "expression": [
              " ",
              "--SUMX(DISTINCT('General Information'[ClassGroupKey]),MAXX(DISTINCT('General Information'[ClassGroupKey]),max('General Information'[TotalOfStudent])))",
              "var t_date = max('Calendar'[Date Key])",
              "--turn SUMX(DISTINCT('General Information'[ClassGroupKey]),MAXX(DISTINCT('General Information'[ClassGroupKey]),CALCULATE(max('General Information'[TotalOfStudent]),'General Information'[Date Key]=t_date)))",
              "return CALCULATE(sum('General Information'[TotalOfStudent]),'General Information'[Date Key]=t_date)"
            ],
            "formatString": "#,0"
          },
          {
            "name": "# of Teacher",
            "expression": [
              " ",
              "var t_date = max('Calendar'[Date Key])",
              "return CALCULATE(DISTINCTCOUNT('Teacher Assignment'[Teacher Key]),'Teacher Assignment'[Date Key]=t_date)"
            ],
            "formatString": "#,0"
          },
          {
            "name": "# of Expat Teachers",
            "expression": [
              " ",
              "var t_date = max('Calendar'[Date Key])",
              "return CALCULATE(DISTINCTCOUNT('Teacher Assignment'[Teacher Key]),'Teacher Assignment'[Date Key]=t_date,'Teacher Assignment'[Teacher Type]=\"NN\")"
            ]
          },
          {
            "name": "# of VN Teachers",
            "expression": [
              "",
              "--CALCULATE(DISTINCTCOUNT('Teacher Assignment'[Teacher Key]),'Teacher Assignment'[Teacher Type]=\"VN\")",
              "var t_date = max('Calendar'[Date Key])",
              "return CALCULATE(DISTINCTCOUNT('Teacher Assignment'[Teacher Key]),'Teacher Assignment'[Date Key]=t_date,'Teacher Assignment'[Teacher Type]=\"VN\")"
            ]
          },
          {
            "name": "# of Assistant Teachers",
            "expression": [
              " ",
              "--CALCULATE(DISTINCTCOUNT('Teacher Assignment'[Teacher Key]),'Teacher Assignment'[Teacher Type]=\"TA\")",
              "var t_date = max('Calendar'[Date Key])",
              "return CALCULATE(DISTINCTCOUNT('Teacher Assignment'[Teacher Key]),'Teacher Assignment'[Date Key]=t_date,'Teacher Assignment'[Teacher Type]=\"TA\")"
            ]
          },
          {
            "name": "# of Partime Teacher",
            "expression": " [# of Teacher] - [# of Fulltime Teacher]",
            "formatString": "#,0"
          },
          {
            "name": "% Teacher Fulltime vs Partime",
            "expression": " DIVIDE([# of Fulltime Teacher],[# of Partime Teacher],BLANK())",
            "formatString": "#,0.00%;-#,0.00%;#,0.00%"
          },
          {
            "name": "# of Teacher In",
            "expression": " CALCULATE(DISTINCTCOUNT('Teacher In Out'[Teacher Key]),'Teacher In Out'[Version Data]=\"Start\")",
            "formatString": "#,0"
          },
          {
            "name": "# of Teacher Out",
            "expression": " CALCULATE(DISTINCTCOUNT('Teacher In Out'[Teacher Key]),'Teacher In Out'[Version Data]=\"End\")",
            "formatString": "#,0"
          },
          {
            "name": "# of Nornal Class",
            "expression": " CALCULATE(DISTINCTCOUNT('General Information'[List Class Key]),'General Information'[iTalk Flag]=\"N\")",
            "formatString": "#,0"
          },
          {
            "name": "# of iTalk Class",
            "expression": " CALCULATE(DISTINCTCOUNT('General Information'[List Class Key]),'General Information'[iTalk Flag]=\"Y\")",
            "formatString": "#,0"
          },
          {
            "name": "# of Opening Class",
            "expression": " CALCULATE(DISTINCTCOUNT('General Information'[List Class Key]), 'General Information'[iTalk Flag]=\"N\",'General Information'[Class State Flag]=\"O\")",
            "formatString": "#,0"
          },
          {
            "name": "# of Closing Class",
            "expression": " CALCULATE(DISTINCTCOUNT('Class Close'[List Class Key]), 'Class Close'[iTalk Flag]=\"N\",'Class Close'[Class State Flag]=\"C\")",
            "formatString": "#,0"
          },
          {
            "name": "# of Fulltime Teacher",
            "expression": [
              " ",
              "--CALCULATE(DISTINCTCOUNT('Teacher Assignment'[Teacher Key]),'Teacher Assignment'[Full Time Flag]=\"Yes\")",
              "var t_date = max('Calendar'[Date Key])",
              "return CALCULATE(DISTINCTCOUNT('Teacher Assignment'[Teacher Key]),'Teacher Assignment'[Date Key]=t_date,'Teacher Assignment'[Full Time Flag]=\"Yes\")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "# of VUS Teacher",
            "expression": [
              " ",
              "var t_date = max('Calendar'[Date Key])",
              "return CALCULATE(DISTINCTCOUNT('Teacher Assignment VUS'[Teacher Key]),'Teacher Assignment'[Date Key]=t_date)"
            ],
            "formatString": "#,0"
          },
          {
            "name": "# of Fulltime VUS Teacher",
            "expression": [
              " ",
              "--CALCULATE(DISTINCTCOUNT('Teacher Assignment VUS'[Teacher Key]),'Teacher Assignment VUS'[Full Time Flag]=\"Yes\")",
              "var t_date = max('Calendar'[Date Key])",
              "return CALCULATE(DISTINCTCOUNT('Teacher Assignment VUS'[Teacher Key]),'Teacher Assignment VUS'[Date Key]=t_date,'Teacher Assignment VUS'[Full Time Flag]=\"Yes\")",
              ""
            ]
          },
          {
            "name": "% Teacher vs VUS",
            "expression": " DIVIDE([# of Teacher], [# of VUS Teacher],BLANK())",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "% Fulltime Teacher vs Fulltime VUS",
            "expression": " DIVIDE( [# of Fulltime Teacher],[# of Fulltime VUS Teacher],BLANK())",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Turnover Rate",
            "expression": " DIVIDE([# of Teacher Out],[# of Teacher],BLANK())",
            "formatString": "#,0.0%;-#,0.0%;#,0.0%"
          },
          {
            "name": "% Fulltime Teacher vs Total Teacher",
            "expression": " DIVIDE( [# of Fulltime Teacher],[# of Teacher],BLANK())",
            "formatString": "#,0.00%;-#,0.00%;#,0.00%"
          },
          {
            "name": "Avg Teacher Age",
            "expression": " CALCULATE(AVERAGE(Teacher[Teacher Age]))",
            "formatString": "#,0"
          }
        ]
      },
      {
        "name": "Teacher Schedule",
        "isHidden": true,
        "columns": [
          {
            "name": "Date Key",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Date Key"
          },
          {
            "name": "Branch Key",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Branch Key"
          },
          {
            "name": "List Class Key",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "List Class Key"
          },
          {
            "name": "Teacher Key",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Teacher Key"
          },
          {
            "name": "Course Key",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Course Key"
          },
          {
            "name": "Level Key",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Level Key"
          },
          {
            "name": "List Class Code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "List Class Code"
          },
          {
            "name": "Teacher Code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Teacher Code"
          },
          {
            "name": "Course Code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Course Code"
          },
          {
            "name": "Lession Content",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Lession Content"
          },
          {
            "name": "Book Code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Book Code"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_TEACHER_SCHEDULE_F = Source{[Schema=\"DWH\",Item=\"VW_TEACHER_SCHEDULE_F\"]}[Data]",
                "in",
                "    DWH_VW_TEACHER_SCHEDULE_F"
              ]
            }
          }
        ]
      },
      {
        "name": "International Exam",
        "isHidden": true,
        "columns": [
          {
            "name": "Date Key",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Date Key"
          },
          {
            "name": "ASA Branch Key",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "ASA Branch Key"
          },
          {
            "name": "Student Key",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Student Key"
          },
          {
            "name": "List Class Key",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "List Class Key"
          },
          {
            "name": "Course Key",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Course Key"
          },
          {
            "name": "Level Key",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Level Key"
          },
          {
            "name": "International Exam Result ID",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "International Exam Result ID"
          },
          {
            "name": "Invoice ID",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Invoice ID"
          },
          {
            "name": "User Information ID",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "User Information ID"
          },
          {
            "name": "Branch ID",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Branch ID"
          },
          {
            "name": "Exam Period ID",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Exam Period ID"
          },
          {
            "name": "List Exam Period ID",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "List Exam Period ID"
          },
          {
            "name": "Give Certificate ID",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Give Certificate ID"
          },
          {
            "name": "Give Certificate Place ID",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Give Certificate Place ID"
          },
          {
            "name": "Code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Code"
          },
          {
            "name": "Actual Exam Date",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Actual Exam Date"
          },
          {
            "name": "Plan Exam Date",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Plan Exam Date"
          },
          {
            "name": "Received Date",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Received Date"
          },
          {
            "name": "Reveived Persion ",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Reveived Persion "
          },
          {
            "name": "Relationship Detail",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Relationship Detail"
          },
          {
            "name": "Name",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Name"
          },
          {
            "name": "FullName",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "FullName"
          },
          {
            "name": "Address",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Address"
          },
          {
            "name": "Reading_Writing",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Reading_Writing"
          },
          {
            "name": "Reading",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Reading"
          },
          {
            "name": "Listening",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Listening"
          },
          {
            "name": "Speaking",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Speaking"
          },
          {
            "name": "Writing",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Writing"
          },
          {
            "name": "Level Map",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Level Map"
          },
          {
            "name": "Total",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Total"
          },
          {
            "name": "Intermediate Status",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Intermediate Status"
          },
          {
            "name": "PET/KET Status",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "PET/KET Status"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_INTERNATIONAL_SCORE_F = Source{[Schema=\"DWH\",Item=\"VW_INTERNATIONAL_SCORE_F\"]}[Data]",
                "in",
                "    DWH_VW_INTERNATIONAL_SCORE_F"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "# of Starter High Score Student",
            "expression": " CALCULATE(DISTINCTCOUNT('International Exam'[User Information ID]),'International Exam'[Intermediate Status]=\"Starters_High\")",
            "formatString": "#,0"
          },
          {
            "name": "# of Mover High Score Student",
            "expression": " CALCULATE(DISTINCTCOUNT('International Exam'[User Information ID]),'International Exam'[Intermediate Status]=\"Movers_High\")",
            "formatString": "#,0"
          },
          {
            "name": "# of Flyer High Score Student",
            "expression": " CALCULATE(DISTINCTCOUNT('International Exam'[User Information ID]),'International Exam'[Intermediate Status]=\"Flyers_High\")",
            "formatString": "#,0"
          },
          {
            "name": "# of Starter Student",
            "expression": " CALCULATE(DISTINCTCOUNT('International Exam'[User Information ID]),'International Exam'[Name]=\"STARTERS\")",
            "formatString": "#,0"
          },
          {
            "name": "# of Mover Student",
            "expression": " CALCULATE(DISTINCTCOUNT('International Exam'[User Information ID]),'International Exam'[Name]=\"MOVERS\")",
            "formatString": "#,0"
          },
          {
            "name": "# of Flyer Student",
            "expression": " CALCULATE(DISTINCTCOUNT('International Exam'[User Information ID]),'International Exam'[Name]=\"FLYERS\")",
            "formatString": "#,0"
          },
          {
            "name": "% Starter High Score",
            "expression": " DIVIDE([# of Starter High Score Student],[# of Starter Student],BLANK())",
            "formatString": "#,0.00%;-#,0.00%;#,0.00%"
          },
          {
            "name": "% Mover High Score",
            "expression": " DIVIDE([# of Mover High Score Student],[# of Mover Student],BLANK())",
            "formatString": "#,0.00%;-#,0.00%;#,0.00%"
          },
          {
            "name": "% Flyer High Score",
            "expression": " DIVIDE([# of Flyer High Score Student],[# of Flyer Student],BLANK())",
            "formatString": "#,0.00%;-#,0.00%;#,0.00%"
          },
          {
            "name": "# of PET High Score Student",
            "expression": " CALCULATE(DISTINCTCOUNT('International Exam'[User Information ID]),'International Exam'[PET/KET Status]=\"Pass\",'International Exam'[Name]=\"PET\")",
            "formatString": "#,0"
          },
          {
            "name": "# of KET High Score Student",
            "expression": " CALCULATE(DISTINCTCOUNT('International Exam'[User Information ID]),'International Exam'[PET/KET Status]=\"Pass\",'International Exam'[Name]=\"KET\")",
            "formatString": "#,0"
          },
          {
            "name": "# of PET Student",
            "expression": " CALCULATE(DISTINCTCOUNT('International Exam'[User Information ID]),'International Exam'[Name]=\"PET\")",
            "formatString": "#,0"
          },
          {
            "name": "# of KET Student",
            "expression": " CALCULATE(DISTINCTCOUNT('International Exam'[User Information ID]),'International Exam'[Name]=\"KET\")",
            "formatString": "#,0"
          },
          {
            "name": "% PET High Score",
            "expression": " DIVIDE([# of PET High Score Student],[# of PET Student],BLANK())",
            "formatString": "#,0.00%;-#,0.00%;#,0.00%"
          },
          {
            "name": "% KET High Score",
            "expression": " DIVIDE([# of KET High Score Student],[# of KET Student],BLANK())",
            "formatString": "#,0.00%;-#,0.00%;#,0.00%"
          },
          {
            "name": "Avg IELTS Score Actual",
            "expression": " CALCULATE(AVERAGE('International Exam'[Total]),'International Exam'[Name]=\"IELTS\")",
            "formatString": "#,0.00"
          },
          {
            "name": "# of Archivement Program",
            "expression": [
              " ",
              "\tIF([% Starter High Score] >= [% Starter Benchmark],1,0)",
              "\t+ IF([% Mover High Score]>= [% Mover Benchmark],1,0)",
              "\t+ IF([% Flyer High Score]>=[% Flyer Benchmark],1,0)",
              "\t+ IF([% KET High Score]>=[% KET Benchmark],1,0)",
              "\t+ IF([% PET High Score]>=[% PET Benchmark],1,0)",
              "\t+ IF([Avg IELTS Score Actual]>=[Avg IELTS Benchmark],1,0)"
            ],
            "formatString": "0"
          },
          {
            "name": "% Starter Benchmark",
            "expression": " DIVIDE(75.4,100,BLANK())",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "% Mover Benchmark",
            "expression": " DIVIDE(65.4,100,BLANK())",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "% Flyer Benchmark",
            "expression": " DIVIDE(64.5,100,BLANK())",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "% KET Benchmark",
            "expression": " DIVIDE(81.4,100,BLANK())",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "% PET Benchmark",
            "expression": " DIVIDE(66.9,100,BLANK())",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "Avg IELTS Benchmark",
            "expression": " 6.1",
            "formatString": "#,0.0"
          }
        ]
      },
      {
        "name": "Teaching Cost Gross",
        "isHidden": true,
        "columns": [
          {
            "name": "Date Key",
            "dataType": "int64",
            "sourceColumn": "Date Key"
          },
          {
            "name": "Branch Key",
            "dataType": "string",
            "sourceColumn": "Branch Key"
          },
          {
            "name": "Teacher Key",
            "dataType": "string",
            "sourceColumn": "Teacher Key"
          },
          {
            "name": "Gross Teaching Cost ID",
            "dataType": "string",
            "sourceColumn": "Gross Teaching Cost ID"
          },
          {
            "name": "Current Branch ID",
            "dataType": "string",
            "sourceColumn": "Current Branch ID"
          },
          {
            "name": "Teacher Profile ID",
            "dataType": "string",
            "sourceColumn": "Teacher Profile ID"
          },
          {
            "name": "Campus Code",
            "dataType": "string",
            "sourceColumn": "Campus Code"
          },
          {
            "name": "Teacher Type",
            "dataType": "string",
            "sourceColumn": "Teacher Type"
          },
          {
            "name": "Total Hour All Branch",
            "dataType": "double",
            "sourceColumn": "Total Hour All Branch"
          },
          {
            "name": "Total Placement Test VND",
            "dataType": "double",
            "sourceColumn": "Total Placement Test VND"
          },
          {
            "name": "Money Not Pay Tax",
            "dataType": "double",
            "sourceColumn": "Money Not Pay Tax"
          },
          {
            "name": "Rate Tax TNCN",
            "dataType": "double",
            "sourceColumn": "Rate Tax TNCN"
          },
          {
            "name": "Total Extra Pay",
            "dataType": "double",
            "sourceColumn": "Total Extra Pay"
          },
          {
            "name": "Total Advance Payment",
            "dataType": "double",
            "sourceColumn": "Total Advance Payment"
          },
          {
            "name": "Rate Teacher",
            "dataType": "double",
            "sourceColumn": "Rate Teacher"
          },
          {
            "name": "Rate TA",
            "dataType": "double",
            "sourceColumn": "Rate TA"
          },
          {
            "name": "Current Rate",
            "dataType": "double",
            "sourceColumn": "Current Rate"
          },
          {
            "name": "USD Rate",
            "dataType": "double",
            "sourceColumn": "USD Rate"
          },
          {
            "name": "Salary Month Year ",
            "dataType": "string",
            "sourceColumn": "Salary Month Year "
          },
          {
            "name": "Gross Tax",
            "dataType": "double",
            "sourceColumn": "Gross Tax"
          },
          {
            "name": "Gross Cost",
            "dataType": "double",
            "sourceColumn": "Gross Cost"
          },
          {
            "name": "Gross Salary",
            "dataType": "double",
            "sourceColumn": "Gross Salary"
          },
          {
            "name": "Gross",
            "dataType": "double",
            "sourceColumn": "Gross"
          },
          {
            "name": "Balance",
            "dataType": "double",
            "sourceColumn": "Balance"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_TEACHING_COST_GROSS_F = Source{[Schema=\"DWH\",Item=\"VW_TEACHING_COST_GROSS_F\"]}[Data]",
                "in",
                "    DWH_VW_TEACHING_COST_GROSS_F"
              ]
            }
          }
        ]
      },
      {
        "name": "Academy Exam",
        "columns": [
          {
            "name": "Date Key",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Date Key"
          },
          {
            "name": "Branch Key",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Branch Key"
          },
          {
            "name": "Level Key",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Level Key"
          },
          {
            "name": "List Class Key",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "List Class Key"
          },
          {
            "name": "Student Key",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Student Key"
          },
          {
            "name": "Student Exam Result ID",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Student Exam Result ID"
          },
          {
            "name": "List Level Code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "List Level Code"
          },
          {
            "name": "List Class Code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "List Class Code"
          },
          {
            "name": "Exam Type",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Exam Type"
          },
          {
            "name": "List Level ID",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "List Level ID"
          },
          {
            "name": "List Class ID",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "List Class ID"
          },
          {
            "name": "List Class Name",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "List Class Name"
          },
          {
            "name": "Final Test Date",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Final Test Date"
          },
          {
            "name": "Grammar Score",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Grammar Score"
          },
          {
            "name": "Vocabulary Score",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Vocabulary Score"
          },
          {
            "name": "Listening Score",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Listening Score"
          },
          {
            "name": "Reading Score",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Reading Score"
          },
          {
            "name": "Writing Score",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Writing Score"
          },
          {
            "name": "Oral Score",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Oral Score"
          },
          {
            "name": "Final Score",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Final Score"
          },
          {
            "name": "Midle Term Score",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Midle Term Score"
          },
          {
            "name": "Final Score 2",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Final Score 2"
          },
          {
            "name": "Final Result",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Final Result"
          },
          {
            "name": "Final Note",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Final Note"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_ACADEMY_SCORE_F = Source{[Schema=\"DWH\",Item=\"VW_ACADEMY_SCORE_F\"]}[Data]",
                "in",
                "    DWH_VW_ACADEMY_SCORE_F"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Avg Academy Score Actual",
            "expression": " CALCULATE(AVERAGE('Academy Exam'[Final Score]))",
            "formatString": "#,0.00"
          },
          {
            "name": "Avg Academy Benchmark",
            "expression": " CALCULATE(AVERAGE(Benchmark[Benchmark]),Benchmark[BenchmarkType]=\"TQMAcademic\")",
            "formatString": "#,0.00"
          },
          {
            "name": "Avg Academy EAP Score Actual",
            "expression": " CALCULATE(AVERAGE('Academy Exam'[Final Score]),Course[Level Group Code]=\"EAP\")",
            "formatString": "#,0.00"
          },
          {
            "name": "Avg Academy EH Score Actual",
            "expression": " CALCULATE(AVERAGE('Academy Exam'[Final Score]),Course[Level Group Code]=\"EH\")",
            "formatString": "#,0.00"
          },
          {
            "name": "Avg Academy YI-YP Score Actual",
            "expression": " CALCULATE(AVERAGE('Academy Exam'[Final Score]),Course[Level Group Code]=\"YI-YP\")",
            "formatString": "#,0.00"
          },
          {
            "name": "Avg Academy YE Score Actual",
            "expression": " CALCULATE(AVERAGE('Academy Exam'[Final Score]),Course[Level Group Code]=\"YE\")",
            "formatString": "#,0.00"
          },
          {
            "name": "Avg Academy SKA Score Actual",
            "expression": " CALCULATE(AVERAGE('Academy Exam'[Final Score]),Course[Level Group Code]=\"SKA\")",
            "formatString": "#,0.00"
          },
          {
            "name": "Avg Academy SKB Score Actual",
            "expression": " CALCULATE(AVERAGE('Academy Exam'[Final Score]),Course[Level Group Code]=\"SKB\")",
            "formatString": "#,0.00"
          },
          {
            "name": "Avg Academy SKC Score Actual",
            "expression": " CALCULATE(AVERAGE('Academy Exam'[Final Score]),Course[Level Group Code]=\"SKC\")",
            "formatString": "#,0.00"
          },
          {
            "name": "Avg Academy EAP Benchmark",
            "expression": " CALCULATE(AVERAGE(Benchmark[Benchmark]),Benchmark[BenchmarkType]=\"TQMAcademic\",Benchmark[GroupProgram]=\"EAP\")",
            "formatString": "#,0.00"
          },
          {
            "name": "Avg Academy EH Benchmark",
            "expression": " CALCULATE(AVERAGE(Benchmark[Benchmark]),Benchmark[BenchmarkType]=\"TQMAcademic\",Benchmark[GroupProgram]=\"EH\")",
            "formatString": "#,0.00"
          },
          {
            "name": "Avg Academy YI-YP Benchmark",
            "expression": " CALCULATE(AVERAGE(Benchmark[Benchmark]),Benchmark[BenchmarkType]=\"TQMAcademic\",Benchmark[GroupProgram]=\"YI-YP\")",
            "formatString": "#,0.00"
          },
          {
            "name": "Avg Academy YE Benchmark",
            "expression": " CALCULATE(AVERAGE(Benchmark[Benchmark]),Benchmark[BenchmarkType]=\"TQMAcademic\",Benchmark[GroupProgram]=\"YE\")",
            "formatString": "#,0.00"
          },
          {
            "name": "Avg Academy SKA Benchmark",
            "expression": " CALCULATE(AVERAGE(Benchmark[Benchmark]),Benchmark[BenchmarkType]=\"TQMAcademic\",Benchmark[GroupProgram]=\"SKA\")",
            "formatString": "#,0.00"
          },
          {
            "name": "Avg Academy SKB Benchmark",
            "expression": " CALCULATE(AVERAGE(Benchmark[Benchmark]),Benchmark[BenchmarkType]=\"TQMAcademic\",Benchmark[GroupProgram]=\"SKB\")",
            "formatString": "#,0.00"
          },
          {
            "name": "Avg Academy SKC Benchmark",
            "expression": " CALCULATE(AVERAGE(Benchmark[Benchmark]),Benchmark[BenchmarkType]=\"TQMAcademic\",Benchmark[GroupProgram]=\"SKC\")",
            "formatString": "#,0.00"
          },
          {
            "name": "Avg Academy IE Score Actual",
            "expression": " CALCULATE(AVERAGE('Academy Exam'[Final Score]),Course[Level Group Code]=\"IE\")",
            "formatString": "#,0.00"
          },
          {
            "name": "Avg Academy IE Benchmark",
            "expression": " CALCULATE(AVERAGE(Benchmark[Benchmark]),Benchmark[BenchmarkType]=\"TQMAcademic\",Benchmark[GroupProgram]=\"IE\")",
            "formatString": "#,0.00"
          },
          {
            "name": "Avg Academy IE/EH Score Actual",
            "expression": " CALCULATE(AVERAGE('Academy Exam'[Final Score]),Course[Level Group Code] =\"IE/EH\")",
            "formatString": "#,0.00"
          },
          {
            "name": "Avg Academy IE/EH Benchmark",
            "expression": " CALCULATE(AVERAGE(Benchmark[Benchmark]),Benchmark[BenchmarkType]=\"TQMAcademic\",Benchmark[GroupProgram]=\"IE/EH\")",
            "formatString": "#,0.00"
          }
        ]
      },
      {
        "name": "Teaching Cost",
        "columns": [
          {
            "name": "Date Key",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Date Key"
          },
          {
            "name": "Branch Key",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Branch Key"
          },
          {
            "name": "Teacher Key",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Teacher Key"
          },
          {
            "name": "Salary Month Teacher ID",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Salary Month Teacher ID"
          },
          {
            "name": "Salary Month Year",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Salary Month Year"
          },
          {
            "name": "Month Year",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Month Year"
          },
          {
            "name": "Campus ID",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Campus ID"
          },
          {
            "name": "Campus Code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Campus Code"
          },
          {
            "name": "Teacher Profile ID",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Teacher Profile ID"
          },
          {
            "name": "Teacher Type",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Teacher Type"
          },
          {
            "name": "Allowance Type",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Allowance Type"
          },
          {
            "name": "Salary Status ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Salary Status ID"
          },
          {
            "name": "Current Rate",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Current Rate"
          },
          {
            "name": "Salary Teaching Hour",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Salary Teaching Hour"
          },
          {
            "name": "Total Hour Corp",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Total Hour Corp"
          },
          {
            "name": "Total Place Menttest Orther",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Total Place Menttest Orther"
          },
          {
            "name": "Total Event",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Total Event"
          },
          {
            "name": "Total Marketing",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Total Marketing"
          },
          {
            "name": "Total Travel Settlement",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Total Travel Settlement"
          },
          {
            "name": "Allowance VND",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Allowance VND"
          },
          {
            "name": "Allowance USD",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Allowance USD"
          },
          {
            "name": "Allowce Travel VND",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Allowce Travel VND"
          },
          {
            "name": "USD Rate",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "USD Rate"
          },
          {
            "name": "Placement Test VND",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Placement Test VND"
          },
          {
            "type": "calculated",
            "name": "Net Teaching Cost",
            "dataType": "unknown",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": " 'Teaching Cost'[Total Hours]*'Teaching Cost'[Salary Teaching Hour]"
          },
          {
            "name": "TeacherContractType",
            "dataType": "string",
            "sourceColumn": "TeacherContractType"
          },
          {
            "name": "Teaching Total Hours",
            "dataType": "double",
            "sourceColumn": "Teaching Total Hours"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_TEACHING_COST_NET_F = Source{[Schema=\"DWH\",Item=\"VW_TEACHING_COST_NET_F\"]}[Data]",
                "in",
                "    DWH_VW_TEACHING_COST_NET_F"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Total Gross Teaching Cost",
            "expression": " CALCULATE(sum('Teaching Cost Gross'[Gross Salary]))",
            "formatString": "#,0"
          },
          {
            "name": "Total Travel Allowance",
            "expression": " CALCULATE(sum('Teaching Cost'[Allowce Travel VND]),'Teaching Cost'[Allowance Type]=2,'Teaching Cost'[Salary Status ID]=5)",
            "formatString": "#,0"
          },
          {
            "name": "Total Settlement Allowance",
            "expression": " CALCULATE(sum('Teaching Cost'[Allowce Travel VND]),'Teaching Cost'[Allowance Type]=1,'Teaching Cost'[Salary Status ID]=5)",
            "formatString": "#,0"
          },
          {
            "name": "Total Net Teaching Cost",
            "expression": [
              " ",
              "--CALCULATE(sum('Teaching Cost Gross'[Balance]))",
              "[Total Extra Cost] + [Total Teaching Base Salary]"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Total Other Allowance",
            "expression": " CALCULATE(sum('Teaching Cost'[Allowance VND]),'Teaching Cost'[Salary Status ID]=5) + CALCULATE(sum('Teaching Cost'[Allowce Travel VND])) - [Total Travel Allowance]-[Total Settlement Allowance]",
            "formatString": "#,0"
          },
          {
            "name": "Total Allowance",
            "expression": " CALCULATE(sum('Teaching Cost'[Allowance VND])) + CALCULATE(sum('Teaching Cost'[Allowce Travel VND]))",
            "formatString": "#,0"
          },
          {
            "name": "% Allowance vs Net Teaching Cost",
            "expression": " DIVIDE([Total Allowance],[Total Net Teaching Cost],BLANK())",
            "formatString": "#,0.00%;-#,0.00%;#,0.00%"
          },
          {
            "name": "Teaching Cost Benchmark",
            "expression": " CALCULATE(SUM('Teaching Cost Hour Detail'[BenchMarkTechingCost]))",
            "formatString": "#,0"
          },
          {
            "name": "Total Teaching Base Salary",
            "expression": " CALCULATE(SUM('Teaching Cost Hour Detail'[BaseTechingCost]))",
            "formatString": "#,0.00"
          },
          {
            "name": "Total Teaching Advance Hours",
            "expression": " CALCULATE(sum('Teaching Hour Extra'[Total Hours]))",
            "formatString": "#,0.00"
          },
          {
            "name": "Total Teaching Hours",
            "expression": " CALCULATE(SUM('Teaching Cost'[Total Hours]))",
            "formatString": "#,0.00"
          },
          {
            "name": "Total Teaching Extra Cost",
            "expression": " CALCULATE(SUM('Teaching Cost Allowance'[Total VND]))",
            "formatString": "#,0.00"
          },
          {
            "name": "Total Extra Cost",
            "expression": " CALCULATE(SUM('Teaching Hour Extra'[Extra Cost]))",
            "formatString": "#,0"
          },
          {
            "name": "Cost Diff",
            "expression": " [Teaching Cost Benchmark] - [Total Net Teaching Cost]",
            "formatString": "#,0"
          },
          {
            "name": "Total Net Teaching Cost YTD",
            "expression": " TOTALYTD([Total Net Teaching Cost],'Calendar'[Date])",
            "formatString": "#,0"
          },
          {
            "name": "Teaching Cost Benchmark YTD",
            "expression": "  TOTALYTD([Teaching Cost Benchmark],'Calendar'[Date])",
            "formatString": "#,0"
          },
          {
            "name": "Cost Diff YTD",
            "expression": " [Teaching Cost Benchmark YTD] - [Total Net Teaching Cost YTD]",
            "formatString": "#,0"
          },
          {
            "name": "Cost MM",
            "expression": " DIVIDE('Teaching Cost'[Cost Diff],[Teaching Cost Benchmark])"
          },
          {
            "name": "% BM Cost vs Actual YTD",
            "expression": " IF([Total Net Teaching Cost YTD]=0,BLANK(),DIVIDE('Teaching Cost'[Teaching Cost Benchmark YTD],[Total Net Teaching Cost YTD]))"
          },
          {
            "name": "Cost YTDM",
            "expression": " IF([Teaching Cost Benchmark YTD]=0, BLANK(),DIVIDE(([Teaching Cost Benchmark YTD]-[Total Net Teaching Cost YTD]),[Teaching Cost Benchmark YTD]))",
            "formatString": "0.00%;-0.00%;0.00%"
          }
        ]
      },
      {
        "name": "Benchmark",
        "isHidden": true,
        "columns": [
          {
            "name": "Date Key",
            "dataType": "int64",
            "sourceColumn": "Date Key"
          },
          {
            "name": "ASA Branch Key",
            "dataType": "string",
            "sourceColumn": "ASA Branch Key"
          },
          {
            "name": "Teacher Key",
            "dataType": "string",
            "sourceColumn": "Teacher Key"
          },
          {
            "name": "CampusID",
            "dataType": "string",
            "sourceColumn": "CampusID"
          },
          {
            "name": "BenchmarkType",
            "dataType": "string",
            "sourceColumn": "BenchmarkType"
          },
          {
            "name": "TeacherType",
            "dataType": "string",
            "sourceColumn": "TeacherType"
          },
          {
            "name": "GroupProgram",
            "dataType": "string",
            "sourceColumn": "GroupProgram"
          },
          {
            "name": "Benchmark",
            "dataType": "double",
            "sourceColumn": "Benchmark"
          },
          {
            "name": "Level Key",
            "dataType": "string",
            "sourceColumn": "Level Key"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_BENCHMARK_F = Source{[Schema=\"DWH\",Item=\"VW_BENCHMARK_F\"]}[Data]",
                "in",
                "    DWH_VW_BENCHMARK_F"
              ]
            }
          }
        ]
      },
      {
        "name": "Teaching Cost Hour Detail",
        "columns": [
          {
            "name": "Date Key",
            "dataType": "int64",
            "sourceColumn": "Date Key"
          },
          {
            "name": "ASA Branch Key",
            "dataType": "string",
            "sourceColumn": "ASA Branch Key"
          },
          {
            "name": "Teacher Key",
            "dataType": "string",
            "sourceColumn": "Teacher Key"
          },
          {
            "name": "Level Key",
            "dataType": "string",
            "sourceColumn": "Level Key"
          },
          {
            "name": "SalaryTotalHourDetailID",
            "dataType": "string",
            "sourceColumn": "SalaryTotalHourDetailID"
          },
          {
            "name": "SalaryMonthTeacherID",
            "dataType": "string",
            "sourceColumn": "SalaryMonthTeacherID"
          },
          {
            "name": "TeacherID_TQM",
            "dataType": "string",
            "sourceColumn": "TeacherID_TQM"
          },
          {
            "name": "SalaryMonthYear",
            "dataType": "string",
            "sourceColumn": "SalaryMonthYear"
          },
          {
            "name": "TeacherType",
            "dataType": "string",
            "sourceColumn": "TeacherType"
          },
          {
            "name": "List Class ID",
            "dataType": "string",
            "sourceColumn": "List Class ID"
          },
          {
            "name": "List Course ID",
            "dataType": "string",
            "sourceColumn": "List Course ID"
          },
          {
            "name": "List Level ID",
            "dataType": "string",
            "sourceColumn": "List Level ID"
          },
          {
            "name": "From Time",
            "dataType": "string",
            "sourceColumn": "From Time"
          },
          {
            "name": "To Time",
            "dataType": "string",
            "sourceColumn": "To Time"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "Date"
          },
          {
            "name": "TeachingFromTime",
            "dataType": "dateTime",
            "sourceColumn": "TeachingFromTime"
          },
          {
            "name": "TeachingToTime",
            "dataType": "dateTime",
            "sourceColumn": "TeachingToTime"
          },
          {
            "name": "HourRate",
            "dataType": "double",
            "sourceColumn": "HourRate"
          },
          {
            "name": "TeachingRealTotalHours",
            "dataType": "double",
            "sourceColumn": "TeachingRealTotalHours"
          },
          {
            "name": "TeachingTotalHours",
            "dataType": "double",
            "sourceColumn": "TeachingTotalHours"
          },
          {
            "name": "ValidFrom",
            "dataType": "dateTime",
            "sourceColumn": "ValidFrom"
          },
          {
            "name": "BranchID",
            "dataType": "string",
            "sourceColumn": "BranchID"
          },
          {
            "name": "Other Group Code",
            "dataType": "string",
            "sourceColumn": "Other Group Code"
          },
          {
            "name": "SalaryType",
            "dataType": "int64",
            "sourceColumn": "SalaryType"
          },
          {
            "name": "CurrentRate",
            "dataType": "double",
            "sourceColumn": "CurrentRate"
          },
          {
            "name": "BaseTechingCost",
            "dataType": "double",
            "sourceColumn": "BaseTechingCost"
          },
          {
            "name": "BenchMarkRate",
            "dataType": "double",
            "sourceColumn": "BenchMarkRate"
          },
          {
            "name": "BenchMarkTechingCost",
            "dataType": "double",
            "sourceColumn": "BenchMarkTechingCost"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_TEACHING_COST_HOUR_DETAIL_F = Source{[Schema=\"DWH\",Item=\"VW_TEACHING_COST_HOUR_DETAIL_F\"]}[Data]",
                "in",
                "    DWH_VW_TEACHING_COST_HOUR_DETAIL_F"
              ]
            }
          }
        ]
      },
      {
        "name": "Teaching Cost Allowance",
        "columns": [
          {
            "name": "Date Key",
            "dataType": "int64",
            "sourceColumn": "Date Key"
          },
          {
            "name": "ASA Branch Key",
            "dataType": "string",
            "sourceColumn": "ASA Branch Key"
          },
          {
            "name": "Teacher Key",
            "dataType": "string",
            "sourceColumn": "Teacher Key"
          },
          {
            "name": "Salary Total Allowce Detail ID",
            "dataType": "string",
            "sourceColumn": "Salary Total Allowce Detail ID"
          },
          {
            "name": "Total VND",
            "dataType": "double",
            "sourceColumn": "Total VND"
          },
          {
            "name": "Total USD",
            "dataType": "double",
            "sourceColumn": "Total USD"
          },
          {
            "name": "Job Name",
            "dataType": "string",
            "sourceColumn": "Job Name"
          },
          {
            "name": "Note",
            "dataType": "string",
            "sourceColumn": "Note"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_TEACHING_COST_ALLOW_DETAIL_F = Source{[Schema=\"DWH\",Item=\"VW_TEACHING_COST_ALLOW_DETAIL_F\"]}[Data]",
                "in",
                "    DWH_VW_TEACHING_COST_ALLOW_DETAIL_F"
              ]
            }
          }
        ]
      },
      {
        "name": "Teaching Hour Extra",
        "columns": [
          {
            "name": "Date Key",
            "dataType": "int64",
            "sourceColumn": "Date Key"
          },
          {
            "name": "ASA Branch Key",
            "dataType": "string",
            "sourceColumn": "ASA Branch Key"
          },
          {
            "name": "Teacher Key",
            "dataType": "string",
            "sourceColumn": "Teacher Key"
          },
          {
            "name": "Salary Total Extra Detail ID",
            "dataType": "string",
            "sourceColumn": "Salary Total Extra Detail ID"
          },
          {
            "name": "Job Name",
            "dataType": "string",
            "sourceColumn": "Job Name"
          },
          {
            "name": "From Time",
            "dataType": "string",
            "sourceColumn": "From Time"
          },
          {
            "name": "To Time",
            "dataType": "string",
            "sourceColumn": "To Time"
          },
          {
            "name": "Total Hours",
            "dataType": "double",
            "sourceColumn": "Total Hours"
          },
          {
            "name": "Note",
            "dataType": "string",
            "sourceColumn": "Note"
          },
          {
            "name": "Is Placement Test",
            "dataType": "boolean",
            "sourceColumn": "Is Placement Test"
          },
          {
            "name": "Extra Type",
            "dataType": "string",
            "sourceColumn": "Extra Type"
          },
          {
            "name": "Teacher Profile ID",
            "dataType": "string",
            "sourceColumn": "Teacher Profile ID"
          },
          {
            "name": "Salary Rate",
            "dataType": "double",
            "sourceColumn": "Salary Rate"
          },
          {
            "name": "Extra Cost",
            "dataType": "double",
            "sourceColumn": "Extra Cost"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_TEACHING_HOUR_EXTRA_DETAIL_F = Source{[Schema=\"DWH\",Item=\"VW_TEACHING_HOUR_EXTRA_DETAIL_F\"]}[Data]",
                "in",
                "    DWH_VW_TEACHING_HOUR_EXTRA_DETAIL_F"
              ]
            }
          }
        ]
      },
      {
        "name": "RLS Campus",
        "isHidden": true,
        "columns": [
          {
            "name": "QLGV Branch Key",
            "dataType": "string",
            "sourceColumn": "QLGV Branch Key"
          },
          {
            "name": "User ID",
            "dataType": "string",
            "sourceColumn": "User ID"
          },
          {
            "name": "User Name",
            "dataType": "string",
            "sourceColumn": "User Name"
          },
          {
            "name": "ASA Branch Key",
            "dataType": "string",
            "sourceColumn": "ASA Branch Key"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_RLS_Campus = Source{[Schema=\"DWH\",Item=\"VW_RLS_Campus\"]}[Data]",
                "in",
                "    DWH_VW_RLS_Campus"
              ]
            }
          }
        ]
      },
      {
        "name": "Teacher Survey",
        "columns": [
          {
            "name": "Date Key",
            "dataType": "int64",
            "sourceColumn": "Date Key"
          },
          {
            "name": "Teacher Key",
            "dataType": "string",
            "sourceColumn": "Teacher Key"
          },
          {
            "name": "Campus Key",
            "dataType": "string",
            "sourceColumn": "Campus Key"
          },
          {
            "name": "Class Key",
            "dataType": "string",
            "sourceColumn": "Class Key"
          },
          {
            "name": "Teacher Code",
            "dataType": "string",
            "sourceColumn": "Teacher Code"
          },
          {
            "name": "Class Survey Code",
            "dataType": "string",
            "sourceColumn": "Class Survey Code"
          },
          {
            "name": "Total Survey Student",
            "dataType": "int64",
            "sourceColumn": "Total Survey Student"
          },
          {
            "name": "No Of Student Marked",
            "dataType": "int64",
            "sourceColumn": "No Of Student Marked"
          },
          {
            "name": "Campus Survey Code",
            "dataType": "string",
            "sourceColumn": "Campus Survey Code"
          },
          {
            "name": "Level Key",
            "dataType": "string",
            "sourceColumn": "Level Key"
          },
          {
            "name": "Total",
            "dataType": "int64",
            "sourceColumn": "Survey Key"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_TEACHER_SURVEY_F = Source{[Schema=\"DWH\",Item=\"VW_TEACHER_SURVEY_F\"]}[Data]",
                "in",
                "    DWH_VW_TEACHER_SURVEY_F"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "# of Class Survey",
            "expression": " CALCULATE(DISTINCTCOUNT('Teacher Survey'[Class Survey Code]))",
            "formatString": "#,0"
          },
          {
            "name": "# of Survey",
            "expression": " ROUND(CALCULATE(sum('Teacher Survey'[Total Survey Student]),ALL(Survey))/6,0)",
            "formatString": "#,0"
          },
          {
            "name": "# of Interest Survey",
            "expression": " CALCULATE(sum('Teacher Survey'[No Of Student Marked]),Survey[Survey Type]=\"Interest\")",
            "formatString": "#,0"
          },
          {
            "name": "# of Comprehension Survey",
            "expression": " CALCULATE(sum('Teacher Survey'[No Of Student Marked]),Survey[Survey Type]=\"Comprehension\")",
            "formatString": "#,0"
          },
          {
            "name": "# of Survey Benchmark",
            "expression": " CALCULATE(sum(Benchmark[Benchmark]),Benchmark[BenchmarkType]=\"TQMSurvey\")",
            "formatString": "#,0"
          },
          {
            "name": "% Survey vs Benchmark",
            "expression": " DIVIDE([# of Survey],[# of Survey Benchmark],BLANK())",
            "formatString": "#,0.00%;-#,0.00%;#,0.00%"
          },
          {
            "name": "# of Student Survey",
            "expression": " SUMX(VALUES('Teacher Survey'[Class Survey Code]),CALCULATE(MAX('Teacher Survey'[Total Survey Student])))",
            "formatString": "#,0"
          },
          {
            "name": "# of Happy Survey",
            "expression": " CALCULATE(sum('Teacher Survey'[No Of Student Marked]),Survey[Emotion]=\"Happy\")",
            "formatString": "#,0"
          },
          {
            "name": "# of Unhappy Survey",
            "expression": " CALCULATE(sum('Teacher Survey'[No Of Student Marked]),Survey[Emotion]=\"Unhappy\")",
            "formatString": "#,0"
          },
          {
            "name": "# of Neutral Survey",
            "expression": " CALCULATE(sum('Teacher Survey'[No Of Student Marked]),Survey[Emotion]=\"Neutral\")",
            "formatString": "#,0"
          },
          {
            "name": "% Happy Survey vs Total",
            "expression": " DIVIDE([# of Happy Survey],'Teacher Survey'[# of Survey],BLANK())",
            "formatString": "#,0.00%;-#,0.00%;#,0.00%"
          },
          {
            "name": "% Unhappy Survey vs Total",
            "expression": " DIVIDE([# of Unhappy Survey],'Teacher Survey'[# of Survey],BLANK())",
            "formatString": "#,0.00%;-#,0.00%;#,0.00%"
          },
          {
            "name": "% Neutral Survey vs Total",
            "expression": " DIVIDE([# of Neutral Survey],'Teacher Survey'[# of Survey],BLANK())",
            "formatString": "#,0.00%;-#,0.00%;#,0.00%"
          }
        ]
      },
      {
        "name": "Teacher Ranking",
        "columns": [
          {
            "name": "Date Key",
            "dataType": "int64",
            "sourceColumn": "Date Key"
          },
          {
            "name": "Teacher Key",
            "dataType": "string",
            "sourceColumn": "Teacher Key"
          },
          {
            "name": "Campus Key",
            "dataType": "string",
            "sourceColumn": "Campus Key"
          },
          {
            "name": "Ranking Date",
            "dataType": "dateTime",
            "sourceColumn": "Ranking Date"
          },
          {
            "name": "Month Year",
            "dataType": "string",
            "sourceColumn": "Month Year"
          },
          {
            "name": "Teacher Code",
            "dataType": "string",
            "sourceColumn": "Teacher Code"
          },
          {
            "name": "Campus Code",
            "dataType": "string",
            "sourceColumn": "Campus Code"
          },
          {
            "name": "Observation Score",
            "dataType": "double",
            "sourceColumn": "Observation Score"
          },
          {
            "name": "Survey Score",
            "dataType": "double",
            "sourceColumn": "Survey Score"
          },
          {
            "name": "Technique Average",
            "dataType": "double",
            "sourceColumn": "Technique Average"
          },
          {
            "name": "Feedback Score",
            "dataType": "double",
            "sourceColumn": "Feedback Score"
          },
          {
            "name": "Rules Score",
            "dataType": "double",
            "sourceColumn": "Rules Score"
          },
          {
            "name": "Obedient Score",
            "dataType": "double",
            "sourceColumn": "Obedient Score"
          },
          {
            "name": "Extra Curricular Score",
            "dataType": "double",
            "sourceColumn": "Extra Curricular Score"
          },
          {
            "name": "Executive Average",
            "dataType": "double",
            "sourceColumn": "Executive Average"
          },
          {
            "name": "Adjust Score",
            "dataType": "double",
            "sourceColumn": "Adjust Score"
          },
          {
            "name": "Total Average",
            "dataType": "double",
            "sourceColumn": "Total Average"
          },
          {
            "name": "Ranking Key",
            "dataType": "string",
            "sourceColumn": "Ranking Key"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_TEACHER_RANKING_F = Source{[Schema=\"DWH\",Item=\"VW_TEACHER_RANKING_F\"]}[Data]",
                "in",
                "    DWH_VW_TEACHER_RANKING_F"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "# of Ranking Teacher",
            "expression": " CALCULATE(DISTINCTCOUNT('Teacher Ranking'[Teacher Code]))",
            "formatString": "#,0"
          },
          {
            "name": "% Teacher Ranking vs VUS",
            "expression": " DIVIDE('Teacher Ranking'[# of Ranking Teacher],'Teacher Ranking'[# of Ranking Teacher VUS],BLANK())",
            "formatString": "#,0.00%;-#,0.00%;#,0.00%"
          },
          {
            "name": "Avg Teacher Ranking VUS",
            "expression": " DIVIDE('Teacher Ranking'[# of Ranking Teacher VUS],[# of Campus],BLANK())"
          },
          {
            "name": "# of Excellent Teacher",
            "expression": " CALCULATE(DISTINCTCOUNT('Teacher Ranking'[Teacher Code]),Ranking[Ranking Type]=\"Excellent\")",
            "formatString": "#,0"
          },
          {
            "name": "# of Good Teacher",
            "expression": " CALCULATE(DISTINCTCOUNT('Teacher Ranking'[Teacher Code]),Ranking[Ranking Type]=\"Good\")",
            "formatString": "#,0"
          },
          {
            "name": "# of Fairly Good Teacher",
            "expression": " CALCULATE(DISTINCTCOUNT('Teacher Ranking'[Teacher Code]),Ranking[Ranking Type]=\"Fairly Good\")",
            "formatString": "#,0"
          },
          {
            "name": "# of Average Teacher",
            "expression": " CALCULATE(DISTINCTCOUNT('Teacher Ranking'[Teacher Code]),Ranking[Ranking Type]=\"Average\")",
            "formatString": "#,0"
          },
          {
            "name": "# of Weak Teacher",
            "expression": " CALCULATE(DISTINCTCOUNT('Teacher Ranking'[Teacher Code]),Ranking[Ranking Type]=\"Weak\")",
            "formatString": "#,0"
          },
          {
            "name": "% Excellent Teacher",
            "expression": " DIVIDE([# of Excellent Teacher],'Teacher Ranking'[# of Ranking Teacher],BLANK())",
            "formatString": "#,0.00%;-#,0.00%;#,0.00%"
          },
          {
            "name": "% Good Teacher",
            "expression": " DIVIDE([# of Good Teacher],'Teacher Ranking'[# of Ranking Teacher],BLANK())",
            "formatString": "#,0.00%;-#,0.00%;#,0.00%"
          },
          {
            "name": "% Fairly Good Teacher",
            "expression": " DIVIDE([# of Fairly Good Teacher],'Teacher Ranking'[# of Ranking Teacher],BLANK())",
            "formatString": "#,0.00%;-#,0.00%;#,0.00%"
          },
          {
            "name": "% Average Teacher",
            "expression": " DIVIDE([# of Average Teacher],'Teacher Ranking'[# of Ranking Teacher],BLANK())",
            "formatString": "#,0.00%;-#,0.00%;#,0.00%"
          },
          {
            "name": "% Weak Teacher",
            "expression": " DIVIDE([# of Weak Teacher],'Teacher Ranking'[# of Ranking Teacher],BLANK())",
            "formatString": "#,0.00%;-#,0.00%;#,0.00%"
          },
          {
            "name": "# of Ranking Teacher VUS",
            "expression": " CALCULATE(DISTINCTCOUNT('Teacher Ranking VUS'[Teacher Code]))",
            "formatString": "#,0"
          },
          {
            "name": "# of Excellent Teacher VUS",
            "expression": " CALCULATE(DISTINCTCOUNT('Teacher Ranking VUS'[Teacher Code]),Ranking[Ranking Type]=\"Excellent\")",
            "formatString": "#,0"
          },
          {
            "name": "# of Weak Teacher VUS",
            "expression": " CALCULATE(DISTINCTCOUNT('Teacher Ranking VUS'[Teacher Code]),Ranking[Ranking Type]=\"Weak\")",
            "formatString": "#,0"
          },
          {
            "name": "# of Good Teacher VUS",
            "expression": " CALCULATE(DISTINCTCOUNT('Teacher Ranking VUS'[Teacher Code]),Ranking[Ranking Type]=\"Good\")",
            "formatString": "#,0"
          },
          {
            "name": "# of Fairly Good Teacher VUS",
            "expression": " CALCULATE(DISTINCTCOUNT('Teacher Ranking VUS'[Teacher Code]),Ranking[Ranking Type]=\"Fairly Good\")",
            "formatString": "#,0"
          },
          {
            "name": "# of Average Teacher VUS",
            "expression": " CALCULATE(DISTINCTCOUNT('Teacher Ranking VUS'[Teacher Code]),Ranking[Ranking Type]=\"Average\")",
            "formatString": "#,0"
          },
          {
            "name": "% Excellent Teacher VUS",
            "expression": " DIVIDE([# of Excellent Teacher VUS],'Teacher Ranking'[# of Ranking Teacher VUS],BLANK())",
            "formatString": "#,0.00%;-#,0.00%;#,0.00%"
          },
          {
            "name": "% Good Teacher VUS",
            "expression": " DIVIDE([# of Good Teacher VUS],'Teacher Ranking'[# of Ranking Teacher VUS],BLANK())",
            "formatString": "#,0.00%;-#,0.00%;#,0.00%"
          },
          {
            "name": "% Fairly Good Teacher VUS",
            "expression": " DIVIDE([# of Fairly Good Teacher VUS],'Teacher Ranking'[# of Ranking Teacher VUS],BLANK())",
            "formatString": "#,0.00%;-#,0.00%;#,0.00%"
          },
          {
            "name": "% Average Teacher VUS",
            "expression": " DIVIDE([# of Average Teacher VUS],'Teacher Ranking'[# of Ranking Teacher VUS],BLANK())",
            "formatString": "#,0.00%;-#,0.00%;#,0.00%"
          },
          {
            "name": "% Weak Teacher VUS",
            "expression": " DIVIDE([# of Weak Teacher VUS],'Teacher Ranking'[# of Ranking Teacher VUS],BLANK())",
            "formatString": "#,0.00%;-#,0.00%;#,0.00%"
          }
        ]
      },
      {
        "name": "Teacher In Out",
        "columns": [
          {
            "name": "Date Key",
            "dataType": "int64",
            "sourceColumn": "Date Key"
          },
          {
            "name": "Branch Key",
            "dataType": "string",
            "sourceColumn": "Branch Key"
          },
          {
            "name": "Teacher Key",
            "dataType": "string",
            "sourceColumn": "Teacher Key"
          },
          {
            "name": "Campus Code",
            "dataType": "string",
            "sourceColumn": "Campus Code"
          },
          {
            "name": "Teacher Profile ID",
            "dataType": "string",
            "sourceColumn": "Teacher Profile ID"
          },
          {
            "name": "Position Name",
            "dataType": "string",
            "sourceColumn": "Position Name"
          },
          {
            "name": "Teacher Type",
            "dataType": "string",
            "sourceColumn": "Teacher Type"
          },
          {
            "name": "Full Time Flag",
            "dataType": "string",
            "sourceColumn": "Full Time Flag"
          },
          {
            "name": "DATE_NAME",
            "dataType": "dateTime",
            "sourceColumn": "DATE_NAME"
          },
          {
            "name": "Start Date",
            "dataType": "dateTime",
            "sourceColumn": "Start Date"
          },
          {
            "name": "End Date",
            "dataType": "dateTime",
            "sourceColumn": "End Date"
          },
          {
            "name": "Next Start Date",
            "dataType": "dateTime",
            "sourceColumn": "Next Start Date"
          },
          {
            "name": "Last End Date",
            "dataType": "dateTime",
            "sourceColumn": "Last End Date"
          },
          {
            "name": "Start Flag",
            "dataType": "int64",
            "sourceColumn": "Start Flag"
          },
          {
            "name": "End Flag",
            "dataType": "int64",
            "sourceColumn": "End Flag"
          },
          {
            "name": "Version Data",
            "dataType": "string",
            "sourceColumn": "Version Data"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_TEACHER_IN_OUT_F = Source{[Schema=\"DWH\",Item=\"VW_TEACHER_IN_OUT_F\"]}[Data]",
                "in",
                "    DWH_VW_TEACHER_IN_OUT_F"
              ]
            }
          }
        ]
      },
      {
        "name": "Teacher Feedback",
        "columns": [
          {
            "name": "Feedback Key",
            "dataType": "int64",
            "sourceColumn": "Feedback Key"
          },
          {
            "name": "Date Key",
            "dataType": "int64",
            "sourceColumn": "Date Key"
          },
          {
            "name": "Teacher Key",
            "dataType": "string",
            "sourceColumn": "Teacher Key"
          },
          {
            "name": "Campus Key",
            "dataType": "string",
            "sourceColumn": "Campus Key"
          },
          {
            "name": "Class Key",
            "dataType": "string",
            "sourceColumn": "Class Key"
          },
          {
            "name": "Teacher Code",
            "dataType": "string",
            "sourceColumn": "Teacher Code"
          },
          {
            "name": "Class Feedback Code",
            "dataType": "string",
            "sourceColumn": "Class Feedback Code"
          },
          {
            "name": "Feedback ID",
            "dataType": "string",
            "sourceColumn": "Feedback ID"
          },
          {
            "name": "Level Key",
            "dataType": "string",
            "sourceColumn": "Level Key"
          },
          {
            "name": "Campus Feedback Code",
            "dataType": "string",
            "sourceColumn": "Campus Feedback Code"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_TEACHER_FEEDBACK_F = Source{[Schema=\"DWH\",Item=\"VW_TEACHER_FEEDBACK_F\"]}[Data]",
                "in",
                "    DWH_VW_TEACHER_FEEDBACK_F"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "# of Feedback",
            "expression": " CALCULATE(DISTINCTCOUNT('Teacher Feedback'[Feedback ID]))",
            "formatString": "#,0"
          },
          {
            "name": "# of Request",
            "expression": " CALCULATE(DISTINCTCOUNT('Teacher Feedback'[Feedback ID]),Feedback[Feedback Type]=\"Request\")",
            "formatString": "#,0"
          },
          {
            "name": "# of Complaint",
            "expression": " CALCULATE(DISTINCTCOUNT('Teacher Feedback'[Feedback ID]),Feedback[Feedback Type]=\"Complaint\")",
            "formatString": "#,0"
          },
          {
            "name": "# of VUS Feedback",
            "expression": " CALCULATE(DISTINCTCOUNT('Teacher Feedback VUS'[Feedback ID]))",
            "formatString": "#,0"
          },
          {
            "name": "# of VUS Complaint",
            "expression": " CALCULATE(DISTINCTCOUNT('Teacher Feedback VUS'[Feedback ID]),Feedback[Feedback Type]=\"Complaint\")",
            "formatString": "#,0"
          },
          {
            "name": "# of VUS Request",
            "expression": " CALCULATE(DISTINCTCOUNT('Teacher Feedback VUS'[Feedback ID]),Feedback[Feedback Type]=\"Request\")",
            "formatString": "#,0"
          },
          {
            "name": "Avg Campus Feedback",
            "expression": " DIVIDE([# of Feedback],[# of Campus],BLANK())",
            "formatString": "#,0"
          },
          {
            "name": "Avg Campus Request",
            "expression": " DIVIDE([# of Request],[# of Campus],BLANK())",
            "formatString": "#,0"
          },
          {
            "name": "Avg Campus Complaint",
            "expression": " DIVIDE([# of Complaint],[# of Campus],BLANK())",
            "formatString": "#,0"
          },
          {
            "name": "% Feedback vs VUS",
            "expression": " DIVIDE('Teacher Feedback'[# of Feedback],'Teacher Feedback'[# of VUS Feedback],BLANK())",
            "formatString": "#,0.00%;-#,0.00%;#,0.00%"
          },
          {
            "name": "% Request vs VUS",
            "expression": " DIVIDE('Teacher Feedback'[# of Request],'Teacher Feedback'[# of VUS Request],BLANK())",
            "formatString": "#,0.00%;-#,0.00%;#,0.00%"
          },
          {
            "name": "% Complaint vs VUS",
            "expression": " DIVIDE('Teacher Feedback'[# of Complaint],'Teacher Feedback'[# of VUS Complaint],BLANK())",
            "formatString": "#,0.00%;-#,0.00%;#,0.00%"
          },
          {
            "name": "% Feedback vs Avg VUS",
            "expression": " DIVIDE('Teacher Feedback'[# of Feedback],[Avg Campus Feedback],BLANK())",
            "formatString": "#,0.00%;-#,0.00%;#,0.00%"
          },
          {
            "name": "% Request vs Avg VUS",
            "expression": " DIVIDE('Teacher Feedback'[# of Request],[Avg Campus Request],BLANK())",
            "formatString": "#,0.00%;-#,0.00%;#,0.00%"
          },
          {
            "name": "% Complaint vs Avg VUS",
            "expression": " DIVIDE('Teacher Feedback'[# of Complaint],[Avg Campus Complaint],BLANK())",
            "formatString": "#,0.00%;-#,0.00%;#,0.00%"
          }
        ]
      },
      {
        "name": "Feedback",
        "columns": [
          {
            "name": "Feedback Key",
            "dataType": "int64",
            "sourceColumn": "Feedback Key"
          },
          {
            "name": "Feedback Type",
            "dataType": "string",
            "sourceColumn": "Feedback Type"
          },
          {
            "name": "Feedback Score",
            "dataType": "double",
            "sourceColumn": "Feedback Score"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_FEEDBACK_D = Source{[Schema=\"DWH\",Item=\"VW_FEEDBACK_D\"]}[Data]",
                "in",
                "    DWH_VW_FEEDBACK_D"
              ]
            }
          }
        ]
      },
      {
        "name": "Ranking",
        "columns": [
          {
            "name": "Ranking Key",
            "dataType": "string",
            "sourceColumn": "Ranking Key"
          },
          {
            "name": "Ranking Type",
            "dataType": "string",
            "sourceColumn": "Ranking Type"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_RANKING_D = Source{[Schema=\"DWH\",Item=\"VW_RANKING_D\"]}[Data]",
                "in",
                "    DWH_VW_RANKING_D"
              ]
            }
          }
        ]
      },
      {
        "name": "Survey",
        "columns": [
          {
            "name": "Survey Key",
            "dataType": "int64",
            "sourceColumn": "Survey Key"
          },
          {
            "name": "Survey Type",
            "dataType": "string",
            "sourceColumn": "Survey Type"
          },
          {
            "name": "Emotion",
            "dataType": "string",
            "sourceColumn": "Emotion"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_SURVEY_D = Source{[Schema=\"DWH\",Item=\"VW_SURVEY_D\"]}[Data]",
                "in",
                "    DWH_VW_SURVEY_D"
              ]
            }
          }
        ]
      },
      {
        "name": "Teacher Feedback VUS",
        "columns": [
          {
            "name": "Date Key",
            "dataType": "int64",
            "sourceColumn": "Date Key"
          },
          {
            "name": "Teacher Key",
            "dataType": "string",
            "sourceColumn": "Teacher Key"
          },
          {
            "name": "Campus Key",
            "dataType": "string",
            "sourceColumn": "Campus Key"
          },
          {
            "name": "Class Key",
            "dataType": "string",
            "sourceColumn": "Class Key"
          },
          {
            "name": "Feedback ID",
            "dataType": "string",
            "sourceColumn": "Feedback ID"
          },
          {
            "name": "Teacher Code",
            "dataType": "string",
            "sourceColumn": "Teacher Code"
          },
          {
            "name": "Class Feedback Code",
            "dataType": "string",
            "sourceColumn": "Class Feedback Code"
          },
          {
            "name": "Feedback Key",
            "dataType": "int64",
            "sourceColumn": "Feedback Key"
          },
          {
            "name": "Level Key",
            "dataType": "string",
            "sourceColumn": "Level Key"
          },
          {
            "name": "Campus Feedback Code",
            "dataType": "string",
            "sourceColumn": "Campus Feedback Code"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_TEACHER_FEEDBACK_F = Source{[Schema=\"DWH\",Item=\"VW_TEACHER_FEEDBACK_F\"]}[Data]",
                "in",
                "    DWH_VW_TEACHER_FEEDBACK_F"
              ]
            }
          }
        ]
      },
      {
        "name": "Teacher Ranking VUS",
        "columns": [
          {
            "name": "Date Key",
            "dataType": "int64",
            "sourceColumn": "Date Key"
          },
          {
            "name": "Teacher Key",
            "dataType": "string",
            "sourceColumn": "Teacher Key"
          },
          {
            "name": "Campus Key",
            "dataType": "string",
            "sourceColumn": "Campus Key"
          },
          {
            "name": "Ranking Date",
            "dataType": "dateTime",
            "sourceColumn": "Ranking Date"
          },
          {
            "name": "Month Year",
            "dataType": "string",
            "sourceColumn": "Month Year"
          },
          {
            "name": "Teacher Code",
            "dataType": "string",
            "sourceColumn": "Teacher Code"
          },
          {
            "name": "Campus Code",
            "dataType": "string",
            "sourceColumn": "Campus Code"
          },
          {
            "name": "Observation Score",
            "dataType": "double",
            "sourceColumn": "Observation Score"
          },
          {
            "name": "Survey Score",
            "dataType": "double",
            "sourceColumn": "Survey Score"
          },
          {
            "name": "Technique Average",
            "dataType": "double",
            "sourceColumn": "Technique Average"
          },
          {
            "name": "Feedback Score",
            "dataType": "double",
            "sourceColumn": "Feedback Score"
          },
          {
            "name": "Rules Score",
            "dataType": "double",
            "sourceColumn": "Rules Score"
          },
          {
            "name": "Obedient Score",
            "dataType": "double",
            "sourceColumn": "Obedient Score"
          },
          {
            "name": "Extra Curricular Score",
            "dataType": "double",
            "sourceColumn": "Extra Curricular Score"
          },
          {
            "name": "Executive Average",
            "dataType": "double",
            "sourceColumn": "Executive Average"
          },
          {
            "name": "Adjust Score",
            "dataType": "double",
            "sourceColumn": "Adjust Score"
          },
          {
            "name": "Total Average",
            "dataType": "double",
            "sourceColumn": "Total Average"
          },
          {
            "name": "Ranking Key",
            "dataType": "string",
            "sourceColumn": "Ranking Key"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_TEACHER_RANKING_F = Source{[Schema=\"DWH\",Item=\"VW_TEACHER_RANKING_F\"]}[Data]",
                "in",
                "    DWH_VW_TEACHER_RANKING_F"
              ]
            }
          }
        ]
      },
      {
        "name": "Discipline",
        "columns": [
          {
            "name": "Discipline Key",
            "dataType": "int64",
            "sourceColumn": "Discipline Key"
          },
          {
            "name": "Discipline Type",
            "dataType": "string",
            "sourceColumn": "Discipline Type"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_DISCIPLINE_D = Source{[Schema=\"DWH\",Item=\"VW_DISCIPLINE_D\"]}[Data]",
                "in",
                "    DWH_VW_DISCIPLINE_D"
              ]
            }
          }
        ]
      },
      {
        "name": "Evaluation Type",
        "columns": [
          {
            "name": "Evaluation Type Key",
            "dataType": "string",
            "sourceColumn": "Evaluation Type Key"
          },
          {
            "name": "Evaluation Type Name",
            "dataType": "string",
            "sourceColumn": "Evaluation Type Name"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_EVALUATION_TYPE_D = Source{[Schema=\"DWH\",Item=\"VW_EVALUATION_TYPE_D\"]}[Data]",
                "in",
                "    DWH_VW_EVALUATION_TYPE_D"
              ]
            }
          }
        ]
      },
      {
        "name": "Misconduct Type",
        "columns": [
          {
            "name": "Misconduct Type Key",
            "dataType": "int64",
            "sourceColumn": "Misconduct Type Key"
          },
          {
            "name": "Misconduct Type",
            "dataType": "string",
            "sourceColumn": "Misconduct Type"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_MISCONDUCT_TYPE_D = Source{[Schema=\"DWH\",Item=\"VW_MISCONDUCT_TYPE_D\"]}[Data]",
                "in",
                "    DWH_VW_MISCONDUCT_TYPE_D"
              ]
            }
          }
        ]
      },
      {
        "name": "Observation Type",
        "columns": [
          {
            "name": "Observation Type Key",
            "dataType": "int64",
            "sourceColumn": "Observation Type Key"
          },
          {
            "name": "Observation Type Name",
            "dataType": "string",
            "sourceColumn": "Observation Type Name"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_OBSERVATION_TYPE_D = Source{[Schema=\"DWH\",Item=\"VW_OBSERVATION_TYPE_D\"]}[Data]",
                "in",
                "    DWH_VW_OBSERVATION_TYPE_D"
              ]
            }
          }
        ]
      },
      {
        "name": "Observation",
        "columns": [
          {
            "name": "Date Key",
            "dataType": "int64",
            "sourceColumn": "Date Key"
          },
          {
            "name": "Teacher Key",
            "dataType": "string",
            "sourceColumn": "Teacher Key"
          },
          {
            "name": "Campus Key",
            "dataType": "string",
            "sourceColumn": "Campus Key"
          },
          {
            "name": "Class Key",
            "dataType": "string",
            "sourceColumn": "Class Key"
          },
          {
            "name": "Level Key",
            "dataType": "string",
            "sourceColumn": "Level Key"
          },
          {
            "name": "Evaluation Type Key",
            "dataType": "string",
            "sourceColumn": "Evaluation Type Key"
          },
          {
            "name": "Teacher Code",
            "dataType": "string",
            "sourceColumn": "Teacher Code"
          },
          {
            "name": "Campus Observation Code",
            "dataType": "string",
            "sourceColumn": "Campus Observation Code"
          },
          {
            "name": "Class Observation Code",
            "dataType": "string",
            "sourceColumn": "Class Observation Code"
          },
          {
            "name": "ObservationID",
            "dataType": "string",
            "sourceColumn": "ObservationID"
          },
          {
            "name": "Observation Date",
            "dataType": "dateTime",
            "sourceColumn": "Observation Date"
          },
          {
            "name": "Observation From Time",
            "dataType": "string",
            "sourceColumn": "Observation From Time"
          },
          {
            "name": "Observation To Time",
            "dataType": "string",
            "sourceColumn": "Observation To Time"
          },
          {
            "name": "No of Attendance",
            "dataType": "int64",
            "sourceColumn": "No of Attendance"
          },
          {
            "name": "Observation Type Key",
            "dataType": "int64",
            "sourceColumn": "Observation Type Key"
          },
          {
            "name": "Lesson Content",
            "dataType": "string",
            "sourceColumn": "Lesson Content"
          },
          {
            "name": "Observation Score",
            "dataType": "double",
            "sourceColumn": "Observation Score"
          },
          {
            "name": "Observation Ranking",
            "dataType": "string",
            "sourceColumn": "Observation Ranking"
          },
          {
            "name": "User Code",
            "dataType": "string",
            "sourceColumn": "User Code"
          },
          {
            "name": "User Name",
            "dataType": "string",
            "sourceColumn": "User Name"
          },
          {
            "name": "User Position",
            "dataType": "string",
            "sourceColumn": "User Position"
          },
          {
            "name": "User Key",
            "dataType": "string",
            "sourceColumn": "User Key"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_OBSERVATION_F = Source{[Schema=\"DWH\",Item=\"VW_OBSERVATION_F\"]}[Data]",
                "in",
                "    DWH_VW_OBSERVATION_F"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "# of Observation",
            "expression": " CALCULATE(DISTINCTCOUNT(Observation[ObservationID]))",
            "formatString": "#,0"
          },
          {
            "name": "Avg Observation Score",
            "expression": " CALCULATE(AVERAGE(Observation[Observation Score]))",
            "formatString": "#,0.0"
          },
          {
            "name": "Avg Observation Score VUS",
            "expression": " CALCULATE(AVERAGE('Observation VUS'[Observation Score]),all(Users))",
            "formatString": "#,0.0"
          },
          {
            "name": "Avg Observation vs VUS",
            "expression": " DIVIDE(Observation[Avg Observation Score],[Avg Observation Score VUS],BLANK())",
            "formatString": "#,0.00"
          }
        ]
      },
      {
        "name": "Teacher Discipline and Misconduct",
        "columns": [
          {
            "name": "Date Key",
            "dataType": "int64",
            "sourceColumn": "Date Key"
          },
          {
            "name": "Teacher Key",
            "dataType": "string",
            "sourceColumn": "Teacher Key"
          },
          {
            "name": "Campus Key",
            "dataType": "string",
            "sourceColumn": "Campus Key"
          },
          {
            "name": "Class Key",
            "dataType": "string",
            "sourceColumn": "Class Key"
          },
          {
            "name": "Level Key",
            "dataType": "string",
            "sourceColumn": "Level Key"
          },
          {
            "name": "ConductID",
            "dataType": "string",
            "sourceColumn": "ConductID"
          },
          {
            "name": "Teacher Code",
            "dataType": "string",
            "sourceColumn": "Teacher Code"
          },
          {
            "name": "Campus Conduct Code",
            "dataType": "string",
            "sourceColumn": "Campus Conduct Code"
          },
          {
            "name": "Class Conduct Code",
            "dataType": "string",
            "sourceColumn": "Class Conduct Code"
          },
          {
            "name": "Conduct Date",
            "dataType": "dateTime",
            "sourceColumn": "Conduct Date"
          },
          {
            "name": "Misconduct Type Key",
            "dataType": "int64",
            "sourceColumn": "Misconduct Type Key"
          },
          {
            "name": "Discipline Key",
            "dataType": "int64",
            "sourceColumn": "Discipline Key"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_TEACHER_DISCIPLINES_MISCONDUCT_F = Source{[Schema=\"DWH\",Item=\"VW_TEACHER_DISCIPLINES_MISCONDUCT_F\"]}[Data]",
                "in",
                "    DWH_VW_TEACHER_DISCIPLINES_MISCONDUCT_F"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "# of Conduct",
            "expression": " CALCULATE(DISTINCTCOUNT('Teacher Discipline and Misconduct'[ConductID]))",
            "formatString": "#,0"
          }
        ]
      },
      {
        "name": "Teacher Discipline and Misconduct VUS",
        "isHidden": true,
        "columns": [
          {
            "name": "Date Key",
            "dataType": "int64",
            "sourceColumn": "Date Key"
          },
          {
            "name": "Teacher Key",
            "dataType": "string",
            "sourceColumn": "Teacher Key"
          },
          {
            "name": "Campus Key",
            "dataType": "string",
            "sourceColumn": "Campus Key"
          },
          {
            "name": "Class Key",
            "dataType": "string",
            "sourceColumn": "Class Key"
          },
          {
            "name": "Level Key",
            "dataType": "string",
            "sourceColumn": "Level Key"
          },
          {
            "name": "ConductID",
            "dataType": "string",
            "sourceColumn": "ConductID"
          },
          {
            "name": "Teacher Code",
            "dataType": "string",
            "sourceColumn": "Teacher Code"
          },
          {
            "name": "Campus Conduct Code",
            "dataType": "string",
            "sourceColumn": "Campus Conduct Code"
          },
          {
            "name": "Class Conduct Code",
            "dataType": "string",
            "sourceColumn": "Class Conduct Code"
          },
          {
            "name": "Conduct Date",
            "dataType": "dateTime",
            "sourceColumn": "Conduct Date"
          },
          {
            "name": "Misconduct Type Key",
            "dataType": "int64",
            "sourceColumn": "Misconduct Type Key"
          },
          {
            "name": "Discipline Key",
            "dataType": "int64",
            "sourceColumn": "Discipline Key"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_TEACHER_DISCIPLINES_MISCONDUCT_F = Source{[Schema=\"DWH\",Item=\"VW_TEACHER_DISCIPLINES_MISCONDUCT_F\"]}[Data]",
                "in",
                "    DWH_VW_TEACHER_DISCIPLINES_MISCONDUCT_F"
              ]
            }
          }
        ]
      },
      {
        "name": "Observation VUS",
        "columns": [
          {
            "name": "Date Key",
            "dataType": "int64",
            "sourceColumn": "Date Key"
          },
          {
            "name": "Teacher Key",
            "dataType": "string",
            "sourceColumn": "Teacher Key"
          },
          {
            "name": "Campus Key",
            "dataType": "string",
            "sourceColumn": "Campus Key"
          },
          {
            "name": "Class Key",
            "dataType": "string",
            "sourceColumn": "Class Key"
          },
          {
            "name": "Level Key",
            "dataType": "string",
            "sourceColumn": "Level Key"
          },
          {
            "name": "Evaluation Type Key",
            "dataType": "string",
            "sourceColumn": "Evaluation Type Key"
          },
          {
            "name": "Teacher Code",
            "dataType": "string",
            "sourceColumn": "Teacher Code"
          },
          {
            "name": "Campus Observation Code",
            "dataType": "string",
            "sourceColumn": "Campus Observation Code"
          },
          {
            "name": "Class Observation Code",
            "dataType": "string",
            "sourceColumn": "Class Observation Code"
          },
          {
            "name": "ObservationID",
            "dataType": "string",
            "sourceColumn": "ObservationID"
          },
          {
            "name": "Observation Date",
            "dataType": "dateTime",
            "sourceColumn": "Observation Date"
          },
          {
            "name": "Observation From Time",
            "dataType": "string",
            "sourceColumn": "Observation From Time"
          },
          {
            "name": "Observation To Time",
            "dataType": "string",
            "sourceColumn": "Observation To Time"
          },
          {
            "name": "No of Attendance",
            "dataType": "int64",
            "sourceColumn": "No of Attendance"
          },
          {
            "name": "Observation Type Key",
            "dataType": "int64",
            "sourceColumn": "Observation Type Key"
          },
          {
            "name": "Lesson Content",
            "dataType": "string",
            "sourceColumn": "Lesson Content"
          },
          {
            "name": "Observation Score",
            "dataType": "double",
            "sourceColumn": "Observation Score"
          },
          {
            "name": "Observation Ranking",
            "dataType": "string",
            "sourceColumn": "Observation Ranking"
          },
          {
            "name": "User Code",
            "dataType": "string",
            "sourceColumn": "User Code"
          },
          {
            "name": "User Name",
            "dataType": "string",
            "sourceColumn": "User Name"
          },
          {
            "name": "User Position",
            "dataType": "string",
            "sourceColumn": "User Position"
          },
          {
            "name": "User Key",
            "dataType": "string",
            "sourceColumn": "User Key"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_OBSERVATION_F = Source{[Schema=\"DWH\",Item=\"VW_OBSERVATION_F\"]}[Data]",
                "in",
                "    DWH_VW_OBSERVATION_F"
              ]
            }
          }
        ]
      },
      {
        "name": "Teacher Assignment",
        "columns": [
          {
            "name": "Date Key",
            "dataType": "int64",
            "sourceColumn": "Date Key"
          },
          {
            "name": "Teacher Key",
            "dataType": "string",
            "sourceColumn": "Teacher Key"
          },
          {
            "name": "Branch Key",
            "dataType": "string",
            "sourceColumn": "Branch Key"
          },
          {
            "name": "DATE_NAME",
            "dataType": "dateTime",
            "sourceColumn": "DATE_NAME"
          },
          {
            "name": "Teacher Profile ID",
            "dataType": "string",
            "sourceColumn": "Teacher Profile ID"
          },
          {
            "name": "Start Date",
            "dataType": "dateTime",
            "sourceColumn": "Start Date"
          },
          {
            "name": "End Date",
            "dataType": "dateTime",
            "sourceColumn": "End Date"
          },
          {
            "name": "Next Start Date",
            "dataType": "dateTime",
            "sourceColumn": "Next Start Date"
          },
          {
            "name": "Last End Date",
            "dataType": "dateTime",
            "sourceColumn": "Last End Date"
          },
          {
            "name": "Campus Code",
            "dataType": "string",
            "sourceColumn": "Campus Code"
          },
          {
            "name": "Position Name",
            "dataType": "string",
            "sourceColumn": "Position Name"
          },
          {
            "name": "Teacher Type",
            "dataType": "string",
            "sourceColumn": "Teacher Type"
          },
          {
            "name": "Start Flag",
            "dataType": "int64",
            "sourceColumn": "Start Flag"
          },
          {
            "name": "End Flag",
            "dataType": "int64",
            "sourceColumn": "End Flag"
          },
          {
            "name": "Data Version",
            "dataType": "string",
            "sourceColumn": "Data Version"
          },
          {
            "name": "Full Time Flag",
            "dataType": "string",
            "sourceColumn": "Full Time Flag"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_TEACHER_ASSIGNMENT_FULL_F = Source{[Schema=\"DWH\",Item=\"VW_TEACHER_ASSIGNMENT_FULL_F\"]}[Data]",
                "in",
                "    DWH_VW_TEACHER_ASSIGNMENT_FULL_F"
              ]
            }
          }
        ]
      },
      {
        "name": "Teacher Assignment VUS",
        "columns": [
          {
            "name": "Date Key",
            "dataType": "int64",
            "sourceColumn": "Date Key"
          },
          {
            "name": "Teacher Key",
            "dataType": "string",
            "sourceColumn": "Teacher Key"
          },
          {
            "name": "Branch Key",
            "dataType": "string",
            "sourceColumn": "Branch Key"
          },
          {
            "name": "DATE_NAME",
            "dataType": "dateTime",
            "sourceColumn": "DATE_NAME"
          },
          {
            "name": "Teacher Profile ID",
            "dataType": "string",
            "sourceColumn": "Teacher Profile ID"
          },
          {
            "name": "Start Date",
            "dataType": "dateTime",
            "sourceColumn": "Start Date"
          },
          {
            "name": "End Date",
            "dataType": "dateTime",
            "sourceColumn": "End Date"
          },
          {
            "name": "Next Start Date",
            "dataType": "dateTime",
            "sourceColumn": "Next Start Date"
          },
          {
            "name": "Last End Date",
            "dataType": "dateTime",
            "sourceColumn": "Last End Date"
          },
          {
            "name": "Campus Code",
            "dataType": "string",
            "sourceColumn": "Campus Code"
          },
          {
            "name": "Position Name",
            "dataType": "string",
            "sourceColumn": "Position Name"
          },
          {
            "name": "Teacher Type",
            "dataType": "string",
            "sourceColumn": "Teacher Type"
          },
          {
            "name": "Start Flag",
            "dataType": "int64",
            "sourceColumn": "Start Flag"
          },
          {
            "name": "End Flag",
            "dataType": "int64",
            "sourceColumn": "End Flag"
          },
          {
            "name": "Full Time Flag",
            "dataType": "string",
            "sourceColumn": "Full Time Flag"
          },
          {
            "name": "Data Version",
            "dataType": "string",
            "sourceColumn": "Data Version"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_TEACHER_ASSIGNMENT_FULL_F = Source{[Schema=\"DWH\",Item=\"VW_TEACHER_ASSIGNMENT_FULL_F\"]}[Data]",
                "in",
                "    DWH_VW_TEACHER_ASSIGNMENT_FULL_F"
              ]
            }
          }
        ]
      },
      {
        "name": "Class Close",
        "columns": [
          {
            "name": "Date Key",
            "dataType": "int64",
            "sourceColumn": "Date Key"
          },
          {
            "name": "Branch Key",
            "dataType": "string",
            "sourceColumn": "Branch Key"
          },
          {
            "name": "List Class Key",
            "dataType": "string",
            "sourceColumn": "List Class Key"
          },
          {
            "name": "Course Key",
            "dataType": "string",
            "sourceColumn": "Course Key"
          },
          {
            "name": "Level Key",
            "dataType": "string",
            "sourceColumn": "Level Key"
          },
          {
            "name": "List Class Code",
            "dataType": "string",
            "sourceColumn": "List Class Code"
          },
          {
            "name": "Open Date",
            "dataType": "dateTime",
            "sourceColumn": "Open Date"
          },
          {
            "name": "Close Date",
            "dataType": "dateTime",
            "sourceColumn": "Close Date"
          },
          {
            "name": "Class State Flag",
            "dataType": "string",
            "sourceColumn": "Class State Flag"
          },
          {
            "name": "iTalk Flag",
            "dataType": "string",
            "sourceColumn": "iTalk Flag"
          },
          {
            "name": "TotalOfStudent",
            "dataType": "int64",
            "sourceColumn": "TotalOfStudent"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_CLASS_CLOSE_F = Source{[Schema=\"DWH\",Item=\"VW_CLASS_CLOSE_F\"]}[Data]",
                "in",
                "    DWH_VW_CLASS_CLOSE_F"
              ]
            }
          }
        ]
      },
      {
        "name": "Users",
        "columns": [
          {
            "name": "User Key",
            "dataType": "string",
            "sourceColumn": "User Key"
          },
          {
            "name": "User Code",
            "dataType": "string",
            "sourceColumn": "User Code"
          },
          {
            "name": "User Name",
            "dataType": "string",
            "sourceColumn": "User Name"
          },
          {
            "name": "User Position",
            "dataType": "string",
            "sourceColumn": "User Position"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_USERS_D = Source{[Schema=\"DWH\",Item=\"VW_USERS_D\"]}[Data]",
                "in",
                "    DWH_VW_USERS_D"
              ]
            }
          }
        ]
      },
      {
        "name": "Sharing Session",
        "columns": [
          {
            "name": "Date Key",
            "dataType": "int64",
            "sourceColumn": "Date Key"
          },
          {
            "name": "Campus Key",
            "dataType": "string",
            "sourceColumn": "Campus Key"
          },
          {
            "name": "SharingSessionID",
            "dataType": "string",
            "sourceColumn": "SharingSessionID"
          },
          {
            "name": "SharingSessionName",
            "dataType": "string",
            "sourceColumn": "SharingSessionName"
          },
          {
            "name": "SharingSessionType",
            "dataType": "string",
            "sourceColumn": "SharingSessionType"
          },
          {
            "name": "Address",
            "dataType": "string",
            "sourceColumn": "Address"
          },
          {
            "name": "TimeOfSharing",
            "dataType": "string",
            "sourceColumn": "TimeOfSharing"
          },
          {
            "name": "Presenter",
            "dataType": "string",
            "sourceColumn": "Presenter"
          },
          {
            "name": "PresenterID",
            "dataType": "string",
            "sourceColumn": "PresenterID"
          },
          {
            "name": "PresenterPosition",
            "dataType": "string",
            "sourceColumn": "PresenterPosition"
          },
          {
            "name": "IsCenter",
            "dataType": "boolean",
            "sourceColumn": "IsCenter"
          },
          {
            "name": "NumAttender",
            "dataType": "int64",
            "sourceColumn": "NumAttender"
          },
          {
            "name": "IsDeleted",
            "dataType": "boolean",
            "sourceColumn": "IsDeleted"
          },
          {
            "name": "Present",
            "dataType": "int64",
            "sourceColumn": "Present"
          },
          {
            "name": "EffectDate",
            "dataType": "dateTime",
            "sourceColumn": "EffectDate"
          },
          {
            "name": "Room",
            "dataType": "string",
            "sourceColumn": "Room"
          },
          {
            "name": "SharingSessionDetailID",
            "dataType": "string",
            "sourceColumn": "SharingSessionDetailID"
          },
          {
            "name": "Note",
            "dataType": "string",
            "sourceColumn": "Note"
          },
          {
            "name": "TeacherProfileID",
            "dataType": "string",
            "sourceColumn": "TeacherProfileID"
          },
          {
            "name": "TeacherCode",
            "dataType": "string",
            "sourceColumn": "TeacherCode"
          },
          {
            "name": "TeacherName",
            "dataType": "string",
            "sourceColumn": "TeacherName"
          },
          {
            "name": "PresentDate",
            "dataType": "dateTime",
            "sourceColumn": "PresentDate"
          },
          {
            "name": "ScoreItemID",
            "dataType": "string",
            "sourceColumn": "ScoreItemID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_SHARINGSESSION_F = Source{[Schema=\"DWH\",Item=\"VW_SHARINGSESSION_F\"]}[Data]",
                "in",
                "    DWH_VW_SHARINGSESSION_F"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "# of TeacherAttendingSharingSession",
            "expression": " CALCULATE(DISTINCTCOUNT('Sharing Session'[TeacherCode]))"
          },
          {
            "name": "# of SharingSession",
            "expression": " CALCULATE(DISTINCTCOUNT('Sharing Session'[SharingSessionID]))"
          },
          {
            "name": "# of TeacherAttendingSharingSessionVUS",
            "expression": " CALCULATE(DISTINCTCOUNT('Sharing Session VUS'[TeacherCode]))"
          },
          {
            "name": "Avg  Teacher Attending Sharing Session VUS",
            "expression": "DIVIDE([# of TeacherAttendingSharingSessionVUS],[# of SharingSessionVUS],BLANK())"
          },
          {
            "name": "Avg Teacher Attending Sharing Session",
            "expression": "DIVIDE([# of TeacherAttendingSharingSession],[# of SharingSession],BLANK())"
          },
          {
            "name": "# of SharingSessionVUS",
            "expression": " CALCULATE(DISTINCTCOUNT('Sharing Session VUS'[SharingSessionID]))"
          }
        ]
      },
      {
        "name": "Sharing Session VUS",
        "columns": [
          {
            "name": "Date Key",
            "dataType": "int64",
            "sourceColumn": "Date Key"
          },
          {
            "name": "Campus Key",
            "dataType": "string",
            "sourceColumn": "Campus Key"
          },
          {
            "name": "SharingSessionID",
            "dataType": "string",
            "sourceColumn": "SharingSessionID"
          },
          {
            "name": "SharingSessionName",
            "dataType": "string",
            "sourceColumn": "SharingSessionName"
          },
          {
            "name": "SharingSessionType",
            "dataType": "string",
            "sourceColumn": "SharingSessionType"
          },
          {
            "name": "Address",
            "dataType": "string",
            "sourceColumn": "Address"
          },
          {
            "name": "TimeOfSharing",
            "dataType": "string",
            "sourceColumn": "TimeOfSharing"
          },
          {
            "name": "Presenter",
            "dataType": "string",
            "sourceColumn": "Presenter"
          },
          {
            "name": "PresenterID",
            "dataType": "string",
            "sourceColumn": "PresenterID"
          },
          {
            "name": "PresenterPosition",
            "dataType": "string",
            "sourceColumn": "PresenterPosition"
          },
          {
            "name": "IsCenter",
            "dataType": "boolean",
            "sourceColumn": "IsCenter"
          },
          {
            "name": "NumAttender",
            "dataType": "int64",
            "sourceColumn": "NumAttender"
          },
          {
            "name": "IsDeleted",
            "dataType": "boolean",
            "sourceColumn": "IsDeleted"
          },
          {
            "name": "Present",
            "dataType": "int64",
            "sourceColumn": "Present"
          },
          {
            "name": "EffectDate",
            "dataType": "dateTime",
            "sourceColumn": "EffectDate"
          },
          {
            "name": "Room",
            "dataType": "string",
            "sourceColumn": "Room"
          },
          {
            "name": "SharingSessionDetailID",
            "dataType": "string",
            "sourceColumn": "SharingSessionDetailID"
          },
          {
            "name": "Note",
            "dataType": "string",
            "sourceColumn": "Note"
          },
          {
            "name": "TeacherProfileID",
            "dataType": "string",
            "sourceColumn": "TeacherProfileID"
          },
          {
            "name": "TeacherCode",
            "dataType": "string",
            "sourceColumn": "TeacherCode"
          },
          {
            "name": "TeacherName",
            "dataType": "string",
            "sourceColumn": "TeacherName"
          },
          {
            "name": "PresentDate",
            "dataType": "dateTime",
            "sourceColumn": "PresentDate"
          },
          {
            "name": "ScoreItemID",
            "dataType": "string",
            "sourceColumn": "ScoreItemID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_SHARINGSESSION_F = Source{[Schema=\"DWH\",Item=\"VW_SHARINGSESSION_F\"]}[Data]",
                "in",
                "    DWH_VW_SHARINGSESSION_F"
              ]
            }
          }
        ]
      },
      {
        "name": "Retention Rate",
        "columns": [
          {
            "name": "Date Key",
            "dataType": "int64",
            "sourceColumn": "Date Key"
          },
          {
            "name": "Campus Key",
            "dataType": "string",
            "sourceColumn": "Campus Key"
          },
          {
            "name": "Class Key",
            "dataType": "string",
            "sourceColumn": "Class Key"
          },
          {
            "name": "Level Key",
            "dataType": "string",
            "sourceColumn": "Level Key"
          },
          {
            "name": "RetentionClassCode",
            "dataType": "string",
            "sourceColumn": "RetentionClassCode"
          },
          {
            "name": "RetentionClassName",
            "dataType": "string",
            "sourceColumn": "RetentionClassName"
          },
          {
            "name": "RetentionClassOpenDate",
            "dataType": "dateTime",
            "sourceColumn": "RetentionClassOpenDate"
          },
          {
            "name": "RetentionClassCloseDate",
            "dataType": "dateTime",
            "sourceColumn": "RetentionClassCloseDate"
          },
          {
            "name": "RetentionRateID",
            "dataType": "string",
            "sourceColumn": "RetentionRateID"
          },
          {
            "name": "UserinformationID",
            "dataType": "string",
            "sourceColumn": "UserinformationID"
          },
          {
            "name": "InvoiceID",
            "dataType": "string",
            "sourceColumn": "InvoiceID"
          },
          {
            "name": "RetentionType",
            "dataType": "int64",
            "sourceColumn": "RetentionType"
          },
          {
            "name": "RetentionStatus",
            "dataType": "string",
            "sourceColumn": "RetentionStatus"
          },
          {
            "name": "Dif",
            "dataType": "int64",
            "sourceColumn": "Dif"
          },
          {
            "name": "NumofStdOldClass",
            "dataType": "int64",
            "sourceColumn": "NumofStdOldClass"
          },
          {
            "name": "TypeofEndClass",
            "dataType": "int64",
            "sourceColumn": "TypeofEndClass"
          },
          {
            "name": "ModifiedOn",
            "dataType": "dateTime",
            "sourceColumn": "ModifiedOn"
          },
          {
            "name": "Isdeleted",
            "dataType": "boolean",
            "sourceColumn": "Isdeleted"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_RETENTION_RATE_F = Source{[Schema=\"DWH\",Item=\"VW_RETENTION_RATE_F\"]}[Data]",
                "in",
                "    DWH_VW_RETENTION_RATE_F"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "# of Class Re Enrolment",
            "expression": " CALCULATE(DISTINCTCOUNT('Retention Rate'[Class Key]))"
          },
          {
            "name": "# of Re Enrolment TGD",
            "expression": " CALCULATE(DISTINCTCOUNT('Retention Rate'[UserinformationID]),'Retention Rate'[RetentionType]=0)"
          },
          {
            "name": "# of Re Enrolment TGDLATE",
            "expression": " CALCULATE(DISTINCTCOUNT('Retention Rate'[UserinformationID]),'Retention Rate'[RetentionType]=1)"
          },
          {
            "name": "# of Re Enrolment TNTGD",
            "expression": " CALCULATE(DISTINCTCOUNT('Retention Rate'[UserinformationID]),'Retention Rate'[RetentionType]=2)"
          },
          {
            "name": "Re Enrollment",
            "expression": "[# of Re Enrolment TGD]+[# of Re Enrolment TGDLATE]"
          },
          {
            "name": "# of Old Student Enrollment",
            "expression": " SUMX(VALUES('Retention Rate'[Class Key]),CALCULATE(MAX('Retention Rate'[NumofStdOldClass])))"
          },
          {
            "name": "Re Enrolment Rate",
            "expression": [
              "DIVIDE( [Re Enrollment],[# of Old Student Enrollment],BLANK())",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "# of Re Enrolment TGD VUS",
            "expression": " CALCULATE(DISTINCTCOUNT('Retention Rate VUS'[UserinformationID]),'Retention Rate VUS'[RetentionType]=0)"
          },
          {
            "name": "# of Re Enrolment TGDLATE VUS",
            "expression": " CALCULATE(DISTINCTCOUNT('Retention Rate VUS'[UserinformationID]),'Retention Rate VUS'[RetentionType]=1)"
          },
          {
            "name": "# of Re Enrolment TNTGD VUS",
            "expression": " CALCULATE(DISTINCTCOUNT('Retention Rate VUS'[UserinformationID]),'Retention Rate VUS'[RetentionType]=2)"
          },
          {
            "name": "Re Enrollment VUS",
            "expression": "[# of Re Enrolment TGD VUS]+[# of Re Enrolment TGDLATE VUS]"
          },
          {
            "name": "# of Old Student Enrollment VUS",
            "expression": " SUMX(VALUES('Retention Rate VUS'[Class Key]),CALCULATE(MAX('Retention Rate VUS'[NumofStdOldClass])))"
          },
          {
            "name": "Re Enrolment Rate VUS",
            "expression": "DIVIDE( [Re Enrollment VUS], [# of Old Student Enrollment VUS],BLANK())",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Avg Campus Retention Rate VUS",
            "expression": " DIVIDE(DIVIDE( [Re Enrollment VUS]  / [# of Old Student Enrollment VUS],BLANK()),[# of Campus],BLANK())"
          },
          {
            "name": "# of RetentionRateBenchmark",
            "expression": " CALCULATE(AVERAGE(Benchmark[Benchmark])/100,Benchmark[BenchmarkType]=\"TQMEnrolmentRate\")",
            "formatString": "0.00%;-0.00%;0.00%"
          }
        ]
      },
      {
        "name": "Retention Rate VUS",
        "columns": [
          {
            "name": "Date Key",
            "dataType": "int64",
            "sourceColumn": "Date Key"
          },
          {
            "name": "Campus Key",
            "dataType": "string",
            "sourceColumn": "Campus Key"
          },
          {
            "name": "Class Key",
            "dataType": "string",
            "sourceColumn": "Class Key"
          },
          {
            "name": "Level Key",
            "dataType": "string",
            "sourceColumn": "Level Key"
          },
          {
            "name": "RetentionClassCode",
            "dataType": "string",
            "sourceColumn": "RetentionClassCode"
          },
          {
            "name": "RetentionClassName",
            "dataType": "string",
            "sourceColumn": "RetentionClassName"
          },
          {
            "name": "RetentionClassOpenDate",
            "dataType": "dateTime",
            "sourceColumn": "RetentionClassOpenDate"
          },
          {
            "name": "RetentionClassCloseDate",
            "dataType": "dateTime",
            "sourceColumn": "RetentionClassCloseDate"
          },
          {
            "name": "RetentionRateID",
            "dataType": "string",
            "sourceColumn": "RetentionRateID"
          },
          {
            "name": "UserinformationID",
            "dataType": "string",
            "sourceColumn": "UserinformationID"
          },
          {
            "name": "InvoiceID",
            "dataType": "string",
            "sourceColumn": "InvoiceID"
          },
          {
            "name": "RetentionType",
            "dataType": "int64",
            "sourceColumn": "RetentionType"
          },
          {
            "name": "RetentionStatus",
            "dataType": "string",
            "sourceColumn": "RetentionStatus"
          },
          {
            "name": "Dif",
            "dataType": "int64",
            "sourceColumn": "Dif"
          },
          {
            "name": "NumofStdOldClass",
            "dataType": "int64",
            "sourceColumn": "NumofStdOldClass"
          },
          {
            "name": "TypeofEndClass",
            "dataType": "int64",
            "sourceColumn": "TypeofEndClass"
          },
          {
            "name": "ModifiedOn",
            "dataType": "dateTime",
            "sourceColumn": "ModifiedOn"
          },
          {
            "name": "Isdeleted",
            "dataType": "boolean",
            "sourceColumn": "Isdeleted"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_RETENTION_RATE_F = Source{[Schema=\"DWH\",Item=\"VW_RETENTION_RATE_F\"]}[Data]",
                "in",
                "    DWH_VW_RETENTION_RATE_F"
              ]
            }
          }
        ]
      },
      {
        "name": "Competency",
        "columns": [
          {
            "name": "CompetencyKey",
            "dataType": "string",
            "sourceColumn": "CompetencyKey"
          },
          {
            "name": "CompetencyCode",
            "dataType": "string",
            "sourceColumn": "CompetencyCode"
          },
          {
            "name": "CompetencyName",
            "dataType": "string",
            "sourceColumn": "CompetencyName"
          },
          {
            "name": "Enabled",
            "dataType": "boolean",
            "sourceColumn": "Enabled"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_COMPETENCY_D = Source{[Schema=\"DWH\",Item=\"VW_COMPETENCY_D\"]}[Data]",
                "in",
                "    DWH_VW_COMPETENCY_D"
              ]
            }
          }
        ]
      },
      {
        "name": "CompetencyGroup",
        "columns": [
          {
            "name": "OECompetencyGroupKey",
            "dataType": "string",
            "sourceColumn": "OECompetencyGroupKey"
          },
          {
            "name": "OECompetencyGroupCode",
            "dataType": "string",
            "sourceColumn": "OECompetencyGroupCode"
          },
          {
            "name": "OECompetencyGroupName",
            "dataType": "string",
            "sourceColumn": "OECompetencyGroupName"
          },
          {
            "name": "PartName",
            "dataType": "string",
            "sourceColumn": "PartName"
          },
          {
            "name": "Idx",
            "dataType": "int64",
            "sourceColumn": "Idx"
          },
          {
            "name": "PartIdx",
            "dataType": "int64",
            "sourceColumn": "PartIdx"
          },
          {
            "name": "IsShowTimesColl",
            "dataType": "boolean",
            "sourceColumn": "IsShowTimesColl"
          },
          {
            "name": "Enabled",
            "dataType": "boolean",
            "sourceColumn": "Enabled"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_COMPETENCY_GROUP_PART_TQM_D = Source{[Schema=\"DWH\",Item=\"VW_COMPETENCY_GROUP_PART_TQM_D\"]}[Data]",
                "in",
                "    DWH_VW_COMPETENCY_GROUP_PART_TQM_D"
              ]
            }
          }
        ]
      },
      {
        "name": "CompetencyItems",
        "columns": [
          {
            "name": "KeyCompetencyItemID",
            "dataType": "string",
            "sourceColumn": "KeyCompetencyItemID"
          },
          {
            "name": "OECompetencyItemsID",
            "dataType": "string",
            "sourceColumn": "OECompetencyItemsID"
          },
          {
            "name": "Score",
            "dataType": "string",
            "sourceColumn": "Score"
          },
          {
            "name": "Ranking",
            "dataType": "string",
            "sourceColumn": "Ranking"
          },
          {
            "name": "Content",
            "dataType": "string",
            "sourceColumn": "Content"
          },
          {
            "name": "Highlight",
            "dataType": "boolean",
            "sourceColumn": "Highlight"
          },
          {
            "name": "Active",
            "dataType": "boolean",
            "sourceColumn": "Active"
          },
          {
            "name": "Enabled",
            "dataType": "boolean",
            "sourceColumn": "Enabled"
          },
          {
            "name": "EvaluationTypeName",
            "dataType": "string",
            "sourceColumn": "EvaluationTypeName"
          },
          {
            "name": "EvaluationTypeID",
            "dataType": "string",
            "sourceColumn": "EvaluationTypeID"
          },
          {
            "type": "calculated",
            "name": "Score Aliased",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " IF(CompetencyItems[Score] = \"1\" , \"1. Ineffective\", IF(CompetencyItems[Score] = \"2\", \"2. Developing\", IF(CompetencyItems[Score] = \"3\", \"3. Accomplishing\", \"4. Outstanding\")))"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_COMPETENCY_ITEMS_D = Source{[Schema=\"DWH\",Item=\"VW_COMPETENCY_ITEMS_D\"]}[Data]",
                "in",
                "    DWH_VW_COMPETENCY_ITEMS_D"
              ]
            }
          }
        ]
      },
      {
        "name": "Group",
        "columns": [
          {
            "name": "Group_Id",
            "dataType": "int64",
            "sourceColumn": "Group_Id"
          },
          {
            "name": "GroupKey",
            "dataType": "string",
            "sourceColumn": "GroupKey"
          },
          {
            "name": "Group_Name",
            "dataType": "string",
            "sourceColumn": "Group_Name"
          },
          {
            "type": "calculated",
            "name": "Group_Name_Aliased",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " IF('Group'[Group_Name] =\"Quality Assurance\", \"QA\", IF('Group'[Group_Name] =\"TQM\", \"QC\", 'Group'[Group_Name]))"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_GROUP_D = Source{[Schema=\"DWH\",Item=\"VW_GROUP_D\"]}[Data]",
                "in",
                "    DWH_VW_GROUP_D"
              ]
            }
          }
        ]
      },
      {
        "name": "ObservationQaQcNew",
        "columns": [
          {
            "name": "KeyId",
            "dataType": "string",
            "sourceColumn": "KeyId"
          },
          {
            "name": "CompetencyGroupKey",
            "dataType": "string",
            "sourceColumn": "CompetencyGroupKey"
          },
          {
            "name": "CompetencyKey",
            "dataType": "string",
            "sourceColumn": "CompetencyKey"
          },
          {
            "name": "CompetencyItemKey",
            "dataType": "string",
            "sourceColumn": "CompetencyItemKey"
          },
          {
            "name": "TeacherProfileKey",
            "dataType": "string",
            "sourceColumn": "TeacherProfileKey"
          },
          {
            "name": "ClassKey",
            "dataType": "string",
            "sourceColumn": "ClassKey"
          },
          {
            "name": "CampusKey",
            "dataType": "string",
            "sourceColumn": "CampusKey"
          },
          {
            "name": "LevelProgramKey",
            "dataType": "string",
            "sourceColumn": "LevelProgramKey"
          },
          {
            "name": "RoomKey",
            "dataType": "string",
            "sourceColumn": "RoomKey"
          },
          {
            "name": "AssessmentDateKey",
            "dataType": "string",
            "sourceColumn": "AssessmentDateKey"
          },
          {
            "name": "ObserverKey",
            "dataType": "string",
            "sourceColumn": "ObserverKey"
          },
          {
            "name": "GroupKey",
            "dataType": "string",
            "sourceColumn": "GroupKey"
          },
          {
            "name": "AssessmentCompetencyTotalScore",
            "dataType": "int64",
            "sourceColumn": "AssessmentCompetencyTotalScore"
          },
          {
            "name": "AssessmentCompetencyTotalPoint",
            "dataType": "int64",
            "sourceColumn": "AssessmentCompetencyTotalPoint"
          },
          {
            "name": "AssessmentCompetencyMaximumTotalPoint",
            "dataType": "int64",
            "sourceColumn": "AssessmentCompetencyMaximumTotalPoint"
          },
          {
            "name": "AssessmentCompetencyItemScore",
            "dataType": "int64",
            "sourceColumn": "AssessmentCompetencyItemScore"
          },
          {
            "name": "AssessmentCompetencyItemChecked",
            "dataType": "boolean",
            "sourceColumn": "AssessmentCompetencyItemChecked"
          },
          {
            "name": "AssessmentPenaltyScore",
            "dataType": "int64",
            "sourceColumn": "AssessmentPenaltyScore"
          },
          {
            "name": "AssessmentTotalScore",
            "dataType": "double",
            "sourceColumn": "AssessmentTotalScore"
          },
          {
            "name": "AssessmentRanking",
            "dataType": "string",
            "sourceColumn": "AssessmentRanking"
          },
          {
            "name": "MilestonesCompetencyKey",
            "dataType": "string",
            "sourceColumn": "MilestonesCompetencyKey"
          },
          {
            "name": "CompetencyGroupCode",
            "dataType": "string",
            "sourceColumn": "CompetencyGroupCode"
          },
          {
            "name": "CompetencyCode",
            "dataType": "string",
            "sourceColumn": "CompetencyCode"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_OBSERVATION_QA_QC_F = Source{[Schema=\"DWH\",Item=\"VW_OBSERVATION_QA_QC_F\"]}[Data]",
                "in",
                "    DWH_VW_OBSERVATION_QA_QC_F"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "# of TeacherObservatedByItemsScore",
            "expression": [
              " CALCULATE(",
              "\t\t\t\t\tDISTINCTCOUNTNOBLANK(ObservationQaQcNew[TeacherProfileKey]),",
              "\t\t\t\t\tFILTER('ObservationQaQcNew', ObservationQaQcNew[AssessmentCompetencyItemChecked] = TRUE)",
              "\t\t\t\t)"
            ]
          },
          {
            "name": "% of TeacherPassMilestone",
            "expression": " DIVIDE([# of TeacherObservatedByItemsScore], [# of Teacher Observated])",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Avg Score Observated By QC",
            "expression": [
              "DIVIDE([Total Score QC],",
              "\t\t\t\t[# of Teacher Observated By QC],",
              "\t\t\t\tBLANK()",
              "\t\t\t\t)"
            ]
          },
          {
            "name": "Avg Score Observated By QA",
            "expression": [
              " DIVIDE([Total Score QA],",
              "\t\t\t\t[# of Teacher Observated By QA],",
              "\t\t\t\tBLANK()",
              "\t\t\t\t)"
            ]
          },
          {
            "name": "Median Score QC",
            "expression": " MEDIANX(VALUES(ObservationQaQcNew[TeacherProfileKey]), [Total Score QC])"
          },
          {
            "name": "Median Score QA",
            "expression": " MEDIANX(VALUES(ObservationQaQcNew[TeacherProfileKey]), [Total Score QA])"
          },
          {
            "name": "# of Observation QAQC",
            "expression": " CALCULATE(DISTINCTCOUNT(ObservationQaQcNew[KeyId]))"
          },
          {
            "name": "# of Class Observated",
            "expression": " DISTINCTCOUNTNOBLANK(ObservationQaQcNew[ClassKey])"
          },
          {
            "name": "# of Campus Observated",
            "expression": " DISTINCTCOUNTNOBLANK(ObservationQaQcNew[CampusKey])"
          },
          {
            "name": "# of Teacher Observated By QC",
            "expression": [
              " CALCULATE(",
              "\t\t\t\t\tDISTINCTCOUNTNOBLANK(ObservationQaQcNew[TeacherProfileKey]),",
              "\t\t\t\t\tFILTER('Group', 'Group'[Group_Name]=\"TQM\")",
              "\t\t\t\t)"
            ]
          },
          {
            "name": "# of Teacher Observated By QA",
            "expression": [
              " CALCULATE(",
              "\t\t\t\tDISTINCTCOUNTNOBLANK(ObservationQaQcNew[TeacherProfileKey]), ",
              "\t\t\t\tFILTER('Group','Group'[Group_Name]=\"Quality Assurance\")",
              "\t\t\t)"
            ]
          },
          {
            "name": "# of Teacher Observated",
            "expression": " DISTINCTCOUNTNOBLANK(ObservationQaQcNew[TeacherProfileKey])"
          },
          {
            "name": "# of Warning Rule Deviation QA-QC",
            "expression": [
              " CALCULATE(",
              "\t\t\t\tIF(ObservationQaQcNew[Total Score QA] <> BLANK(),",
              "\t\t\t\t\t DIVIDE(ObservationQaQcNew[Total QA-QC], ObservationQaQcNew[Total Score], 1.1),",
              "\t\t\t\t\t 1.1",
              "\t\t\t\t\t)",
              "\t\t\t\t)"
            ]
          },
          {
            "name": "Median QC Line (ALLSELECTED)",
            "expression": [
              " IF(ISBLANK(ObservationQaQcNew[Total Score QC]), ",
              "\t\tBLANK(), ",
              "\t\tCALCULATE(ObservationQaQcNew[Median Score QC], ",
              "\t\t\tALLSELECTED(ObservationQaQcNew)",
              "\t\t\t)",
              "\t\t) "
            ]
          },
          {
            "name": "Median QA Line (ALLSELECTED)",
            "expression": [
              " IF(",
              "\t\tISBLANK(ObservationQaQcNew[Total Score QC]), ",
              "\t\tBLANK(), ",
              "\t\tCALCULATE(ObservationQaQcNew[Median Score QA], ",
              "\t\t\tALLSELECTED(ObservationQaQcNew)",
              "\t\t\t)",
              "\t\t) "
            ]
          },
          {
            "name": "Avg QA- Avg QC",
            "expression": " [Avg Score Observated By QA] - [Avg Score Observated By QC]"
          },
          {
            "name": "VUS Avg each {QA-QC}",
            "expression": [
              " IF(",
              "\t\t\tISBLANK(ObservationQaQcNew[Total Score]),  ",
              "\t\t\tBLANK(), ",
              "\t\t\tCALCULATE(ObservationQaQcNew[Avg QA- Avg QC],  ",
              "\t\t\t\t\tALL(ObservationQaQcNew)",
              "\t\t\t\t)",
              "\t\t\t) "
            ],
            "isHidden": true
          },
          {
            "name": "Avg QA Advanced (ALL)",
            "expression": [
              "DIVIDE(",
              "\t\tCALCULATE(",
              "\t\t\tSUM(ObservationQaQcNew[AssessmentCompetencyTotalPoint]),",
              "\t\t\tFILTER('Group', 'Group'[Group_Name]=\"Quality Assurance\"),",
              "\t\t\tALL(ObservationQaQcNew)\t",
              "\t\t),",
              "\t \tCALCULATE(",
              "\t \t\tDISTINCTCOUNTNOBLANK(ObservationQaQcNew[TeacherProfileKey]),",
              "\t \t\tFILTER('Group','Group'[Group_Name]=\"Quality Assurance\"),",
              "\t \t\tALL(ObservationQaQcNew)\t",
              "\t \t), ",
              "\t\tBLANK()",
              "\t)"
            ]
          },
          {
            "name": "VUS Avg QA - VUS Avg QC",
            "expression": " [Avg QA Advanced (ALL)] - [Avg QC Advanced (ALL)]"
          },
          {
            "name": "Avg QC Advanced (ALL)",
            "expression": [
              " DIVIDE(",
              "\t\t[VUS Total Score QC Advanced],",
              "\t \t[VUS #of Teacher Observated by QC Advanced], ",
              "\t\tBLANK()",
              "\t)"
            ]
          },
          {
            "name": "VUS Total Score QC Advanced",
            "expression": [
              " ",
              "VAR Temp =",
              "\t       SUMMARIZE(ALL(ObservationQaQcNew),",
              "\t        'Campus'[Campus Code],",
              "\t        \"Total Score QC\", ObservationQaQcNew[Total Score QC],",
              "\t        \"Check\", IF(ISBLANK(ObservationQaQcNew[# of Teacher Observated By QA]), -1, ObservationQaQcNew[# of Teacher Observated By QA])",
              "\t        ) ",
              "RETURN ",
              "SUMX(FILTER(Temp, [Check] <> -1), [Total Score QC])"
            ]
          },
          {
            "name": "VUS #of Teacher Observated by QC Advanced",
            "expression": [
              " ",
              "VAR Temp =",
              "\t       SUMMARIZE(ALL(ObservationQaQcNew),",
              "\t        'Campus'[Campus Code],",
              "\t        \"Num of QC\", ObservationQaQcNew[# of Teacher Observated By QC],",
              "\t        \"Check\", IF(ISBLANK(ObservationQaQcNew[# of Teacher Observated By QA]), -1, ObservationQaQcNew[# of Teacher Observated By QA])",
              "\t        ) ",
              "RETURN ",
              "SUMX(FILTER(Temp,  [Check] <> -1),  [Num of QC])"
            ]
          },
          {
            "name": "Total Score QC",
            "expression": [
              " CALCULATE(",
              "\t\t\tSUM(ObservationQaQcNew[AssessmentCompetencyTotalPoint]),",
              "\t\t\tFILTER('Group','Group'[Group_Name]=\"TQM\")",
              "\t\t\t)"
            ]
          },
          {
            "name": "Total Score QA",
            "expression": [
              " CALCULATE(",
              "\t\tSUM(ObservationQaQcNew[AssessmentCompetencyTotalPoint]),",
              "\t\tFILTER('Group','Group'[Group_Name]=\"Quality Assurance\")",
              "\t\t)"
            ]
          },
          {
            "name": "Total QA-QC",
            "expression": " [Total Score QA] - [Total Score QC]"
          },
          {
            "name": "Total Score",
            "expression": " SUM(ObservationQaQcNew[AssessmentCompetencyTotalPoint])"
          },
          {
            "name": "Avg Score Observated By QA & QC",
            "expression": [
              " DIVIDE([Total Score],",
              "\t\t\t\t[# of Teacher Observated],",
              "\t\t\t\tBLANK()",
              "\t\t\t\t)"
            ]
          },
          {
            "name": "VUS #of Teacher Observated by QC Advanced (ALLEXCEPT)",
            "expression": [
              " ",
              "VAR Temp =",
              "\t       SUMMARIZE(ALLEXCEPT(ObservationQaQcNew, ObservationQaQcNew[CompetencyCode]),",
              "\t        'Campus'[Campus Code],",
              "\t        \"Num of QC\", ObservationQaQcNew[# of Teacher Observated By QC],",
              "\t        \"Check\", IF(ISBLANK(ObservationQaQcNew[# of Teacher Observated By QA]), -1, ObservationQaQcNew[# of Teacher Observated By QA])",
              "\t        )",
              "RETURN",
              " SUMX(FILTER(Temp, [Check] <> -1 ),  [Num of QC])"
            ]
          },
          {
            "name": "VUS Total Score QC Advanced (ALLEXCEPT)",
            "expression": [
              " ",
              "VAR Temp =",
              "\t       SUMMARIZE(ALLEXCEPT(ObservationQaQcNew, ObservationQaQcNew[CompetencyCode]),",
              "\t        'Campus'[Campus Code],",
              "\t        \"Total Score QC\", ObservationQaQcNew[Total Score QC],",
              "\t        \"Check\", IF(ISBLANK(ObservationQaQcNew[# of Teacher Observated By QA]), -1, ObservationQaQcNew[# of Teacher Observated By QA])",
              "\t        ) ",
              "RETURN ",
              "SUMX(FILTER(Temp, [Check] <> -1), [Total Score QC])"
            ]
          },
          {
            "name": "Avg QC Advanced (ALLEXCEPT)",
            "expression": [
              " DIVIDE(",
              "\t\t[VUS Total Score QC Advanced (ALLEXCEPT)],",
              "\t \t[VUS #of Teacher Observated by QC Advanced (ALLEXCEPT)], ",
              "\t\tBLANK()",
              "\t)"
            ]
          },
          {
            "name": "VUS #of Teacher Observated by QA Advanced (ALLEXCEPT)",
            "expression": [
              " ",
              "VAR Temp =",
              "\t       SUMMARIZE(ALLEXCEPT(ObservationQaQcNew, ObservationQaQcNew[CompetencyCode]),",
              "\t        'Campus'[Campus Code],",
              "\t        \"Num of QA\", ObservationQaQcNew[# of Teacher Observated By QA],",
              "\t        \"Check\", IF(ISBLANK(ObservationQaQcNew[# of Teacher Observated By QA]), -1, ObservationQaQcNew[# of Teacher Observated By QA])",
              "\t        )",
              "RETURN",
              " SUMX(FILTER(Temp, [Check] <> -1 ),  [Num of QA])"
            ]
          },
          {
            "name": "VUS Total Score QA Advanced (ALLEXCEPT)",
            "expression": [
              " ",
              "VAR Temp =",
              "\t       SUMMARIZE(ALLEXCEPT(ObservationQaQcNew, ObservationQaQcNew[CompetencyCode]),",
              "\t        'Campus'[Campus Code],",
              "\t        \"Total Score QA\", ObservationQaQcNew[Total Score QA],",
              "\t        \"Check\", IF(ISBLANK(ObservationQaQcNew[# of Teacher Observated By QA]), -1, ObservationQaQcNew[# of Teacher Observated By QA])",
              "\t        ) ",
              "RETURN ",
              "SUMX(FILTER(Temp, [Check] <> -1), [Total Score QA])"
            ]
          },
          {
            "name": "Avg QA Advanced (ALLEXCEPT)",
            "expression": [
              " DIVIDE(",
              "\t\t[VUS Total Score QA Advanced (ALLEXCEPT)],",
              "\t \t[VUS #of Teacher Observated by QA Advanced (ALLEXCEPT)], ",
              "\t\tBLANK()",
              "\t)"
            ]
          }
        ]
      },
      {
        "name": "MilestonesCompetency",
        "columns": [
          {
            "name": "MilestonesMasterID",
            "dataType": "string",
            "sourceColumn": "MilestonesMasterID"
          },
          {
            "name": "MilestonesDetailKey",
            "dataType": "string",
            "sourceColumn": "MilestonesDetailKey"
          },
          {
            "name": "CompetencyID",
            "dataType": "string",
            "sourceColumn": "CompetencyID"
          },
          {
            "name": "BranchID",
            "dataType": "string",
            "sourceColumn": "BranchID"
          },
          {
            "name": "CourseTypeID",
            "dataType": "string",
            "sourceColumn": "CourseTypeID"
          },
          {
            "name": "MilestonesName",
            "dataType": "string",
            "sourceColumn": "MilestonesName"
          },
          {
            "name": "IsVN",
            "dataType": "boolean",
            "sourceColumn": "IsVN"
          },
          {
            "name": "IsForeign",
            "dataType": "boolean",
            "sourceColumn": "IsForeign"
          },
          {
            "name": "MilestonesFromDate",
            "dataType": "dateTime",
            "sourceColumn": "MilestonesFromDate"
          },
          {
            "name": "MilestonesToDate",
            "dataType": "dateTime",
            "sourceColumn": "MilestonesToDate"
          },
          {
            "name": "MilestonesDetailLevel_Index",
            "dataType": "int64",
            "sourceColumn": "MilestonesDetailLevel_Index"
          },
          {
            "name": "MilestonesDetailLevel",
            "dataType": "int64",
            "sourceColumn": "MilestonesDetailLevel"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_MILESTONES_COMPETENCY_D = Source{[Schema=\"DWH\",Item=\"VW_MILESTONES_COMPETENCY_D\"]}[Data]",
                "in",
                "    DWH_VW_MILESTONES_COMPETENCY_D"
              ]
            }
          }
        ]
      },
      {
        "name": "Teaching Hours Detail",
        "columns": [
          {
            "name": "TeacherProfileKey",
            "dataType": "string",
            "sourceColumn": "TeacherProfileKey"
          },
          {
            "name": "ClassKey",
            "dataType": "string",
            "sourceColumn": "ClassKey"
          },
          {
            "name": "LevelProgramKey",
            "dataType": "string",
            "sourceColumn": "LevelProgramKey"
          },
          {
            "name": "CampusKey",
            "dataType": "string",
            "sourceColumn": "CampusKey"
          },
          {
            "name": "ScheduleDateKey",
            "dataType": "string",
            "sourceColumn": "ScheduleDateKey"
          },
          {
            "name": "TypeOfTeachingHours",
            "dataType": "string",
            "sourceColumn": "TypeOfTeachingHours"
          },
          {
            "name": "RealTotalHour",
            "dataType": "double",
            "sourceColumn": "RealTotalHour"
          },
          {
            "name": "TeacherContractType",
            "dataType": "string",
            "sourceColumn": "TeacherContractType"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_TEACHER_HOUR_DETAIL_F = Source{[Schema=\"DWH\",Item=\"VW_TEACHER_HOUR_DETAIL_F\"]}[Data]",
                "in",
                "    DWH_VW_TEACHER_HOUR_DETAIL_F"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "# of Scheduled Classes",
            "expression": " CALCULATE(DISTINCTCOUNT('Teaching Hours Detail'[ClassKey]))"
          },
          {
            "name": "Total Real Hour",
            "expression": " CALCULATE(Sum('Teaching Hours Detail'[RealTotalHour]))"
          }
        ]
      },
      {
        "name": "TeachingHoursDetailByMonth",
        "columns": [
          {
            "name": "SalaryTotalHourDetailID",
            "dataType": "string",
            "sourceColumn": "SalaryTotalHourDetailID"
          },
          {
            "name": "SalaryMonthTeacherID",
            "dataType": "string",
            "sourceColumn": "SalaryMonthTeacherID"
          },
          {
            "name": "ClassId",
            "dataType": "string",
            "sourceColumn": "ClassId"
          },
          {
            "name": "Total Hours",
            "dataType": "double",
            "sourceColumn": "Total Hours"
          },
          {
            "name": "IsSubTime",
            "dataType": "string",
            "sourceColumn": "IsSubTime"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_TEACHING_HOURS_DETAIL_MONTH_F = Source{[Schema=\"DWH\",Item=\"VW_TEACHING_HOURS_DETAIL_MONTH_F\"]}[Data]",
                "in",
                "    DWH_VW_TEACHING_HOURS_DETAIL_MONTH_F"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "# of Class By Month",
            "expression": " CALCULATE(DISTINCTCOUNT(TeachingHoursDetailByMonth[ClassId]))"
          },
          {
            "name": "Total Hour By Month",
            "expression": " SUM(TeachingHoursDetailByMonth[Total Hours])"
          }
        ]
      },
      {
        "name": "Teaching Cost 2",
        "columns": [
          {
            "name": "Date Key",
            "dataType": "int64",
            "sourceColumn": "Date Key"
          },
          {
            "name": "Branch Key",
            "dataType": "string",
            "sourceColumn": "Branch Key"
          },
          {
            "name": "Teacher Key",
            "dataType": "string",
            "sourceColumn": "Teacher Key"
          },
          {
            "name": "Salary Month Teacher ID",
            "dataType": "string",
            "sourceColumn": "Salary Month Teacher ID"
          },
          {
            "name": "Salary Month Year",
            "dataType": "string",
            "sourceColumn": "Salary Month Year"
          },
          {
            "name": "Month Year",
            "dataType": "string",
            "sourceColumn": "Month Year"
          },
          {
            "name": "Campus ID",
            "dataType": "string",
            "sourceColumn": "Campus ID"
          },
          {
            "name": "Campus Code",
            "dataType": "string",
            "sourceColumn": "Campus Code"
          },
          {
            "name": "Teacher Profile ID",
            "dataType": "string",
            "sourceColumn": "Teacher Profile ID"
          },
          {
            "name": "Teacher Type",
            "dataType": "string",
            "sourceColumn": "Teacher Type"
          },
          {
            "name": "Allowance Type",
            "dataType": "int64",
            "sourceColumn": "Allowance Type"
          },
          {
            "name": "Salary Status ID",
            "dataType": "int64",
            "sourceColumn": "Salary Status ID"
          },
          {
            "name": "Current Rate",
            "dataType": "double",
            "sourceColumn": "Current Rate"
          },
          {
            "name": "Salary Teaching Hour",
            "dataType": "double",
            "sourceColumn": "Salary Teaching Hour"
          },
          {
            "name": "Total Hour Corp",
            "dataType": "double",
            "sourceColumn": "Total Hour Corp"
          },
          {
            "name": "Total Place Menttest Orther",
            "dataType": "double",
            "sourceColumn": "Total Place Menttest Orther"
          },
          {
            "name": "Total Event",
            "dataType": "double",
            "sourceColumn": "Total Event"
          },
          {
            "name": "Total Marketing",
            "dataType": "double",
            "sourceColumn": "Total Marketing"
          },
          {
            "name": "Total Travel Settlement",
            "dataType": "double",
            "sourceColumn": "Total Travel Settlement"
          },
          {
            "name": "Allowance VND",
            "dataType": "double",
            "sourceColumn": "Allowance VND"
          },
          {
            "name": "Allowance USD",
            "dataType": "double",
            "sourceColumn": "Allowance USD"
          },
          {
            "name": "Allowce Travel VND",
            "dataType": "double",
            "sourceColumn": "Allowce Travel VND"
          },
          {
            "name": "USD Rate",
            "dataType": "double",
            "sourceColumn": "USD Rate"
          },
          {
            "name": "Placement Test VND",
            "dataType": "double",
            "sourceColumn": "Placement Test VND"
          },
          {
            "name": "TeacherContractType",
            "dataType": "string",
            "sourceColumn": "TeacherContractType"
          },
          {
            "name": "Teaching Total Hours",
            "dataType": "double",
            "sourceColumn": "Teaching Total Hours"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/vus-synapse-ws sql azuresynapse net;VUSDWHDEV\",",
                "    DWH_VW_TEACHING_COST_NET_F = Source{[Schema=\"DWH\",Item=\"VW_TEACHING_COST_NET_F\"]}[Data]",
                "in",
                "    DWH_VW_TEACHING_COST_NET_F"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Total Gross Teaching Cost 1",
            "expression": " CALCULATE(sum('Teaching Cost Gross'[Gross Salary]))"
          },
          {
            "name": "Total Travel Allowance 1",
            "expression": " CALCULATE(sum('Teaching Cost 2'[Allowance VND]),'Teaching Cost 2'[Allowance Type]=2,'Teaching Cost 2'[Salary Status ID]=5)"
          },
          {
            "name": "Total Settlement Allowance 1",
            "expression": " CALCULATE(sum('Teaching Cost 2'[Allowance VND]),'Teaching Cost 2'[Allowance Type]=1,'Teaching Cost 2'[Salary Status ID]=5)"
          },
          {
            "name": "Total Net Teaching Cost 1",
            "expression": [
              " ",
              "--CALCULATE(sum('Teaching Cost Gross'[Balance]))",
              "[Total Extra Cost 1] + [Total Teaching Base Salary 1]"
            ]
          },
          {
            "name": "Total Other Allowance 1",
            "expression": " CALCULATE(sum('Teaching Cost 2'[Allowance VND]),'Teaching Cost 2'[Salary Status ID]=5) + CALCULATE(sum('Teaching Cost 2'[Allowance VND])) - [Total Travel Allowance 1]-[Total Settlement Allowance 1]"
          },
          {
            "name": "Total Allowance 1",
            "expression": " CALCULATE(sum('Teaching Cost 2'[Allowance VND])) + CALCULATE(sum('Teaching Cost 2'[Allowce Travel VND]))"
          },
          {
            "name": "% Allowance vs Net Teaching Cost 1",
            "expression": " DIVIDE([Total Allowance 1],[Total Net Teaching Cost 1],BLANK())"
          },
          {
            "name": "Teaching Cost Benchmark 1",
            "expression": " CALCULATE(SUM('Teaching Cost Hour Detail'[BenchMarkTechingCost]))"
          },
          {
            "name": "Total Teaching Base Salary 1",
            "expression": " CALCULATE(SUM('Teaching Cost Hour Detail'[BaseTechingCost]))"
          },
          {
            "name": "Total Teaching Advance Hours 1",
            "expression": " CALCULATE(sum('Teaching Hour Extra'[Total Hours]))"
          },
          {
            "name": "Total Teaching Hours 1",
            "expression": " CALCULATE(SUM('Teaching Cost 2'[Total Hours]))"
          },
          {
            "name": "Total Teaching Extra Cost 1",
            "expression": " CALCULATE(SUM('Teaching Cost Allowance'[Total VND]))"
          },
          {
            "name": "Total Extra Cost 1",
            "expression": " CALCULATE(SUM('Teaching Hour Extra'[Extra Cost]))"
          },
          {
            "name": "Cost Diff 1",
            "expression": " [Teaching Cost Benchmark 1] - [Total Net Teaching Cost 1]"
          },
          {
            "name": "Teaching Cost Benchmark YTD 1",
            "expression": "  TOTALYTD([Teaching Cost Benchmark],'Calendar'[Date])"
          },
          {
            "name": "Cost Diff YTD 1",
            "expression": " [Teaching Cost Benchmark YTD 1] - [Total Net Teaching Cost YTD 1]"
          },
          {
            "name": "Cost MM 1",
            "expression": " DIVIDE('Teaching Cost 2'[Cost Diff 1],[Teaching Cost Benchmark 1])"
          },
          {
            "name": "% BM Cost vs Actual YTD 1",
            "expression": " IF([Total Net Teaching Cost YTD 1]=0,BLANK(),DIVIDE('Teaching Cost 2'[Teaching Cost Benchmark YTD 1],[Total Net Teaching Cost YTD 1]))"
          },
          {
            "name": "Cost YTDM 1",
            "expression": " IF([Teaching Cost Benchmark YTD 1]=0, BLANK(),DIVIDE(([Teaching Cost Benchmark YTD 1]-[Total Net Teaching Cost YTD 1]),[Teaching Cost Benchmark YTD 1]))"
          },
          {
            "name": "Total Net Teaching Cost YTD 1",
            "expression": " TOTALYTD([Total Net Teaching Cost 1],'Calendar'[Date])"
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "7f1efde0-46c3-4e95-a398-f5fe0aaba0cb",
        "fromTable": "General Information",
        "fromColumn": "Date Key",
        "toTable": "Calendar",
        "toColumn": "Date Key"
      },
      {
        "name": "f03acc17-8155-42aa-8a08-59c16010821b",
        "fromTable": "General Information",
        "fromColumn": "Level Key",
        "toTable": "Course",
        "toColumn": "Level Key"
      },
      {
        "name": "6f7c0e24-0637-43a6-8dc0-529967e76895",
        "fromTable": "Teacher Schedule",
        "fromColumn": "Date Key",
        "toTable": "Calendar",
        "toColumn": "Date Key"
      },
      {
        "name": "894260fe-d563-4f49-ae14-38eae0fbc61a",
        "fromTable": "Teacher Schedule",
        "fromColumn": "Level Key",
        "toTable": "Course",
        "toColumn": "Level Key"
      },
      {
        "name": "421c3943-ed2b-48ef-93fc-3f3020e2c684",
        "fromTable": "Teacher Schedule",
        "fromColumn": "Teacher Key",
        "toTable": "Teacher",
        "toColumn": "Teacher Key"
      },
      {
        "name": "496f85fa-b53f-4955-8692-b5ee65b42f44",
        "fromTable": "General Information",
        "fromColumn": "List Class Key",
        "toTable": "List Class",
        "toColumn": "List Class Key"
      },
      {
        "name": "2cb43c10-7d4c-488f-8507-f380442c552c",
        "fromTable": "Teacher Schedule",
        "fromColumn": "List Class Key",
        "toTable": "List Class",
        "toColumn": "List Class Key"
      },
      {
        "name": "9bbb1de9-8148-425a-8935-2db824ebadc1",
        "fromTable": "International Exam",
        "fromColumn": "Date Key",
        "toTable": "Calendar",
        "toColumn": "Date Key"
      },
      {
        "name": "fb065e4a-76f1-4447-bb2e-25108a424d88",
        "fromTable": "International Exam",
        "fromColumn": "Level Key",
        "toTable": "Course",
        "toColumn": "Level Key"
      },
      {
        "name": "39ae2a06-3445-4130-865f-31549ce65ece",
        "fromTable": "International Exam",
        "fromColumn": "List Class Key",
        "toTable": "List Class",
        "toColumn": "List Class Key"
      },
      {
        "name": "a1cf7018-744f-4ecf-8827-6beaea35abaa",
        "fromTable": "International Exam",
        "fromColumn": "Student Key",
        "toTable": "Student",
        "toColumn": "Student Key"
      },
      {
        "name": "a0ab1605-b10b-481e-a781-8a7f093b552b",
        "fromTable": "Teaching Cost Gross",
        "fromColumn": "Date Key",
        "toTable": "Calendar",
        "toColumn": "Date Key"
      },
      {
        "name": "06ce6a5e-8926-46ea-8036-e5173e35e626",
        "fromTable": "Teaching Cost Gross",
        "fromColumn": "Teacher Key",
        "toTable": "Teacher",
        "toColumn": "Teacher Key"
      },
      {
        "name": "2bfed08e-cee7-49b8-a78b-7823517b8f37",
        "fromTable": "Academy Exam",
        "fromColumn": "Date Key",
        "toTable": "Calendar",
        "toColumn": "Date Key"
      },
      {
        "name": "ac297ebc-b9dc-49c8-a229-ca58d83a20b7",
        "fromTable": "Academy Exam",
        "fromColumn": "Level Key",
        "toTable": "Course",
        "toColumn": "Level Key"
      },
      {
        "name": "bde50a93-5fc4-4cc6-beb7-680c684ba51a",
        "fromTable": "Academy Exam",
        "fromColumn": "List Class Key",
        "toTable": "List Class",
        "toColumn": "List Class Key"
      },
      {
        "name": "fc2bf3de-19d8-4112-8030-801c34ef8699",
        "fromTable": "Academy Exam",
        "fromColumn": "Student Key",
        "toTable": "Student",
        "toColumn": "Student Key"
      },
      {
        "name": "8c4f1eb3-308e-4d15-ad41-3be4072b33e0",
        "fromTable": "General Information",
        "fromColumn": "Branch Key",
        "toTable": "Campus",
        "toColumn": "ASA Branch Key"
      },
      {
        "name": "095f5620-7583-4fe7-b120-bd0fc2422fa0",
        "fromTable": "International Exam",
        "fromColumn": "ASA Branch Key",
        "toTable": "Campus",
        "toColumn": "ASA Branch Key"
      },
      {
        "name": "b2698c8c-e07a-4ecc-939e-51bc85ff9992",
        "fromTable": "Teacher Schedule",
        "fromColumn": "Branch Key",
        "toTable": "Campus",
        "toColumn": "ASA Branch Key"
      },
      {
        "name": "35d0ceab-da89-4af7-b53b-04569ba04173",
        "fromTable": "Benchmark",
        "fromColumn": "Date Key",
        "toTable": "Calendar",
        "toColumn": "Date Key"
      },
      {
        "name": "bcbf5fb9-78b8-4e4b-bc48-a2650b219279",
        "fromTable": "Benchmark",
        "fromColumn": "ASA Branch Key",
        "toTable": "Campus",
        "toColumn": "ASA Branch Key"
      },
      {
        "name": "f0fbd0c9-f443-4d74-8dd2-482304613632",
        "fromTable": "Benchmark",
        "fromColumn": "Teacher Key",
        "toTable": "Teacher",
        "toColumn": "Teacher Key"
      },
      {
        "name": "67f9641e-2aea-4eaa-b2e0-970a5ee55472",
        "fromTable": "Benchmark",
        "fromColumn": "Level Key",
        "toTable": "Course",
        "toColumn": "Level Key"
      },
      {
        "name": "b83dcb95-ccdc-4897-88a8-ce04b2752a31",
        "fromTable": "Teaching Cost Allowance",
        "fromColumn": "Date Key",
        "toTable": "Calendar",
        "toColumn": "Date Key"
      },
      {
        "name": "f3cb0bed-86b5-4108-9546-1b7f190bee82",
        "fromTable": "Teaching Cost Allowance",
        "fromColumn": "ASA Branch Key",
        "toTable": "Campus",
        "toColumn": "ASA Branch Key"
      },
      {
        "name": "95547494-7670-4f84-af21-c9914f7c8d56",
        "fromTable": "Teaching Cost Allowance",
        "fromColumn": "Teacher Key",
        "toTable": "Teacher",
        "toColumn": "Teacher Key"
      },
      {
        "name": "e184cf60-fe76-43df-a612-f1815517dd48",
        "fromTable": "Teaching Hour Extra",
        "fromColumn": "Date Key",
        "toTable": "Calendar",
        "toColumn": "Date Key"
      },
      {
        "name": "988635a6-aee1-430d-a55f-9a07cc1dae42",
        "fromTable": "Teaching Hour Extra",
        "fromColumn": "ASA Branch Key",
        "toTable": "Campus",
        "toColumn": "ASA Branch Key"
      },
      {
        "name": "e77830b1-8f3d-4e53-befc-9a44dcc957dc",
        "fromTable": "Teaching Cost Hour Detail",
        "fromColumn": "Date Key",
        "toTable": "Calendar",
        "toColumn": "Date Key"
      },
      {
        "name": "6670579a-94cf-4ef2-b387-76fb3d6ec8ea",
        "fromTable": "Teaching Cost Hour Detail",
        "fromColumn": "ASA Branch Key",
        "toTable": "Campus",
        "toColumn": "ASA Branch Key"
      },
      {
        "name": "1e95a303-b589-45f9-9d68-13164550fb05",
        "fromTable": "Teaching Cost Hour Detail",
        "fromColumn": "Teacher Key",
        "toTable": "Teacher",
        "toColumn": "Teacher Key"
      },
      {
        "name": "b6f5f519-d971-42a1-9f0b-abe2e8246aab",
        "fromTable": "Teaching Cost Hour Detail",
        "fromColumn": "Level Key",
        "toTable": "Course",
        "toColumn": "Level Key"
      },
      {
        "name": "02a53a20-963b-4b0f-941e-85aae5971650",
        "fromTable": "Teaching Hour Extra",
        "fromColumn": "Teacher Key",
        "toTable": "Teacher",
        "toColumn": "Teacher Key"
      },
      {
        "name": "471d3796-8f1f-4a69-a77f-ed7001f5a6b8",
        "fromTable": "Teacher Feedback",
        "fromColumn": "Date Key",
        "toTable": "Calendar",
        "toColumn": "Date Key"
      },
      {
        "name": "2d8097b8-aeb0-426b-88e2-c13ef74a530e",
        "fromTable": "Teacher Feedback",
        "fromColumn": "Class Key",
        "toTable": "List Class",
        "toColumn": "List Class Key"
      },
      {
        "name": "9ef17f4c-91b8-46f7-84c7-4e1e2cb5511d",
        "fromTable": "Teacher Feedback",
        "fromColumn": "Teacher Key",
        "toTable": "Teacher",
        "toColumn": "Teacher Key"
      },
      {
        "name": "df061ce1-78d1-4df1-a709-765f9608b2a7",
        "fromTable": "Teacher Feedback",
        "fromColumn": "Campus Key",
        "toTable": "Campus",
        "toColumn": "ASA Branch Key"
      },
      {
        "name": "72b3f2ba-92a3-4d48-9877-782c08b40b6b",
        "fromTable": "Teacher Ranking",
        "fromColumn": "Date Key",
        "toTable": "Calendar",
        "toColumn": "Date Key"
      },
      {
        "name": "08dedb90-1c46-414b-879e-6757fc1772df",
        "fromTable": "Teacher Ranking",
        "fromColumn": "Campus Key",
        "toTable": "Campus",
        "toColumn": "ASA Branch Key"
      },
      {
        "name": "f2bfe0a6-a144-4c30-a608-14b4084a6610",
        "fromTable": "Teacher Ranking",
        "fromColumn": "Teacher Key",
        "toTable": "Teacher",
        "toColumn": "Teacher Key"
      },
      {
        "name": "f3a53171-0365-4a6d-8589-91d46880e597",
        "fromTable": "Teacher Survey",
        "fromColumn": "Date Key",
        "toTable": "Calendar",
        "toColumn": "Date Key"
      },
      {
        "name": "f948f2a6-a0a8-4832-9601-6419ad2076c4",
        "fromTable": "Teacher Survey",
        "fromColumn": "Campus Key",
        "toTable": "Campus",
        "toColumn": "ASA Branch Key"
      },
      {
        "name": "17b56e1c-eb8b-46f3-88ec-bc20a703904c",
        "fromTable": "Teacher Survey",
        "fromColumn": "Class Key",
        "toTable": "List Class",
        "toColumn": "List Class Key"
      },
      {
        "name": "85198f0f-0b64-495a-b71b-d9728983d516",
        "fromTable": "Teacher Survey",
        "fromColumn": "Teacher Key",
        "toTable": "Teacher",
        "toColumn": "Teacher Key"
      },
      {
        "name": "4b3de017-0bf4-4eef-8ece-a6d97c360cab",
        "fromTable": "Teacher Feedback",
        "fromColumn": "Feedback Key",
        "toTable": "Feedback",
        "toColumn": "Feedback Key"
      },
      {
        "name": "455ed120-78a1-420f-87dc-363f543db023",
        "fromTable": "Teacher Survey",
        "fromColumn": "Total",
        "toTable": "Survey",
        "toColumn": "Survey Key"
      },
      {
        "name": "9b3fd72b-bb02-449b-9196-bc3010290ac8",
        "fromTable": "Teacher Ranking",
        "fromColumn": "Ranking Key",
        "toTable": "Ranking",
        "toColumn": "Ranking Key"
      },
      {
        "name": "9aad1ece-1820-4811-9211-1891bfe287e9",
        "fromTable": "Teacher Feedback VUS",
        "fromColumn": "Date Key",
        "toTable": "Calendar",
        "toColumn": "Date Key"
      },
      {
        "name": "de3c2320-104f-4d8c-b126-ebf607aef8e6",
        "fromTable": "Teacher Feedback VUS",
        "fromColumn": "Class Key",
        "toTable": "List Class",
        "toColumn": "List Class Key"
      },
      {
        "name": "e78e7dab-ea62-4dbc-99fd-57dec3f8eeda",
        "fromTable": "Teacher Feedback VUS",
        "fromColumn": "Teacher Key",
        "toTable": "Teacher",
        "toColumn": "Teacher Key"
      },
      {
        "name": "f8fc6bcc-f56c-4a56-b2ce-a0b6c935c460",
        "fromTable": "Teacher Feedback VUS",
        "fromColumn": "Feedback Key",
        "toTable": "Feedback",
        "toColumn": "Feedback Key"
      },
      {
        "name": "1f235451-1ee4-4119-ae9f-86153ac776b8",
        "fromTable": "Teacher Ranking VUS",
        "fromColumn": "Date Key",
        "toTable": "Calendar",
        "toColumn": "Date Key"
      },
      {
        "name": "5072071b-3422-418d-a7d7-a1aaa2b83bb8",
        "fromTable": "Teacher Ranking VUS",
        "fromColumn": "Teacher Key",
        "toTable": "Teacher",
        "toColumn": "Teacher Key"
      },
      {
        "name": "753d5373-1e2c-430c-b458-ac2ac89d5b88",
        "fromTable": "Teacher Ranking VUS",
        "fromColumn": "Ranking Key",
        "toTable": "Ranking",
        "toColumn": "Ranking Key"
      },
      {
        "name": "5f0513e1-22ad-4270-8626-fa8cf3b590f0",
        "fromTable": "Teacher Feedback",
        "fromColumn": "Level Key",
        "toTable": "Course",
        "toColumn": "Level Key"
      },
      {
        "name": "587f64cd-c3c6-4411-8790-712c82d42e97",
        "fromTable": "Teacher Feedback VUS",
        "fromColumn": "Level Key",
        "toTable": "Course",
        "toColumn": "Level Key"
      },
      {
        "name": "3b915a8a-583d-4d08-9e6a-82659b84ef18",
        "fromTable": "Teacher Survey",
        "fromColumn": "Level Key",
        "toTable": "Course",
        "toColumn": "Level Key"
      },
      {
        "name": "6b2cd053-c843-4346-a61a-234ec8e35509",
        "fromTable": "Observation",
        "fromColumn": "Date Key",
        "toTable": "Calendar",
        "toColumn": "Date Key"
      },
      {
        "name": "00370c9f-fb4b-4d05-9d02-6e7211ee0b36",
        "fromTable": "Observation",
        "fromColumn": "Teacher Key",
        "toTable": "Teacher",
        "toColumn": "Teacher Key"
      },
      {
        "name": "efc0e737-2d8c-4b4f-80c0-fcfa7f5e706c",
        "fromTable": "Observation",
        "fromColumn": "Campus Key",
        "toTable": "Campus",
        "toColumn": "ASA Branch Key"
      },
      {
        "name": "efa96f0e-818d-4c0a-8970-cb723b83efc4",
        "fromTable": "Observation",
        "fromColumn": "Class Key",
        "toTable": "List Class",
        "toColumn": "List Class Key"
      },
      {
        "name": "38d8abdf-646a-498a-948b-d2289ca28ae2",
        "fromTable": "Observation",
        "fromColumn": "Level Key",
        "toTable": "Course",
        "toColumn": "Level Key"
      },
      {
        "name": "19060248-52f5-4a10-be40-541fdefc324b",
        "fromTable": "Observation",
        "fromColumn": "Observation Type Key",
        "toTable": "Observation Type",
        "toColumn": "Observation Type Key"
      },
      {
        "name": "35244ae6-2ea7-4c54-a4d1-ab5444afdd4c",
        "fromTable": "Observation",
        "fromColumn": "Evaluation Type Key",
        "toTable": "Evaluation Type",
        "toColumn": "Evaluation Type Key"
      },
      {
        "name": "98fd2a0d-785e-4991-bb3f-de75ae4d6b60",
        "fromTable": "Teacher Discipline and Misconduct",
        "fromColumn": "Date Key",
        "toTable": "Calendar",
        "toColumn": "Date Key"
      },
      {
        "name": "6cb58d9d-1889-46d4-9989-b09843b33cb7",
        "fromTable": "Teacher Discipline and Misconduct",
        "fromColumn": "Teacher Key",
        "toTable": "Teacher",
        "toColumn": "Teacher Key"
      },
      {
        "name": "d5dc03de-3547-431d-8847-0f731a74a3bd",
        "fromTable": "Teacher Discipline and Misconduct",
        "fromColumn": "Campus Key",
        "toTable": "Campus",
        "toColumn": "ASA Branch Key"
      },
      {
        "name": "b9996810-7101-4aed-a609-4e5e85975557",
        "fromTable": "Teacher Discipline and Misconduct",
        "fromColumn": "Class Key",
        "toTable": "List Class",
        "toColumn": "List Class Key"
      },
      {
        "name": "1f518758-982e-4e54-918e-20c54682c8ee",
        "fromTable": "Teacher Discipline and Misconduct",
        "fromColumn": "Level Key",
        "toTable": "Course",
        "toColumn": "Level Key"
      },
      {
        "name": "89051f1d-80d8-4910-b215-8a597649c3aa",
        "fromTable": "Teacher Discipline and Misconduct",
        "fromColumn": "Misconduct Type Key",
        "toTable": "Misconduct Type",
        "toColumn": "Misconduct Type Key"
      },
      {
        "name": "24a5defe-8f5f-4251-865d-221963befe93",
        "fromTable": "Teacher Discipline and Misconduct",
        "fromColumn": "Discipline Key",
        "toTable": "Discipline",
        "toColumn": "Discipline Key"
      },
      {
        "name": "f40cfd45-5b03-463f-8292-77f87cdef991",
        "fromTable": "Teacher Discipline and Misconduct VUS",
        "fromColumn": "Date Key",
        "toTable": "Calendar",
        "toColumn": "Date Key"
      },
      {
        "name": "c72dbedc-7a5e-433b-b4b8-9142e3e9025d",
        "fromTable": "Teacher Discipline and Misconduct VUS",
        "fromColumn": "Teacher Key",
        "toTable": "Teacher",
        "toColumn": "Teacher Key"
      },
      {
        "name": "e3b39044-c11d-463d-a796-c14f3690ff01",
        "fromTable": "Teacher Discipline and Misconduct VUS",
        "fromColumn": "Level Key",
        "toTable": "Course",
        "toColumn": "Level Key"
      },
      {
        "name": "9690eac9-c2ec-44dd-bcdf-c0b004c9bfe6",
        "fromTable": "Teacher Discipline and Misconduct VUS",
        "fromColumn": "Class Key",
        "toTable": "List Class",
        "toColumn": "List Class Key"
      },
      {
        "name": "aa3fedf3-7dbb-4ebd-a91e-26fcba321272",
        "fromTable": "Teacher Discipline and Misconduct VUS",
        "fromColumn": "Misconduct Type Key",
        "toTable": "Misconduct Type",
        "toColumn": "Misconduct Type Key"
      },
      {
        "name": "029373e8-3cab-47c4-86a7-7fcdcae99bfd",
        "fromTable": "Teacher Discipline and Misconduct VUS",
        "fromColumn": "Discipline Key",
        "toTable": "Discipline",
        "toColumn": "Discipline Key"
      },
      {
        "name": "a1456a1b-2b81-4c38-b0de-bec9be79ea59",
        "fromTable": "Observation VUS",
        "fromColumn": "Date Key",
        "toTable": "Calendar",
        "toColumn": "Date Key"
      },
      {
        "name": "e9d7cd52-c368-4fe2-b1a3-96eef084266b",
        "fromTable": "Observation VUS",
        "fromColumn": "Level Key",
        "toTable": "Course",
        "toColumn": "Level Key"
      },
      {
        "name": "74d283f2-c2d8-4736-bb85-6f490a3618d5",
        "fromTable": "Observation VUS",
        "fromColumn": "Class Key",
        "toTable": "List Class",
        "toColumn": "List Class Key"
      },
      {
        "name": "2b8106c4-c901-4ffc-aef6-bea373cfac3a",
        "fromTable": "Observation VUS",
        "fromColumn": "Teacher Key",
        "toTable": "Teacher",
        "toColumn": "Teacher Key"
      },
      {
        "name": "99dfc9a8-d34b-423b-ae08-544ba6190025",
        "fromTable": "Observation VUS",
        "fromColumn": "Observation Type Key",
        "toTable": "Observation Type",
        "toColumn": "Observation Type Key"
      },
      {
        "name": "ec65c7ff-a64b-423f-be41-1a7307caade8",
        "fromTable": "Observation VUS",
        "fromColumn": "Evaluation Type Key",
        "toTable": "Evaluation Type",
        "toColumn": "Evaluation Type Key"
      },
      {
        "name": "6e11a7c6-c02a-4cc4-b1b1-299148fc90e7",
        "fromTable": "Teacher In Out",
        "fromColumn": "Date Key",
        "toTable": "Calendar",
        "toColumn": "Date Key"
      },
      {
        "name": "49f6a611-ec40-47ae-a552-71ce03bee934",
        "fromTable": "Teacher In Out",
        "fromColumn": "Branch Key",
        "toTable": "Campus",
        "toColumn": "ASA Branch Key"
      },
      {
        "name": "aeb7451c-dd22-443f-aebe-8a5507ec41bc",
        "fromTable": "Teacher Assignment",
        "fromColumn": "Date Key",
        "toTable": "Calendar",
        "toColumn": "Date Key"
      },
      {
        "name": "9d7d41e1-4529-4427-b61a-6a402e840fcd",
        "fromTable": "Teacher Assignment",
        "fromColumn": "Branch Key",
        "toTable": "Campus",
        "toColumn": "ASA Branch Key"
      },
      {
        "name": "1b8438de-002a-42f8-9c30-f0acce515e8b",
        "fromTable": "Teacher Assignment VUS",
        "fromColumn": "Date Key",
        "toTable": "Calendar",
        "toColumn": "Date Key"
      },
      {
        "name": "88b0e10f-9517-4785-a8b4-559df968d490",
        "fromTable": "Teacher In Out",
        "fromColumn": "Teacher Key",
        "toTable": "Teacher",
        "toColumn": "Teacher HRT Key"
      },
      {
        "name": "40f8fe45-29a2-4ddb-a63b-c175b92889ea",
        "fromTable": "Teacher Assignment",
        "fromColumn": "Teacher Key",
        "toTable": "Teacher",
        "toColumn": "Teacher HRT Key"
      },
      {
        "name": "0c5a3823-d2ac-4eb7-92f7-f53a636a320d",
        "fromTable": "Teacher Assignment VUS",
        "fromColumn": "Teacher Key",
        "toTable": "Teacher",
        "toColumn": "Teacher HRT Key"
      },
      {
        "name": "711abce1-1279-42fd-a047-44d64560eef0",
        "fromTable": "Teaching Cost Gross",
        "fromColumn": "Branch Key",
        "toTable": "Campus",
        "toColumn": "ASA Branch Key"
      },
      {
        "name": "0cf62c8c-3de6-4f0f-aa06-52f0db04dfc9",
        "fromTable": "Class Close",
        "fromColumn": "Branch Key",
        "toTable": "Campus",
        "toColumn": "ASA Branch Key"
      },
      {
        "name": "058ed8a9-e60e-4998-9bc2-fe43930e11ab",
        "fromTable": "Class Close",
        "fromColumn": "Date Key",
        "toTable": "Calendar",
        "toColumn": "Date Key"
      },
      {
        "name": "22076f4d-0237-46bc-9355-70c0a8b372d2",
        "fromTable": "Class Close",
        "fromColumn": "Level Key",
        "toTable": "Course",
        "toColumn": "Level Key"
      },
      {
        "name": "2cd06820-256c-4f2d-b831-34ed4e26b113",
        "fromTable": "Class Close",
        "fromColumn": "List Class Key",
        "toTable": "List Class",
        "toColumn": "List Class Key"
      },
      {
        "name": "5898382e-62e6-4cfd-a4b5-0cdb9dabc1d7",
        "fromTable": "Academy Exam",
        "fromColumn": "Branch Key",
        "toTable": "Campus",
        "toColumn": "ASA Branch Key"
      },
      {
        "name": "b0c03b25-2c27-4512-a2ef-e471dd5c4bb8",
        "fromTable": "Observation",
        "fromColumn": "User Key",
        "toTable": "Users",
        "toColumn": "User Key"
      },
      {
        "name": "249c0787-f47c-45d1-bf00-44e40dd6b419",
        "fromTable": "Observation VUS",
        "fromColumn": "User Key",
        "toTable": "Users",
        "toColumn": "User Key"
      },
      {
        "name": "124c436b-a03c-48eb-ba1b-e9579d0598ac",
        "fromTable": "Sharing Session",
        "fromColumn": "Campus Key",
        "toTable": "Campus",
        "toColumn": "ASA Branch Key"
      },
      {
        "name": "fdcd9b84-c713-4ad3-aecc-bb242dae8842",
        "fromTable": "Sharing Session",
        "fromColumn": "Date Key",
        "toTable": "Calendar",
        "toColumn": "Date Key"
      },
      {
        "name": "b6e263fd-7d97-41e1-9af5-37830b63f9f9",
        "fromTable": "Retention Rate",
        "fromColumn": "Campus Key",
        "toTable": "Campus",
        "toColumn": "ASA Branch Key"
      },
      {
        "name": "a408188a-aa1a-4a41-a9d4-f705756f84e7",
        "fromTable": "Retention Rate",
        "fromColumn": "Class Key",
        "toTable": "List Class",
        "toColumn": "List Class Key"
      },
      {
        "name": "cfac48c5-608c-4562-930a-290467659514",
        "fromTable": "Retention Rate",
        "fromColumn": "Date Key",
        "toTable": "Calendar",
        "toColumn": "Date Key"
      },
      {
        "name": "0f0668b7-1748-43aa-afed-a8f02b9b4109",
        "fromTable": "Retention Rate",
        "fromColumn": "Level Key",
        "toTable": "Course",
        "toColumn": "Level Key"
      },
      {
        "name": "17fc2c44-bae1-466b-a863-cc8be4477b7f",
        "fromTable": "Sharing Session VUS",
        "fromColumn": "Date Key",
        "toTable": "Calendar",
        "toColumn": "Date Key"
      },
      {
        "name": "f4572fd4-8a4d-454e-a288-f65ae856de28",
        "fromTable": "Retention Rate VUS",
        "fromColumn": "Date Key",
        "toTable": "Calendar",
        "toColumn": "Date Key"
      },
      {
        "name": "0b994f1c-ed62-4c56-b31d-956a8a7e3dcb",
        "fromTable": "Retention Rate VUS",
        "fromColumn": "Class Key",
        "toTable": "List Class",
        "toColumn": "List Class Key"
      },
      {
        "name": "177d466b-41d9-4a33-850f-466e80d57de1",
        "fromTable": "ObservationQaQcNew",
        "fromColumn": "AssessmentDateKey",
        "toTable": "Calendar",
        "toColumn": "Date Key"
      },
      {
        "name": "d7cfb3cb-9563-42c8-9831-efded8ad543c",
        "fromTable": "ObservationQaQcNew",
        "fromColumn": "ClassKey",
        "toTable": "List Class",
        "toColumn": "List Class Key"
      },
      {
        "name": "7beea083-f484-40c0-97d7-e7fa5eafc636",
        "fromTable": "ObservationQaQcNew",
        "fromColumn": "GroupKey",
        "toTable": "Group",
        "toColumn": "GroupKey"
      },
      {
        "name": "631ff870-275f-4d3c-91d2-65f2ca4c8ce3",
        "fromTable": "ObservationQaQcNew",
        "fromColumn": "LevelProgramKey",
        "toTable": "Course",
        "toColumn": "Level Key"
      },
      {
        "name": "b32b9841-8d2d-4365-ace6-9a7d802583d5",
        "fromTable": "ObservationQaQcNew",
        "fromColumn": "ObserverKey",
        "toTable": "Users",
        "toColumn": "User Key"
      },
      {
        "name": "cdfeabc4-b5df-4511-bc4e-c0226eda7429",
        "fromTable": "ObservationQaQcNew",
        "fromColumn": "TeacherProfileKey",
        "toTable": "Teacher",
        "toColumn": "Teacher Key"
      },
      {
        "name": "3e840e3a-0ea5-426b-a1cc-7d1aa0894e7a",
        "fromTable": "Teaching Hours Detail",
        "fromColumn": "CampusKey",
        "toTable": "Campus",
        "toColumn": "ASA Branch Key"
      },
      {
        "name": "20daa849-83aa-49c2-8535-aba8325d487c",
        "fromTable": "Teaching Hours Detail",
        "fromColumn": "ClassKey",
        "toTable": "List Class",
        "toColumn": "List Class Key"
      },
      {
        "name": "bb32a4a5-923c-43ca-b012-9fea4c5c2d8b",
        "fromTable": "Teaching Hours Detail",
        "fromColumn": "LevelProgramKey",
        "toTable": "Course",
        "toColumn": "Level Key"
      },
      {
        "name": "0f06d62c-4e58-4917-a998-df259dffd12e",
        "fromTable": "Teaching Hours Detail",
        "fromColumn": "ScheduleDateKey",
        "toTable": "Calendar",
        "toColumn": "Date Key"
      },
      {
        "name": "75dd1f0c-4c4f-4b9f-8733-ff7f16cda6f6",
        "fromTable": "Teaching Hours Detail",
        "fromColumn": "TeacherProfileKey",
        "toTable": "Teacher",
        "toColumn": "Teacher Key"
      },
      {
        "name": "d2d01f06-264e-4ce2-af22-314144fbd351",
        "fromTable": "Teaching Cost",
        "fromColumn": "Branch Key",
        "toTable": "Campus",
        "toColumn": "ASA Branch Key"
      },
      {
        "name": "463e9583-6288-4ef7-8901-e084970fec3c",
        "fromTable": "Teaching Cost",
        "fromColumn": "Date Key",
        "toTable": "Calendar",
        "toColumn": "Date Key"
      },
      {
        "name": "3cfb38a4-8367-40d9-a1ba-a23014f49c10",
        "fromTable": "Teaching Cost",
        "fromColumn": "Teacher Key",
        "toTable": "Teacher",
        "toColumn": "Teacher Key"
      },
      {
        "name": "931c173b-575f-49c2-99ce-cec4bf00d5a0",
        "fromTable": "TeachingHoursDetailByMonth",
        "fromColumn": "SalaryMonthTeacherID",
        "toTable": "Teaching Cost 2",
        "toColumn": "Salary Month Teacher ID"
      },
      {
        "name": "b082240a-fba2-4804-99b2-80bb5380295d",
        "fromTable": "Teaching Cost 2",
        "fromColumn": "Branch Key",
        "toTable": "Campus",
        "toColumn": "ASA Branch Key"
      },
      {
        "name": "36b56881-9fa8-4f24-81c8-e4c763113fe0",
        "fromTable": "Teaching Cost 2",
        "fromColumn": "Date Key",
        "toTable": "Calendar",
        "toColumn": "Date Key"
      },
      {
        "name": "b4d51f8c-789c-416a-9c42-83298191fca2",
        "fromTable": "Teaching Cost 2",
        "fromColumn": "Teacher Key",
        "toTable": "Teacher",
        "toColumn": "Teacher Key"
      },
      {
        "name": "29a9c93c-0fd9-4c4b-8aa2-321278a08010",
        "fromTable": "ObservationQaQcNew",
        "fromColumn": "CampusKey",
        "toTable": "Campus",
        "toColumn": "ASA Branch Key"
      },
      {
        "name": "cf340da4-8ebb-4c11-a5b2-8054009b9083",
        "fromTable": "ObservationQaQcNew",
        "fromColumn": "CompetencyGroupKey",
        "toTable": "CompetencyGroup",
        "toColumn": "OECompetencyGroupKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "353ff720-b0b0-4681-9122-3a5ba794be8b",
        "fromTable": "ObservationQaQcNew",
        "fromColumn": "CompetencyItemKey",
        "toTable": "CompetencyItems",
        "toColumn": "KeyCompetencyItemID",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "4382f141-d22b-4f7c-a8ea-152c9c7a06f9",
        "fromTable": "ObservationQaQcNew",
        "fromColumn": "MilestonesCompetencyKey",
        "toTable": "MilestonesCompetency",
        "toColumn": "MilestonesDetailKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "c6b152b3-7b36-4e53-a42b-e5e9f1f1215f",
        "fromTable": "ObservationQaQcNew",
        "fromColumn": "CompetencyKey",
        "toTable": "Competency",
        "toColumn": "CompetencyKey",
        "crossFilteringBehavior": "bothDirections"
      }
    ],
    "roles": [
      {
        "name": "VUS",
        "modelPermission": "read",
        "members": [
          {
            "memberName": "nhely@vus-etsc.edu.vn",
            "memberId": "nhely@vus-etsc.edu.vn#AzureAD",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "locpham@vus-etsc.edu.vn",
            "memberId": "locpham@vus-etsc.edu.vn#AzureAD",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "tungnlx@vus-etsc.edu.vn",
            "memberId": "tungnlx@vus-etsc.edu.vn#AzureAD",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "quocle@vus-etsc.edu.vn",
            "memberId": "quocle@vus-etsc.edu.vn#AzureAD",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "hien.ltv@vus-etsc.edu.vn",
            "memberId": "hien.ltv@vus-etsc.edu.vn#AzureAD",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "trantranqui@vus-etsc.edu.vn",
            "memberId": "trantranqui@vus-etsc.edu.vn#AzureAD",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "nhatle@vus-etsc.edu.vn",
            "memberId": "nhatle@vus-etsc.edu.vn#AzureAD",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "trinhpham@vus-etsc.edu.vn",
            "memberId": "trinhpham@vus-etsc.edu.vn#AzureAD",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "ict24h@vus-etsc.edu.vn",
            "memberId": "ict24h@vus-etsc.edu.vn#AzureAD",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "baocao@vus-etsc.edu.vn",
            "memberId": "baocao@vus-etsc.edu.vn#AzureAD",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "tannguyen@vus-etsc.edu.vn",
            "memberId": "tannguyen@vus-etsc.edu.vn#AzureAD",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "tungvo@vus-etsc.edu.vn",
            "memberId": "tungvo@vus-etsc.edu.vn#AzureAD",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "tutrant@vus-etsc.edu.vn",
            "memberId": "tutrant@vus-etsc.edu.vn#AzureAD",
            "identityProvider": "AzureAD"
          }
        ],
        "tablePermissions": [
          {
            "name": "Campus",
            "filterExpression": [
              "OR('Campus'[QLGV Branch Key] IN(",
              "CALCULATETABLE (",
              "VALUES ( 'RLS Campus'[QLGV Branch Key] ),",
              "FILTER ( 'RLS Campus','RLS Campus'[User ID] = USERNAME () )",
              "))",
              ",'Campus'[ASA Branch Key] IN(",
              "CALCULATETABLE (",
              "VALUES ( 'RLS Campus'[ASA Branch Key] ),",
              "FILTER ( 'RLS Campus','RLS Campus'[User ID] = USERNAME () )",
              "))",
              ")"
            ]
          }
        ]
      }
    ],
    "annotations": [
      {
        "name": "ClientCompatibilityLevel",
        "value": "500"
      }
    ]
  }
}