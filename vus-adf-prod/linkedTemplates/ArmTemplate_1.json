{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "vus-adf-prod"
		},
		"TQMCONNECTION_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'TQMCONNECTION'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_36i')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_STORAGE_ACCOUNT_DEV",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet2",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ETL_JOB_with NOLOCK.xlsx",
						"container": "manual"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "JOB_ID",
						"type": "String"
					},
					{
						"name": "JOB_NAME",
						"type": "String"
					},
					{
						"name": "JOB_DESC",
						"type": "String"
					},
					{
						"name": "JOB_GROUP",
						"type": "String"
					},
					{
						"name": "JOB_SUB_GROUP",
						"type": "String"
					},
					{
						"name": "JOB_TYPE",
						"type": "String"
					},
					{
						"name": "SOURCE_SCHEMA",
						"type": "String"
					},
					{
						"name": "SOURCE_TABLE",
						"type": "String"
					},
					{
						"name": "TARGET_SCHEMA",
						"type": "String"
					},
					{
						"name": "TARGET_TABLE",
						"type": "String"
					},
					{
						"name": "JOB_SCRIPT",
						"type": "String"
					},
					{
						"name": "PRUNE_DAYS",
						"type": "String"
					},
					{
						"name": "FULL_LOAD_FLG",
						"type": "String"
					},
					{
						"name": "DATASOURCE_NUM_ID",
						"type": "String"
					},
					{
						"name": "ACTIVE_FLG",
						"type": "String"
					},
					{
						"name": "CREATED_TS",
						"type": "String"
					},
					{
						"name": "LAST_UPDATED_TS",
						"type": "String"
					},
					{
						"name": "JOB_ORDER",
						"type": "String"
					},
					{
						"name": "INTEGRATION_ID",
						"type": "String"
					},
					{
						"name": "INTEGRATION_COL",
						"type": "String"
					},
					{
						"name": "INTEGRATION_ORDER_COL",
						"type": "String"
					},
					{
						"name": "INCREMENTAL_COL",
						"type": "String"
					},
					{
						"name": "truncate_flag",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_xdx')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_STORAGE_ACCOUNT_DEV",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SRC_EXCEL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "calendar.csv",
						"container": "manual"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DATE_KEY",
						"type": "String"
					},
					{
						"name": "MONTH_KEY",
						"type": "String"
					},
					{
						"name": "DATE_NAME",
						"type": "String"
					},
					{
						"name": "FULL_DATE_VN",
						"type": "String"
					},
					{
						"name": "DAY_OF_MONTH",
						"type": "String"
					},
					{
						"name": "DAY_SUFFIX",
						"type": "String"
					},
					{
						"name": "DAY_NAME",
						"type": "String"
					},
					{
						"name": "DAY_OF_WEEK_VN",
						"type": "String"
					},
					{
						"name": "DAY_OF_WEEK_IN_MONTH",
						"type": "String"
					},
					{
						"name": "DAY_OF_WEEK_IN_YEAR",
						"type": "String"
					},
					{
						"name": "DAY_OF_QUARTER",
						"type": "String"
					},
					{
						"name": "DAY_OF_YEAR",
						"type": "String"
					},
					{
						"name": "WEEK_OF_MONTH",
						"type": "String"
					},
					{
						"name": "WEEK_OF_QUARTER",
						"type": "String"
					},
					{
						"name": "WEEK_OF_YEAR",
						"type": "String"
					},
					{
						"name": "MONTH",
						"type": "String"
					},
					{
						"name": "MONTH_NAME",
						"type": "String"
					},
					{
						"name": "MONTH_OF_QUARTER",
						"type": "String"
					},
					{
						"name": "QUARTER",
						"type": "String"
					},
					{
						"name": "QUARTER_NAME",
						"type": "String"
					},
					{
						"name": "YEAR",
						"type": "String"
					},
					{
						"name": "YEAR_NAME",
						"type": "String"
					},
					{
						"name": "MONTH_YEAR",
						"type": "String"
					},
					{
						"name": "MMYYYY",
						"type": "String"
					},
					{
						"name": "FIRST_DAY_OF_MONTH",
						"type": "String"
					},
					{
						"name": "LAST_DAY_OF_MONTH",
						"type": "String"
					},
					{
						"name": "FIRST_DAY_OF_QUARTER",
						"type": "String"
					},
					{
						"name": "LAST_DAY_OF_QUARTER",
						"type": "String"
					},
					{
						"name": "FIRST_DAY_OF_YEAR",
						"type": "String"
					},
					{
						"name": "LAST_DAY_OF_YEAR",
						"type": "String"
					},
					{
						"name": "IS_WEEKDAY",
						"type": "String"
					},
					{
						"name": "IS_HOLIDAY_VN",
						"type": "String"
					},
					{
						"name": "HOLIDAY_VN",
						"type": "String"
					},
					{
						"name": "DAY_TYPE",
						"type": "String"
					},
					{
						"name": "W_INTEGRATION_ID",
						"type": "String"
					},
					{
						"name": "W_DELETE_FLG",
						"type": "String"
					},
					{
						"name": "W_INSERT_DT",
						"type": "String"
					},
					{
						"name": "W_UPDATE_DT",
						"type": "String"
					},
					{
						"name": "W_DATASOURCE_NUM_ID",
						"type": "String"
					},
					{
						"name": "W_BATCH_ID",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Target')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_STORAGE_ACCOUNT_DEV",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FILE_NAME": {
						"type": "string"
					},
					"SHEET_NAME": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SRC_EXCEL"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Data",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TargetASA-historical.xlsx",
						"container": "manual"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TQMCONNECTION')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('TQMCONNECTION_connectionString')]"
				},
				"connectVia": {
					"referenceName": "IR-PROD",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Calendar')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_xdx",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "manual//calendar.csv"
							},
							{
								"name": "Destination",
								"value": ".Azure Blob Storage file"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"tableOption": "autoCreate"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "LS_STORAGE_ACCOUNT_DEV",
									"type": "LinkedServiceReference"
								}
							},
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "LS_STORAGE_ACCOUNT_DEV",
										"type": "LinkedServiceReference"
									}
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DATE_KEY",
											"type": "String"
										},
										"sink": {
											"name": "DATE_KEY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MONTH_KEY",
											"type": "String"
										},
										"sink": {
											"name": "MONTH_KEY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DATE_NAME",
											"type": "String"
										},
										"sink": {
											"name": "DATE_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FULL_DATE_VN",
											"type": "String"
										},
										"sink": {
											"name": "FULL_DATE_VN",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DAY_OF_MONTH",
											"type": "String"
										},
										"sink": {
											"name": "DAY_OF_MONTH",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DAY_SUFFIX",
											"type": "String"
										},
										"sink": {
											"name": "DAY_SUFFIX",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DAY_NAME",
											"type": "String"
										},
										"sink": {
											"name": "DAY_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DAY_OF_WEEK_VN",
											"type": "String"
										},
										"sink": {
											"name": "DAY_OF_WEEK_VN",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DAY_OF_WEEK_IN_MONTH",
											"type": "String"
										},
										"sink": {
											"name": "DAY_OF_WEEK_IN_MONTH",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DAY_OF_WEEK_IN_YEAR",
											"type": "String"
										},
										"sink": {
											"name": "DAY_OF_WEEK_IN_YEAR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DAY_OF_QUARTER",
											"type": "String"
										},
										"sink": {
											"name": "DAY_OF_QUARTER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DAY_OF_YEAR",
											"type": "String"
										},
										"sink": {
											"name": "DAY_OF_YEAR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WEEK_OF_MONTH",
											"type": "String"
										},
										"sink": {
											"name": "WEEK_OF_MONTH",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WEEK_OF_QUARTER",
											"type": "String"
										},
										"sink": {
											"name": "WEEK_OF_QUARTER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WEEK_OF_YEAR",
											"type": "String"
										},
										"sink": {
											"name": "WEEK_OF_YEAR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MONTH",
											"type": "String"
										},
										"sink": {
											"name": "MONTH",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MONTH_NAME",
											"type": "String"
										},
										"sink": {
											"name": "MONTH_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MONTH_OF_QUARTER",
											"type": "String"
										},
										"sink": {
											"name": "MONTH_OF_QUARTER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "QUARTER",
											"type": "String"
										},
										"sink": {
											"name": "QUARTER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "QUARTER_NAME",
											"type": "String"
										},
										"sink": {
											"name": "QUARTER_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "YEAR",
											"type": "String"
										},
										"sink": {
											"name": "YEAR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "YEAR_NAME",
											"type": "String"
										},
										"sink": {
											"name": "YEAR_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MONTH_YEAR",
											"type": "String"
										},
										"sink": {
											"name": "MONTH_YEAR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MMYYYY",
											"type": "String"
										},
										"sink": {
											"name": "MMYYYY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FIRST_DAY_OF_MONTH",
											"type": "String"
										},
										"sink": {
											"name": "FIRST_DAY_OF_MONTH",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LAST_DAY_OF_MONTH",
											"type": "String"
										},
										"sink": {
											"name": "LAST_DAY_OF_MONTH",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FIRST_DAY_OF_QUARTER",
											"type": "String"
										},
										"sink": {
											"name": "FIRST_DAY_OF_QUARTER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LAST_DAY_OF_QUARTER",
											"type": "String"
										},
										"sink": {
											"name": "LAST_DAY_OF_QUARTER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FIRST_DAY_OF_YEAR",
											"type": "String"
										},
										"sink": {
											"name": "FIRST_DAY_OF_YEAR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LAST_DAY_OF_YEAR",
											"type": "String"
										},
										"sink": {
											"name": "LAST_DAY_OF_YEAR",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IS_WEEKDAY",
											"type": "String"
										},
										"sink": {
											"name": "IS_WEEKDAY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IS_HOLIDAY_VN",
											"type": "String"
										},
										"sink": {
											"name": "IS_HOLIDAY_VN",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "HOLIDAY_VN",
											"type": "String"
										},
										"sink": {
											"name": "HOLIDAY_VN",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DAY_TYPE",
											"type": "String"
										},
										"sink": {
											"name": "DAY_TYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "W_INTEGRATION_ID",
											"type": "String"
										},
										"sink": {
											"name": "W_INTEGRATION_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "W_DELETE_FLG",
											"type": "String"
										},
										"sink": {
											"name": "W_DELETE_FLG",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "W_INSERT_DT",
											"type": "String"
										},
										"sink": {
											"name": "W_INSERT_DT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "W_UPDATE_DT",
											"type": "String"
										},
										"sink": {
											"name": "W_UPDATE_DT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "W_DATASOURCE_NUM_ID",
											"type": "String"
										},
										"sink": {
											"name": "W_DATASOURCE_NUM_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "W_BATCH_ID",
											"type": "String"
										},
										"sink": {
											"name": "W_BATCH_ID",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_xdx",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_xdx",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-11-29T16:00:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_xdx')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LOAD RLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load RLS Config",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table STG.W_RLS_CONF",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "EXCEL",
								"type": "DatasetReference",
								"parameters": {
									"FILE_NAME": "competitor_by_region.xlsx",
									"SHEET_NAME": "Data"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_DWH_SYNAPSE_STAGING",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "W_RLS_CONF"
								}
							}
						]
					},
					{
						"name": "SEND ERROR MESSAGE RLS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load RLS Config",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SEND ERROR EMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ErrorMessage": {
									"value": "@activity('Load RLS Config').Error.message",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "VUS EXCEL"
				},
				"annotations": [],
				"lastPublishTime": "2021-11-29T16:00:52Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LOAD TARGET')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load Target",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table STG.W_ASA_TARGET_MANUAL",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "LS_STORAGE_ACCOUNT_DEV",
									"type": "LinkedServiceReference"
								},
								"path": "logadf"
							}
						},
						"inputs": [
							{
								"referenceName": "Target",
								"type": "DatasetReference",
								"parameters": {
									"FILE_NAME": "TargetASA-historical",
									"SHEET_NAME": "Data"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_DWH_SYNAPSE_STAGING",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "W_ASA_TARGET_MANUAL"
								}
							}
						]
					},
					{
						"name": "SEND ERROR MESSAGE LOAD TARGET",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Target",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SEND ERROR EMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ErrorMessage": {
									"value": "@activity('Load Target').Error.message",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "VUS EXCEL"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-20T14:41:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Target')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load ETL Job')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_36i",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "manual//ETL_JOB_with NOLOCK.xlsx"
							},
							{
								"name": "Destination",
								"value": "ADF.ETL_JOB_20220704"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowCopyCommand": true,
								"copyCommandSettings": {}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "LS_STORAGE_ACCOUNT_DEV",
									"type": "LinkedServiceReference"
								},
								"path": "0010c22f-978a-4bc9-9e99-be47f784bf72"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "JOB_ID",
											"type": "String"
										},
										"sink": {
											"name": "JOB_ID",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "JOB_NAME",
											"type": "String"
										},
										"sink": {
											"name": "JOB_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "JOB_DESC",
											"type": "String"
										},
										"sink": {
											"name": "JOB_DESC",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "JOB_GROUP",
											"type": "String"
										},
										"sink": {
											"name": "JOB_GROUP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "JOB_SUB_GROUP",
											"type": "String"
										},
										"sink": {
											"name": "JOB_SUB_GROUP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "JOB_TYPE",
											"type": "String"
										},
										"sink": {
											"name": "JOB_TYPE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SOURCE_SCHEMA",
											"type": "String"
										},
										"sink": {
											"name": "SOURCE_SCHEMA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SOURCE_TABLE",
											"type": "String"
										},
										"sink": {
											"name": "SOURCE_TABLE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TARGET_SCHEMA",
											"type": "String"
										},
										"sink": {
											"name": "TARGET_SCHEMA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TARGET_TABLE",
											"type": "String"
										},
										"sink": {
											"name": "TARGET_TABLE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "JOB_SCRIPT",
											"type": "String"
										},
										"sink": {
											"name": "JOB_SCRIPT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRUNE_DAYS",
											"type": "String"
										},
										"sink": {
											"name": "PRUNE_DAYS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "FULL_LOAD_FLG",
											"type": "String"
										},
										"sink": {
											"name": "FULL_LOAD_FLG",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DATASOURCE_NUM_ID",
											"type": "String"
										},
										"sink": {
											"name": "DATASOURCE_NUM_ID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ACTIVE_FLG",
											"type": "String"
										},
										"sink": {
											"name": "ACTIVE_FLG",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CREATED_TS",
											"type": "String"
										},
										"sink": {
											"name": "CREATED_TS",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "LAST_UPDATED_TS",
											"type": "String"
										},
										"sink": {
											"name": "LAST_UPDATED_TS",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "JOB_ORDER",
											"type": "String"
										},
										"sink": {
											"name": "JOB_ORDER",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "INTEGRATION_ID",
											"type": "String"
										},
										"sink": {
											"name": "INTEGRATION_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "INTEGRATION_COL",
											"type": "String"
										},
										"sink": {
											"name": "INTEGRATION_COL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "INTEGRATION_ORDER_COL",
											"type": "String"
										},
										"sink": {
											"name": "INTEGRATION_ORDER_COL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "INCREMENTAL_COL",
											"type": "String"
										},
										"sink": {
											"name": "INCREMENTAL_COL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "truncate_flag",
											"type": "String"
										},
										"sink": {
											"name": "truncate_flag",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_36i",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_36i",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-07-04T13:39:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_36i')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/REFRESH AS GENERAL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get List Refresh_G0",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Start AS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[ADF].[proc_ETL_REFRESH_SSAS]",
								"storedProcedureParameters": {
									"group_name": {
										"type": "String",
										"value": "G0"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_DWH_SYNAPSE_ADF",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "ETL_REFRESH_SSAS"
								}
							}
						}
					},
					{
						"name": "Set List_Table_G0",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get List Refresh_G0",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "List_Table_G0",
							"value": {
								"value": "@concat(activity('Get List Refresh_G0').output.firstRow.AAA)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Refresh AS_G0",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set List_Table_G0",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "REFRESH AS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RefreshRequestBody": {
									"value": "@variables('List_Table_G0')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Start AS",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "RESUME AS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Get List Refresh_G1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Refresh AS_G0",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[ADF].[proc_ETL_REFRESH_SSAS]",
								"storedProcedureParameters": {
									"group_name": {
										"type": "String",
										"value": "G1"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_DWH_SYNAPSE_ADF",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "ETL_REFRESH_SSAS"
								}
							}
						}
					},
					{
						"name": "Set List_Table_G1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get List Refresh_G1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "List_Table_G1",
							"value": {
								"value": "@concat(activity('Get List Refresh_G1').output.firstRow.AAA)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Refresh AS_G1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set List_Table_G1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "REFRESH AS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RefreshRequestBody": {
									"value": "@variables('List_Table_G1')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Get List Refresh_G2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Refresh AS_G1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[ADF].[proc_ETL_REFRESH_SSAS]",
								"storedProcedureParameters": {
									"group_name": {
										"type": "String",
										"value": "G2"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_DWH_SYNAPSE_ADF",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "ETL_REFRESH_SSAS"
								}
							}
						}
					},
					{
						"name": "Set List_Table_G2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get List Refresh_G2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "List_Table_G2",
							"value": {
								"value": "@concat(activity('Get List Refresh_G2').output.firstRow.AAA)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Refresh AS_G2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set List_Table_G2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "REFRESH AS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RefreshRequestBody": {
									"value": "@variables('List_Table_G2')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Get List Refresh_G3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Refresh AS_G2",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[ADF].[proc_ETL_REFRESH_SSAS]",
								"storedProcedureParameters": {
									"group_name": {
										"type": "String",
										"value": "G3"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_DWH_SYNAPSE_ADF",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "ETL_REFRESH_SSAS"
								}
							}
						}
					},
					{
						"name": "Set List_Table_G3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get List Refresh_G3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "List_Table_G3",
							"value": {
								"value": "@concat(activity('Get List Refresh_G3').output.firstRow.AAA)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Refresh AS_G3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set List_Table_G3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "REFRESH AS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RefreshRequestBody": {
									"value": "@variables('List_Table_G3')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Get List Refresh_G4",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Refresh AS_G3",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[ADF].[proc_ETL_REFRESH_SSAS]",
								"storedProcedureParameters": {
									"group_name": {
										"type": "String",
										"value": "G4"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_DWH_SYNAPSE_ADF",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "ETL_REFRESH_SSAS"
								}
							}
						}
					},
					{
						"name": "Set List_Table_G4",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get List Refresh_G4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "List_Table_G4",
							"value": {
								"value": "@concat(activity('Get List Refresh_G4').output.firstRow.AAA)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Refresh AS_G4",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set List_Table_G4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "REFRESH AS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RefreshRequestBody": {
									"value": "@variables('List_Table_G4')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Get List Refresh_G5",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Refresh AS_G4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[ADF].[proc_ETL_REFRESH_SSAS]",
								"storedProcedureParameters": {
									"group_name": {
										"type": "String",
										"value": "G5"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_DWH_SYNAPSE_ADF",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "ETL_REFRESH_SSAS"
								}
							}
						}
					},
					{
						"name": "Set List_Table_G5",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get List Refresh_G5",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "List_Table_G5",
							"value": {
								"value": "@concat(activity('Get List Refresh_G5').output.firstRow.AAA)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Refresh AS_G5",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set List_Table_G5",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "REFRESH AS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RefreshRequestBody": {
									"value": "@variables('List_Table_G5')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SEND ERROR MESSAGE Start AS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Start AS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SEND ERROR EMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ErrorMessage": {
									"value": "@activity('Start AS').Error.message",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SEND ERROR MESSAGE Get List Refresh_G0",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get List Refresh_G0",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SEND ERROR EMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ErrorMessage": {
									"value": "@activity('Get List Refresh_G0').Error.message",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SEND ERROR MESSAGE Refresh AS_G0",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Refresh AS_G0",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SEND ERROR EMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ErrorMessage": {
									"value": "@activity('Refresh AS_G0').Error.message",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SEND ERROR MESSAGE Get List Refresh_G1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get List Refresh_G1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SEND ERROR EMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ErrorMessage": {
									"value": "@activity('Get List Refresh_G1').Error.message",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SEND ERROR MESSAGE Refresh AS_G1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Refresh AS_G1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SEND ERROR EMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ErrorMessage": {
									"value": "@activity('Refresh AS_G1').Error.message",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SEND ERROR MESSAGE Get List Refresh_G2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get List Refresh_G2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SEND ERROR EMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ErrorMessage": {
									"value": "@activity('Get List Refresh_G2').Error.message",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SEND ERROR MESSAGE Refresh AS_G2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Refresh AS_G2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SEND ERROR EMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ErrorMessage": {
									"value": "@activity('Refresh AS_G2').Error.message",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SEND ERROR MESSAGE Get List Refresh_G3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get List Refresh_G3",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SEND ERROR EMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ErrorMessage": {
									"value": "@activity('Get List Refresh_G3').Error.message",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SEND ERROR MESSAGE Refresh AS_G3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Refresh AS_G3",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SEND ERROR EMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ErrorMessage": {
									"value": "@activity('Refresh AS_G3').Error.message",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SEND ERROR MESSAGE Get List Refresh_G4",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get List Refresh_G4",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SEND ERROR EMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ErrorMessage": {
									"value": "@activity('Get List Refresh_G4').Error.message",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SEND ERROR MESSAGE Refresh AS_G3_copy1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Refresh AS_G4",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SEND ERROR EMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ErrorMessage": {
									"value": "@activity('Refresh AS_G4').Error.message",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SEND ERROR MESSAGE Get List Refresh_G5",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get List Refresh_G5",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SEND ERROR EMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ErrorMessage": {
									"value": "@activity('Get List Refresh_G5').Error.message",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SEND ERROR MESSAGE Refresh AS_G5",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Refresh AS_G5",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SEND ERROR EMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ErrorMessage": {
									"value": "@activity('Refresh AS_G5').Error.message",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"List_Table_G0": {
						"type": "String"
					},
					"List_Table_G1": {
						"type": "String"
					},
					"List_Table_G2": {
						"type": "String"
					},
					"List_Table_G3": {
						"type": "String"
					},
					"List_Table_G4": {
						"type": "String"
					},
					"List_Table_G5": {
						"type": "String"
					}
				},
				"folder": {
					"name": "AZURE AS"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-24T03:03:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VUS_PLP_GROUP_00')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup SRC List",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT [JOB_SCRIPT] AS [SRC_LIST], [SOURCE_TABLE] AS [SRC_TBL], [TARGET_TABLE] AS [TGT_TBL] \nFROM [ADF].[ETL_JOB] WHERE ACTIVE_FLG ='Y' AND JOB_GROUP='PLP' AND JOB_SUB_GROUP='PLP - G00' ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_DWH_SYNAPSE_STAGING",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "ADF.ETL_JOB"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup SRC List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup SRC List').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Source Script",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Source_Script",
										"value": {
											"value": "@{Item().SRC_LIST}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SIL Store Procedure",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Set Target Table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@variables('Source_Script')",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"p_batch_id": {
												"value": {
													"value": "@pipeline().parameters.BATCH_ID",
													"type": "Expression"
												},
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_DWH_SYNAPSE_DEV",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set Target Table",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Source Script",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Target_Table",
										"value": {
											"value": "@{Item().TGT_TBL}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SEND ERROR MESSAGE",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Set Source Script",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "Set Target Table",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "SIL Store Procedure",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SEND ERROR EMAIL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ErrorMessage": {
												"value": "@item().Error.message",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "SEND ERROR MESSAGE LOOKUP SRC LIST",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lookup SRC List",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SEND ERROR EMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ErrorMessage": {
									"value": "@activity('Lookup SRC List').Error.message",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"BATCH_ID": {
						"type": "string",
						"defaultValue": "19000101"
					},
					"TGT_TABLE": {
						"type": "string"
					}
				},
				"variables": {
					"Source_Script": {
						"type": "String"
					},
					"Target_Table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "VUS_ETL"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-29T07:59:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VUS_PLP_GROUP_01')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup SRC List",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT [JOB_SCRIPT] AS [SRC_LIST], [SOURCE_TABLE] AS [SRC_TBL], [TARGET_TABLE] AS [TGT_TBL] \nFROM [ADF].[ETL_JOB] WHERE ACTIVE_FLG ='Y' AND JOB_GROUP='PLP' AND JOB_SUB_GROUP='PLP - G01' ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_DWH_SYNAPSE_STAGING",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "ADF.ETL_JOB"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup SRC List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup SRC List').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Source Script",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Source_Script",
										"value": {
											"value": "@{Item().SRC_LIST}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SIL Store Procedure",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Set Target Table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@variables('Source_Script')",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"p_batch_id": {
												"value": {
													"value": "@pipeline().parameters.BATCH_ID",
													"type": "Expression"
												},
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_DWH_SYNAPSE_DEV",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set Target Table",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Source Script",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Target_Table",
										"value": {
											"value": "@{Item().TGT_TBL}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SEND ERROR MESSAGE",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Set Source Script",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "Set Target Table",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "SIL Store Procedure",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SEND ERROR EMAIL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ErrorMessage": {
												"value": "@item().Error.message",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "SEND ERROR MESSAGE LOOKUP SRC LIST",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lookup SRC List",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SEND ERROR EMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ErrorMessage": {
									"value": "@activity('Lookup SRC List').Error.message",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"BATCH_ID": {
						"type": "string",
						"defaultValue": "19000101"
					},
					"TGT_TABLE": {
						"type": "string"
					}
				},
				"variables": {
					"Source_Script": {
						"type": "String"
					},
					"Target_Table": {
						"type": "String"
					},
					"Error_Message": {
						"type": "String"
					}
				},
				"folder": {
					"name": "VUS_ETL"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-29T07:59:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VUS_PLP_GROUP_02')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup SRC List",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT [JOB_SCRIPT] AS [SRC_LIST], [SOURCE_TABLE] AS [SRC_TBL], [TARGET_TABLE] AS [TGT_TBL] \nFROM [ADF].[ETL_JOB] WHERE ACTIVE_FLG ='Y' AND JOB_GROUP='PLP' AND JOB_SUB_GROUP='PLP - G02' ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_DWH_SYNAPSE_STAGING",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "ADF.ETL_JOB"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup SRC List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup SRC List').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Source Script",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Source_Script",
										"value": {
											"value": "@{Item().SRC_LIST}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SIL Store Procedure",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Set Target Table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@variables('Source_Script')",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"p_batch_id": {
												"value": {
													"value": "@pipeline().parameters.BATCH_ID",
													"type": "Expression"
												},
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_DWH_SYNAPSE_DEV",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set Target Table",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Source Script",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Target_Table",
										"value": {
											"value": "@{Item().TGT_TBL}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SEND ERROR MESSAGE",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Set Source Script",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "Set Target Table",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "SIL Store Procedure",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SEND ERROR EMAIL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ErrorMessage": {
												"value": "@item().Error.message",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "SEND ERROR MESSAGE LOOKUP SRC LIST",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lookup SRC List",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SEND ERROR EMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ErrorMessage": {
									"value": "@activity('Lookup SRC List').Error.message",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"BATCH_ID": {
						"type": "string",
						"defaultValue": "19000101"
					},
					"TGT_TABLE": {
						"type": "string"
					}
				},
				"variables": {
					"Source_Script": {
						"type": "String"
					},
					"Target_Table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "VUS_ETL"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-29T07:59:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VUS_PLP_GROUP_03')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup SRC List",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT [JOB_SCRIPT] AS [SRC_LIST], [SOURCE_TABLE] AS [SRC_TBL], [TARGET_TABLE] AS [TGT_TBL] \nFROM [ADF].[ETL_JOB] WHERE ACTIVE_FLG ='Y' AND JOB_GROUP='PLP' AND JOB_SUB_GROUP='PLP - G03' ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_DWH_SYNAPSE_STAGING",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "ADF.ETL_JOB"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup SRC List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup SRC List').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Source Script",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Source_Script_G3",
										"value": {
											"value": "@{Item().SRC_LIST}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SIL Store Procedure",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Set Target Table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@variables('Source_Script_G3')",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"p_batch_id": {
												"value": {
													"value": "@pipeline().parameters.BATCH_ID",
													"type": "Expression"
												},
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_DWH_SYNAPSE_DEV",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set Target Table",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Source Script",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Target_Table_G3",
										"value": {
											"value": "@{Item().TGT_TBL}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SEND ERROR MESSAGE",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Set Source Script",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "Set Target Table",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "SIL Store Procedure",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SEND ERROR EMAIL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ErrorMessage": {
												"value": "@item().Error.message",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "SEND ERROR MESSAGE LOOKUP SRC LIST",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lookup SRC List",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SEND ERROR EMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ErrorMessage": {
									"value": "@activity('Lookup SRC List').Error.message",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"BATCH_ID": {
						"type": "string",
						"defaultValue": "19000101"
					},
					"TGT_TABLE": {
						"type": "string"
					}
				},
				"variables": {
					"Source_Script_G3": {
						"type": "String"
					},
					"Target_Table_G3": {
						"type": "String"
					}
				},
				"folder": {
					"name": "VUS_ETL"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-30T10:44:47Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VUS_SIL_GENERAL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup SRC List",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT [JOB_SCRIPT] AS [SRC_LIST], [SOURCE_TABLE] AS [SRC_TBL], [TARGET_TABLE] AS [TGT_TBL] \nFROM [ADF].[ETL_JOB] WHERE ACTIVE_FLG ='Y' and JOB_GROUP ='SIL' and JOB_SUB_GROUP ='SIL - General'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_DWH_SYNAPSE_STAGING",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "ADF.ETL_JOB"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup SRC List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup SRC List').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Source Script",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Source_Script",
										"value": {
											"value": "@{Item().SRC_LIST}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SIL Store Procedure",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Set Target Table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@variables('Source_Script')",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"p_batch_id": {
												"value": {
													"value": "@pipeline().parameters.BATCH_ID",
													"type": "Expression"
												},
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_DWH_SYNAPSE_DEV",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set Target Table",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Source Script",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Target_Table",
										"value": {
											"value": "@{Item().TGT_TBL}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SEND ERROR MESSAGE",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Set Source Script",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "Set Target Table",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "SIL Store Procedure",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SEND ERROR EMAIL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ErrorMessage": {
												"value": "@item().errors[0].Message",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "SEND ERROR MESSAGE LOOKUP SRC LIST",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lookup SRC List",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SEND ERROR EMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ErrorMessage": {
									"value": "@activity('Lookup SRC List').output.errors[0].Message",
									"type": "Expression"
								}
							}
						}
					}
				],
				"concurrency": 6,
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"BATCH_ID": {
						"type": "string",
						"defaultValue": "19000101"
					}
				},
				"variables": {
					"Source_Script": {
						"type": "String"
					},
					"Target_Table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "VUS_ETL"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-06T15:40:33Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VUS_SIL_GROUP_ASA 01')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup SRC List",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT [JOB_SCRIPT] AS [SRC_LIST], [SOURCE_TABLE] AS [SRC_TBL], [TARGET_TABLE] AS [TGT_TBL] \nFROM [ADF].[ETL_JOB] WHERE ACTIVE_FLG ='Y' and JOB_GROUP ='SIL' and JOB_SUB_GROUP ='SIL - ASA 01'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_DWH_SYNAPSE_STAGING",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "ADF.ETL_JOB"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup SRC List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup SRC List').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Source Script",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Source_Script",
										"value": {
											"value": "@{Item().SRC_LIST}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SIL Store Procedure",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Set Target Table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@variables('Source_Script')",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"p_batch_id": {
												"value": {
													"value": "@pipeline().parameters.BATCH_ID",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"p_target_table": {
												"value": {
													"value": "@variables('Target_Table')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_DWH_SYNAPSE_DEV",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set Target Table",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Source Script",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Target_Table",
										"value": {
											"value": "@{Item().TGT_TBL}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SEND ERROR MESSAGE",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Set Source Script",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "Set Target Table",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "SIL Store Procedure",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SEND ERROR EMAIL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ErrorMessage": {
												"value": "@item().errors[0].Message",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "SEND ERROR MESSAGE LOOKUP SRC LIST",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lookup SRC List",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SEND ERROR EMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ErrorMessage": {
									"value": "@activity('Lookup SRC List').output.errors[0].Message",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"BATCH_ID": {
						"type": "string",
						"defaultValue": "19000101"
					},
					"TGT_TABLE": {
						"type": "string"
					}
				},
				"variables": {
					"Source_Script": {
						"type": "String"
					},
					"Target_Table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "VUS_ETL"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-29T13:30:51Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VUS_SIL_GROUP_ASA 02')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup SRC List",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT [JOB_SCRIPT] AS [SRC_LIST], [SOURCE_TABLE] AS [SRC_TBL], [TARGET_TABLE] AS [TGT_TBL] \nFROM [ADF].[ETL_JOB] WHERE ACTIVE_FLG ='Y' and JOB_GROUP ='SIL' and JOB_SUB_GROUP ='SIL - ASA 02'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_DWH_SYNAPSE_STAGING",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "ADF.ETL_JOB"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup SRC List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup SRC List').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Source Script",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Source_Script",
										"value": {
											"value": "@{Item().SRC_LIST}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SIL Store Procedure",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Set Target Table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@variables('Source_Script')",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"p_batch_id": {
												"value": {
													"value": "@pipeline().parameters.BATCH_ID",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"p_target_table": {
												"value": {
													"value": "@variables('Target_Table')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_DWH_SYNAPSE_DEV",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set Target Table",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Source Script",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Target_Table",
										"value": {
											"value": "@{Item().TGT_TBL}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SEND ERROR MESSAGE",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Set Source Script",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "Set Target Table",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "SIL Store Procedure",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SEND ERROR EMAIL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ErrorMessage": {
												"value": "@item().Error.message",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "SEND ERROR MESSAGE LOOKUP SRC LIST",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lookup SRC List",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SEND ERROR EMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ErrorMessage": {
									"value": "@activity('Lookup SRC List').Error.message",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"BATCH_ID": {
						"type": "string",
						"defaultValue": "19000101"
					},
					"TGT_TABLE": {
						"type": "string"
					}
				},
				"variables": {
					"Source_Script": {
						"type": "String"
					},
					"Target_Table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "VUS_ETL"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-29T13:30:51Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VUS_SIL_GROUP_ASA 03')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup SRC List",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT [JOB_SCRIPT] AS [SRC_LIST], [SOURCE_TABLE] AS [SRC_TBL], [TARGET_TABLE] AS [TGT_TBL] \nFROM [ADF].[ETL_JOB] WHERE ACTIVE_FLG ='Y' and JOB_GROUP ='SIL' and JOB_SUB_GROUP ='SIL - ASA 03'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_DWH_SYNAPSE_STAGING",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "ADF.ETL_JOB"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup SRC List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup SRC List').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Source Script",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Source_Script",
										"value": {
											"value": "@{Item().SRC_LIST}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SIL Store Procedure",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Set Target Table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@variables('Source_Script')",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"p_batch_id": {
												"value": {
													"value": "@pipeline().parameters.BATCH_ID",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"p_target_table": {
												"value": {
													"value": "@variables('Target_Table')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_DWH_SYNAPSE_DEV",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set Target Table",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Source Script",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Target_Table",
										"value": {
											"value": "@{Item().TGT_TBL}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SEND ERROR MESSAGE",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Set Source Script",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "Set Target Table",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "SIL Store Procedure",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SEND ERROR EMAIL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ErrorMessage": {
												"value": "@item().Error.message",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "SEND ERROR MESSAGE LOOKUP SRC LIST",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lookup SRC List",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SEND ERROR EMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ErrorMessage": {
									"value": "@activity('Lookup SRC List').Error.message",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"BATCH_ID": {
						"type": "string",
						"defaultValue": "19000101"
					},
					"TGT_TABLE": {
						"type": "string"
					}
				},
				"variables": {
					"Source_Script": {
						"type": "String"
					},
					"Target_Table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "VUS_ETL"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-29T13:30:51Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VUS_SIL_GROUP_ASA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup SRC List",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT [JOB_SCRIPT] AS [SRC_LIST], [SOURCE_TABLE] AS [SRC_TBL], [TARGET_TABLE] AS [TGT_TBL] \nFROM [ADF].[ETL_JOB] WHERE ACTIVE_FLG ='Y' and JOB_GROUP ='SIL' and JOB_SUB_GROUP ='SIL - ASA'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_DWH_SYNAPSE_STAGING",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "ADF.ETL_JOB"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup SRC List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup SRC List').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Source Script",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Source_Script",
										"value": {
											"value": "@{Item().SRC_LIST}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SIL Store Procedure",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Set Target Table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@variables('Source_Script')",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"p_batch_id": {
												"value": {
													"value": "@pipeline().parameters.BATCH_ID",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"p_target_table": {
												"value": {
													"value": "@variables('Target_Table')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_DWH_SYNAPSE_DEV",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set Target Table",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Source Script",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Target_Table",
										"value": {
											"value": "@{Item().TGT_TBL}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SEND ERROR MESSAGE",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Set Source Script",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "Set Target Table",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "SIL Store Procedure",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SEND ERROR EMAIL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ErrorMessage": {
												"value": "@item().errors[0].Message",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "SEND ERROR MESSAGE LOOKUP SRC LIST",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lookup SRC List",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SEND ERROR EMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ErrorMessage": {
									"value": "@activity('Lookup SRC List').output.errors[0].Message",
									"type": "Expression"
								}
							}
						}
					}
				],
				"concurrency": 6,
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"BATCH_ID": {
						"type": "string",
						"defaultValue": "19000101"
					},
					"TGT_TABLE": {
						"type": "string"
					}
				},
				"variables": {
					"Source_Script": {
						"type": "String"
					},
					"Target_Table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "VUS_ETL"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-29T16:45:08Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VUS_SIL_GROUP_CRM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup SRC List",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT [JOB_SCRIPT] AS [SRC_LIST], [SOURCE_TABLE] AS [SRC_TBL], [TARGET_TABLE] AS [TGT_TBL] \nFROM [ADF].[ETL_JOB] WHERE ACTIVE_FLG ='Y' and JOB_GROUP ='SIL' and JOB_SUB_GROUP ='SIL - CRM'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_DWH_SYNAPSE_STAGING",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "ADF.ETL_JOB"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup SRC List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup SRC List').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Source Script",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Source_Script",
										"value": {
											"value": "@{Item().SRC_LIST}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SIL Store Procedure",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Set Target Table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@variables('Source_Script')",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"p_batch_id": {
												"value": {
													"value": "@pipeline().parameters.BATCH_ID",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"p_target_table": {
												"value": {
													"value": "@variables('Target_Table')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_DWH_SYNAPSE_DEV",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set Target Table",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Source Script",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Target_Table",
										"value": {
											"value": "@{Item().TGT_TBL}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SEND ERROR MESSAGE",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Set Source Script",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "Set Target Table",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "SIL Store Procedure",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SEND ERROR EMAIL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ErrorMessage": {
												"value": "@item().Error.message",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "SEND ERROR MESSAGE LOOKUP SRC LIST",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lookup SRC List",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SEND ERROR EMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ErrorMessage": {
									"value": "@activity('Lookup SRC List').Error.message",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"BATCH_ID": {
						"type": "string",
						"defaultValue": "19000101"
					},
					"TGT_TABLE": {
						"type": "string"
					}
				},
				"variables": {
					"Source_Script": {
						"type": "String"
					},
					"Target_Table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "VUS_ETL"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-29T07:58:30Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VUS_SIL_GROUP_QLGV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup SRC List",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT [JOB_SCRIPT] AS [SRC_LIST], [SOURCE_TABLE] AS [SRC_TBL], [TARGET_TABLE] AS [TGT_TBL] \nFROM [ADF].[ETL_JOB] WHERE ACTIVE_FLG ='Y' and JOB_GROUP ='SIL' and JOB_SUB_GROUP ='SIL - QLGV'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_DWH_SYNAPSE_STAGING",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "ADF.ETL_JOB"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup SRC List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup SRC List').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Source Script",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Source_Script",
										"value": {
											"value": "@{Item().SRC_LIST}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SIL Store Procedure",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Set Target Table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@variables('Source_Script')",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"p_batch_id": {
												"value": {
													"value": "@pipeline().parameters.BATCH_ID",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"p_target_table": {
												"value": {
													"value": "@variables('Target_Table')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_DWH_SYNAPSE_DEV",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set Target Table",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Source Script",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Target_Table",
										"value": {
											"value": "@{Item().TGT_TBL}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SEND ERROR MESSAGE",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Set Source Script",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "Set Target Table",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "SIL Store Procedure",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SEND ERROR EMAIL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ErrorMessage": {
												"value": "@item().Error.message",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "SEND ERROR MESSAGE LOOKUP SRC LIST",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lookup SRC List",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SEND ERROR EMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ErrorMessage": {
									"value": "@activity('Lookup SRC List').Error.message",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"BATCH_ID": {
						"type": "string",
						"defaultValue": "19000101"
					},
					"TGT_TABLE": {
						"type": "string"
					}
				},
				"variables": {
					"Source_Script": {
						"type": "String"
					},
					"Target_Table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "VUS_ETL"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-29T07:58:30Z"
			},
			"dependsOn": []
		}
	]
}